# Configuration options for clang-tidy
# CSS Linux machines, Sep 2019: LLVM version 3.8.1
#
# usage: clang-tidy *.cpp -- -std=c++14
#
#
---
# See https://clang.llvm.org/extra/clang-tidy/#using-clang-tidy for all possible checks
Checks: '-*,
clang-analyzer-core*,
clang-analyzer-cplusplus*,
clang-analyzer-optin.cplusplus*,
bugprone-*,
-bugprone-narrowing-conversions,
-bugprone-macro-parentheses,
-bugprone-exception-escape,
-bugprone-branch-clone,
performance-*,
readability-identifier-naming*'

HeaderFilterRegex: '^?!(.*/depends/.*|.*/build/.*)$'
FormatStyle: file
CheckOptions:
#- { key: readability-identifier-naming.ClassCase,           value: CamelCase  }
#- { key: readability-identifier-naming.StructCase,          value: CamelCase  }
#- { key: readability-identifier-naming.EnumCase,            value: CamelCase  }
#- { key: readability-identifier-naming.GlobalConstantCase,  value: UPPER_CASE }

#- { key: readability-identifier-naming.VariableCase,        value: lower_case  }
#- { key: readability-identifier-naming.ParameterCase,       value: lower_case  }
#- { key: readability-identifier-naming.PublicMemberCase,    value: lower_case  }

# No good consensus on function names problem.isFinished() and GetInputFromUser() are both good
#- { key: readability-identifier-naming.FunctionCase,        value: CamelCase  }
#- { key: readability-identifier-naming.PublicMethodCase,    value: CamelCase  }
#- { key: readability-identifier-naming.PrivateMethodCase,   value: CamelCase  }

