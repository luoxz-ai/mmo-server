// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sql_options/sql_options.proto

#include "sql_options/sql_options.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_sql_5foptions_2fsql_5foptions_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SqlOptions_sql_5foptions_2fsql_5foptions_2eproto;
class SqlOptionsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SqlOptions> _instance;
} _SqlOptions_default_instance_;
static void InitDefaultsscc_info_SqlOptions_sql_5foptions_2fsql_5foptions_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_SqlOptions_default_instance_;
    new (ptr) ::SqlOptions();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::SqlOptions::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SqlOptions_sql_5foptions_2fsql_5foptions_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SqlOptions_sql_5foptions_2fsql_5foptions_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_sql_5foptions_2fsql_5foptions_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_sql_5foptions_2fsql_5foptions_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_sql_5foptions_2fsql_5foptions_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_sql_5foptions_2fsql_5foptions_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::SqlOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::SqlOptions, size_),
  PROTOBUF_FIELD_OFFSET(::SqlOptions, auto_increment_),
  PROTOBUF_FIELD_OFFSET(::SqlOptions, primary_key_),
  PROTOBUF_FIELD_OFFSET(::SqlOptions, keys_),
  PROTOBUF_FIELD_OFFSET(::SqlOptions, default_val_),
  PROTOBUF_FIELD_OFFSET(::SqlOptions, unique_),
  PROTOBUF_FIELD_OFFSET(::SqlOptions, int_size_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::SqlOptions)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_SqlOptions_default_instance_),
};

const char descriptor_table_protodef_sql_5foptions_2fsql_5foptions_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\035sql_options/sql_options.proto\032 google/"
  "protobuf/descriptor.proto\"\214\001\n\nSqlOptions"
  "\022\014\n\004size\030\001 \001(\r\022\026\n\016auto_increment\030\002 \001(\010\022\023"
  "\n\013primary_key\030\003 \001(\t\022\014\n\004keys\030\004 \001(\t\022\023\n\013def"
  "ault_val\030\005 \001(\t\022\016\n\006unique\030\006 \001(\t\022\020\n\010int_si"
  "ze\030\007 \001(\r:8\n\003sql\022\035.google.protobuf.FieldO"
  "ptions\030\362\007 \001(\0132\013.SqlOptionsb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_sql_5foptions_2fsql_5foptions_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fdescriptor_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_sql_5foptions_2fsql_5foptions_2eproto_sccs[1] = {
  &scc_info_SqlOptions_sql_5foptions_2fsql_5foptions_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_sql_5foptions_2fsql_5foptions_2eproto_once;
static bool descriptor_table_sql_5foptions_2fsql_5foptions_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_sql_5foptions_2fsql_5foptions_2eproto = {
  &descriptor_table_sql_5foptions_2fsql_5foptions_2eproto_initialized, descriptor_table_protodef_sql_5foptions_2fsql_5foptions_2eproto, "sql_options/sql_options.proto", 274,
  &descriptor_table_sql_5foptions_2fsql_5foptions_2eproto_once, descriptor_table_sql_5foptions_2fsql_5foptions_2eproto_sccs, descriptor_table_sql_5foptions_2fsql_5foptions_2eproto_deps, 1, 1,
  schemas, file_default_instances, TableStruct_sql_5foptions_2fsql_5foptions_2eproto::offsets,
  file_level_metadata_sql_5foptions_2fsql_5foptions_2eproto, 1, file_level_enum_descriptors_sql_5foptions_2fsql_5foptions_2eproto, file_level_service_descriptors_sql_5foptions_2fsql_5foptions_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_sql_5foptions_2fsql_5foptions_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_sql_5foptions_2fsql_5foptions_2eproto), true);

// ===================================================================

void SqlOptions::InitAsDefaultInstance() {
}
class SqlOptions::_Internal {
 public:
};

SqlOptions::SqlOptions()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SqlOptions)
}
SqlOptions::SqlOptions(const SqlOptions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  primary_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_primary_key().empty()) {
    primary_key_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.primary_key_);
  }
  keys_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_keys().empty()) {
    keys_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.keys_);
  }
  default_val_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_default_val().empty()) {
    default_val_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.default_val_);
  }
  unique_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_unique().empty()) {
    unique_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.unique_);
  }
  ::memcpy(&size_, &from.size_,
    static_cast<size_t>(reinterpret_cast<char*>(&int_size_) -
    reinterpret_cast<char*>(&size_)) + sizeof(int_size_));
  // @@protoc_insertion_point(copy_constructor:SqlOptions)
}

void SqlOptions::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SqlOptions_sql_5foptions_2fsql_5foptions_2eproto.base);
  primary_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  keys_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  default_val_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  unique_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&int_size_) -
      reinterpret_cast<char*>(&size_)) + sizeof(int_size_));
}

SqlOptions::~SqlOptions() {
  // @@protoc_insertion_point(destructor:SqlOptions)
  SharedDtor();
}

void SqlOptions::SharedDtor() {
  primary_key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  keys_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  default_val_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  unique_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SqlOptions::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SqlOptions& SqlOptions::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SqlOptions_sql_5foptions_2fsql_5foptions_2eproto.base);
  return *internal_default_instance();
}


void SqlOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:SqlOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  primary_key_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  keys_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  default_val_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  unique_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&size_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&int_size_) -
      reinterpret_cast<char*>(&size_)) + sizeof(int_size_));
  _internal_metadata_.Clear();
}

const char* SqlOptions::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 size = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool auto_increment = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          auto_increment_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string primary_key = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_primary_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "SqlOptions.primary_key"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string keys = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_keys();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "SqlOptions.keys"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string default_val = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_default_val();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "SqlOptions.default_val"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string unique = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_unique();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "SqlOptions.unique"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 int_size = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          int_size_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SqlOptions::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:SqlOptions)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 size = 1;
  if (this->size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_size(), target);
  }

  // bool auto_increment = 2;
  if (this->auto_increment() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_auto_increment(), target);
  }

  // string primary_key = 3;
  if (this->primary_key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_primary_key().data(), static_cast<int>(this->_internal_primary_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SqlOptions.primary_key");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_primary_key(), target);
  }

  // string keys = 4;
  if (this->keys().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_keys().data(), static_cast<int>(this->_internal_keys().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SqlOptions.keys");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_keys(), target);
  }

  // string default_val = 5;
  if (this->default_val().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_default_val().data(), static_cast<int>(this->_internal_default_val().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SqlOptions.default_val");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_default_val(), target);
  }

  // string unique = 6;
  if (this->unique().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_unique().data(), static_cast<int>(this->_internal_unique().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "SqlOptions.unique");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_unique(), target);
  }

  // uint32 int_size = 7;
  if (this->int_size() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_int_size(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:SqlOptions)
  return target;
}

size_t SqlOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:SqlOptions)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string primary_key = 3;
  if (this->primary_key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_primary_key());
  }

  // string keys = 4;
  if (this->keys().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_keys());
  }

  // string default_val = 5;
  if (this->default_val().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_default_val());
  }

  // string unique = 6;
  if (this->unique().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_unique());
  }

  // uint32 size = 1;
  if (this->size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_size());
  }

  // bool auto_increment = 2;
  if (this->auto_increment() != 0) {
    total_size += 1 + 1;
  }

  // uint32 int_size = 7;
  if (this->int_size() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_int_size());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SqlOptions::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SqlOptions)
  GOOGLE_DCHECK_NE(&from, this);
  const SqlOptions* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SqlOptions>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SqlOptions)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SqlOptions)
    MergeFrom(*source);
  }
}

void SqlOptions::MergeFrom(const SqlOptions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SqlOptions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.primary_key().size() > 0) {

    primary_key_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.primary_key_);
  }
  if (from.keys().size() > 0) {

    keys_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.keys_);
  }
  if (from.default_val().size() > 0) {

    default_val_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.default_val_);
  }
  if (from.unique().size() > 0) {

    unique_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.unique_);
  }
  if (from.size() != 0) {
    _internal_set_size(from._internal_size());
  }
  if (from.auto_increment() != 0) {
    _internal_set_auto_increment(from._internal_auto_increment());
  }
  if (from.int_size() != 0) {
    _internal_set_int_size(from._internal_int_size());
  }
}

void SqlOptions::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SqlOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SqlOptions::CopyFrom(const SqlOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SqlOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SqlOptions::IsInitialized() const {
  return true;
}

void SqlOptions::InternalSwap(SqlOptions* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  primary_key_.Swap(&other->primary_key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  keys_.Swap(&other->keys_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  default_val_.Swap(&other->default_val_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  unique_.Swap(&other->unique_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(size_, other->size_);
  swap(auto_increment_, other->auto_increment_);
  swap(int_size_, other->int_size_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SqlOptions::GetMetadata() const {
  return GetMetadataStatic();
}

::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::SqlOptions >, 11, false >
  sql(kSqlFieldNumber, *::SqlOptions::internal_default_instance());

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::SqlOptions* Arena::CreateMaybeMessage< ::SqlOptions >(Arena* arena) {
  return Arena::CreateInternal< ::SqlOptions >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
