// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: db_proto/gamedb.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_db_5fproto_2fgamedb_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_db_5fproto_2fgamedb_2eproto

#include <google/protobuf/port_def.inc>
#include <limits>
#include <string>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/extension_set.h> // IWYU pragma: export
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/message.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/repeated_field.h> // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>

#include "sql_options/sql_options.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_db_5fproto_2fgamedb_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal
{
    class AnyMetadata;
} // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_db_5fproto_2fgamedb_2eproto
{
    static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField          entries[] PROTOBUF_SECTION_VARIABLE(protodesc_cold);
    static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[] PROTOBUF_SECTION_VARIABLE(protodesc_cold);
    static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable               schema[16] PROTOBUF_SECTION_VARIABLE(protodesc_cold);
    static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata            field_metadata[];
    static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable       serialization_table[];
    static const ::PROTOBUF_NAMESPACE_ID::uint32                             offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_db_5fproto_2fgamedb_2eproto;
namespace db
{
    class tbld_achievement;
    class tbld_achievementDefaultTypeInternal;
    extern tbld_achievementDefaultTypeInternal _tbld_achievement_default_instance_;
    class tbld_commondata;
    class tbld_commondataDefaultTypeInternal;
    extern tbld_commondataDefaultTypeInternal _tbld_commondata_default_instance_;
    class tbld_cooldown;
    class tbld_cooldownDefaultTypeInternal;
    extern tbld_cooldownDefaultTypeInternal _tbld_cooldown_default_instance_;
    class tbld_datacount;
    class tbld_datacountDefaultTypeInternal;
    extern tbld_datacountDefaultTypeInternal _tbld_datacount_default_instance_;
    class tbld_global_mail;
    class tbld_global_mailDefaultTypeInternal;
    extern tbld_global_mailDefaultTypeInternal _tbld_global_mail_default_instance_;
    class tbld_guild;
    class tbld_guildDefaultTypeInternal;
    extern tbld_guildDefaultTypeInternal _tbld_guild_default_instance_;
    class tbld_item;
    class tbld_itemDefaultTypeInternal;
    extern tbld_itemDefaultTypeInternal _tbld_item_default_instance_;
    class tbld_mail;
    class tbld_mailDefaultTypeInternal;
    extern tbld_mailDefaultTypeInternal _tbld_mail_default_instance_;
    class tbld_mail_attachment;
    class tbld_mail_attachmentDefaultTypeInternal;
    extern tbld_mail_attachmentDefaultTypeInternal _tbld_mail_attachment_default_instance_;
    class tbld_pet;
    class tbld_petDefaultTypeInternal;
    extern tbld_petDefaultTypeInternal _tbld_pet_default_instance_;
    class tbld_player;
    class tbld_playerDefaultTypeInternal;
    extern tbld_playerDefaultTypeInternal _tbld_player_default_instance_;
    class tbld_player_guildinfo;
    class tbld_player_guildinfoDefaultTypeInternal;
    extern tbld_player_guildinfoDefaultTypeInternal _tbld_player_guildinfo_default_instance_;
    class tbld_skill;
    class tbld_skillDefaultTypeInternal;
    extern tbld_skillDefaultTypeInternal _tbld_skill_default_instance_;
    class tbld_status;
    class tbld_statusDefaultTypeInternal;
    extern tbld_statusDefaultTypeInternal _tbld_status_default_instance_;
    class tbld_systemvar;
    class tbld_systemvarDefaultTypeInternal;
    extern tbld_systemvarDefaultTypeInternal _tbld_systemvar_default_instance_;
    class tbld_task;
    class tbld_taskDefaultTypeInternal;
    extern tbld_taskDefaultTypeInternal _tbld_task_default_instance_;
} // namespace db
PROTOBUF_NAMESPACE_OPEN
template<>
::db::tbld_achievement* Arena::CreateMaybeMessage<::db::tbld_achievement>(Arena*);
template<>
::db::tbld_commondata* Arena::CreateMaybeMessage<::db::tbld_commondata>(Arena*);
template<>
::db::tbld_cooldown* Arena::CreateMaybeMessage<::db::tbld_cooldown>(Arena*);
template<>
::db::tbld_datacount* Arena::CreateMaybeMessage<::db::tbld_datacount>(Arena*);
template<>
::db::tbld_global_mail* Arena::CreateMaybeMessage<::db::tbld_global_mail>(Arena*);
template<>
::db::tbld_guild* Arena::CreateMaybeMessage<::db::tbld_guild>(Arena*);
template<>
::db::tbld_item* Arena::CreateMaybeMessage<::db::tbld_item>(Arena*);
template<>
::db::tbld_mail* Arena::CreateMaybeMessage<::db::tbld_mail>(Arena*);
template<>
::db::tbld_mail_attachment* Arena::CreateMaybeMessage<::db::tbld_mail_attachment>(Arena*);
template<>
::db::tbld_pet* Arena::CreateMaybeMessage<::db::tbld_pet>(Arena*);
template<>
::db::tbld_player* Arena::CreateMaybeMessage<::db::tbld_player>(Arena*);
template<>
::db::tbld_player_guildinfo* Arena::CreateMaybeMessage<::db::tbld_player_guildinfo>(Arena*);
template<>
::db::tbld_skill* Arena::CreateMaybeMessage<::db::tbld_skill>(Arena*);
template<>
::db::tbld_status* Arena::CreateMaybeMessage<::db::tbld_status>(Arena*);
template<>
::db::tbld_systemvar* Arena::CreateMaybeMessage<::db::tbld_systemvar>(Arena*);
template<>
::db::tbld_task* Arena::CreateMaybeMessage<::db::tbld_task>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace db
{

    // ===================================================================

    class tbld_commondata : public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:db.tbld_commondata) */
    {
    public:
        tbld_commondata();
        virtual ~tbld_commondata();

        tbld_commondata(const tbld_commondata& from);
        tbld_commondata(tbld_commondata&& from) noexcept
            : tbld_commondata()
        {
            *this = ::std::move(from);
        }

        inline tbld_commondata& operator=(const tbld_commondata& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline tbld_commondata& operator=(tbld_commondata&& from) noexcept
        {
            if(GetArenaNoVirtual() == from.GetArenaNoVirtual())
            {
                if(this != &from)
                    InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() { return GetDescriptor(); }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() { return GetMetadataStatic().descriptor; }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() { return GetMetadataStatic().reflection; }
        static const tbld_commondata&                     default_instance();

        static void                          InitAsDefaultInstance(); // FOR INTERNAL USE ONLY
        static inline const tbld_commondata* internal_default_instance()
        {
            return reinterpret_cast<const tbld_commondata*>(&_tbld_commondata_default_instance_);
        }
        static constexpr int kIndexInFileMessages = 0;

        friend void swap(tbld_commondata& a, tbld_commondata& b) { a.Swap(&b); }
        inline void Swap(tbld_commondata* other)
        {
            if(other == this)
                return;
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        inline tbld_commondata* New() const final { return CreateMaybeMessage<tbld_commondata>(nullptr); }

        tbld_commondata* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final { return CreateMaybeMessage<tbld_commondata>(arena); }
        void             CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
        void             MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
        void             CopyFrom(const tbld_commondata& from);
        void             MergeFrom(const tbld_commondata& from);
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool                                  IsInitialized() const final;

        size_t                          ByteSizeLong() const final;
        const char*                     _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(::PROTOBUF_NAMESPACE_ID::uint8*                   target,
                                                           ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
        int                             GetCachedSize() const final { return _cached_size_.Get(); }

    private:
        inline void SharedCtor();
        inline void SharedDtor();
        void        SetCachedSize(int size) const final;
        void        InternalSwap(tbld_commondata* other);
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() { return "db.tbld_commondata"; }

    private:
        inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const { return nullptr; }
        inline void*                           MaybeArenaPtr() const { return nullptr; }

    public:
        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

    private:
        static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic()
        {
            ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_db_5fproto_2fgamedb_2eproto);
            return ::descriptor_table_db_5fproto_2fgamedb_2eproto.file_level_metadata[kIndexInFileMessages];
        }

    public:
        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kIdFieldNumber       = 1,
            kPlayeridFieldNumber = 2,
            kKeytypeFieldNumber  = 3,
            kKeyidxFieldNumber   = 4,
            kData0FieldNumber    = 5,
            kData1FieldNumber    = 6,
            kData2FieldNumber    = 7,
            kData3FieldNumber    = 8,
        };
        // uint64 id = 1 [(.sql) = {
        void                            clear_id();
        ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
        void                            set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
        void                            _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint64 playerid = 2 [(.sql) = {
        void                            clear_playerid();
        ::PROTOBUF_NAMESPACE_ID::uint64 playerid() const;
        void                            set_playerid(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_playerid() const;
        void                            _internal_set_playerid(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint32 keytype = 3;
        void                            clear_keytype();
        ::PROTOBUF_NAMESPACE_ID::uint32 keytype() const;
        void                            set_keytype(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_keytype() const;
        void                            _internal_set_keytype(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 keyidx = 4;
        void                            clear_keyidx();
        ::PROTOBUF_NAMESPACE_ID::uint32 keyidx() const;
        void                            set_keyidx(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_keyidx() const;
        void                            _internal_set_keyidx(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint64 data0 = 5;
        void                            clear_data0();
        ::PROTOBUF_NAMESPACE_ID::uint64 data0() const;
        void                            set_data0(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_data0() const;
        void                            _internal_set_data0(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint64 data1 = 6;
        void                            clear_data1();
        ::PROTOBUF_NAMESPACE_ID::uint64 data1() const;
        void                            set_data1(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_data1() const;
        void                            _internal_set_data1(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint64 data2 = 7;
        void                            clear_data2();
        ::PROTOBUF_NAMESPACE_ID::uint64 data2() const;
        void                            set_data2(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_data2() const;
        void                            _internal_set_data2(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint64 data3 = 8;
        void                            clear_data3();
        ::PROTOBUF_NAMESPACE_ID::uint64 data3() const;
        void                            set_data3(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_data3() const;
        void                            _internal_set_data3(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // @@protoc_insertion_point(class_scope:db.tbld_commondata)
    private:
        class _Internal;

        ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              id_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              playerid_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              keytype_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              keyidx_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              data0_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              data1_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              data2_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              data3_;
        mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize        _cached_size_;
        friend struct ::TableStruct_db_5fproto_2fgamedb_2eproto;
    };
    // -------------------------------------------------------------------

    class tbld_cooldown : public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:db.tbld_cooldown) */
    {
    public:
        tbld_cooldown();
        virtual ~tbld_cooldown();

        tbld_cooldown(const tbld_cooldown& from);
        tbld_cooldown(tbld_cooldown&& from) noexcept
            : tbld_cooldown()
        {
            *this = ::std::move(from);
        }

        inline tbld_cooldown& operator=(const tbld_cooldown& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline tbld_cooldown& operator=(tbld_cooldown&& from) noexcept
        {
            if(GetArenaNoVirtual() == from.GetArenaNoVirtual())
            {
                if(this != &from)
                    InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() { return GetDescriptor(); }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() { return GetMetadataStatic().descriptor; }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() { return GetMetadataStatic().reflection; }
        static const tbld_cooldown&                       default_instance();

        static void                        InitAsDefaultInstance(); // FOR INTERNAL USE ONLY
        static inline const tbld_cooldown* internal_default_instance()
        {
            return reinterpret_cast<const tbld_cooldown*>(&_tbld_cooldown_default_instance_);
        }
        static constexpr int kIndexInFileMessages = 1;

        friend void swap(tbld_cooldown& a, tbld_cooldown& b) { a.Swap(&b); }
        inline void Swap(tbld_cooldown* other)
        {
            if(other == this)
                return;
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        inline tbld_cooldown* New() const final { return CreateMaybeMessage<tbld_cooldown>(nullptr); }

        tbld_cooldown* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final { return CreateMaybeMessage<tbld_cooldown>(arena); }
        void           CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
        void           MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
        void           CopyFrom(const tbld_cooldown& from);
        void           MergeFrom(const tbld_cooldown& from);
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool                                  IsInitialized() const final;

        size_t                          ByteSizeLong() const final;
        const char*                     _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(::PROTOBUF_NAMESPACE_ID::uint8*                   target,
                                                           ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
        int                             GetCachedSize() const final { return _cached_size_.Get(); }

    private:
        inline void SharedCtor();
        inline void SharedDtor();
        void        SetCachedSize(int size) const final;
        void        InternalSwap(tbld_cooldown* other);
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() { return "db.tbld_cooldown"; }

    private:
        inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const { return nullptr; }
        inline void*                           MaybeArenaPtr() const { return nullptr; }

    public:
        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

    private:
        static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic()
        {
            ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_db_5fproto_2fgamedb_2eproto);
            return ::descriptor_table_db_5fproto_2fgamedb_2eproto.file_level_metadata[kIndexInFileMessages];
        }

    public:
        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kIdFieldNumber         = 1,
            kPlayeridFieldNumber   = 2,
            kKeytypeFieldNumber    = 3,
            kKeyidxFieldNumber     = 4,
            kExpireTimeFieldNumber = 5,
        };
        // uint64 id = 1 [(.sql) = {
        void                            clear_id();
        ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
        void                            set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
        void                            _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint64 playerid = 2 [(.sql) = {
        void                            clear_playerid();
        ::PROTOBUF_NAMESPACE_ID::uint64 playerid() const;
        void                            set_playerid(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_playerid() const;
        void                            _internal_set_playerid(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint32 keytype = 3 [(.sql) = {
        void                            clear_keytype();
        ::PROTOBUF_NAMESPACE_ID::uint32 keytype() const;
        void                            set_keytype(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_keytype() const;
        void                            _internal_set_keytype(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 keyidx = 4 [(.sql) = {
        void                            clear_keyidx();
        ::PROTOBUF_NAMESPACE_ID::uint32 keyidx() const;
        void                            set_keyidx(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_keyidx() const;
        void                            _internal_set_keyidx(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 expire_time = 5;
        void                            clear_expire_time();
        ::PROTOBUF_NAMESPACE_ID::uint32 expire_time() const;
        void                            set_expire_time(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_expire_time() const;
        void                            _internal_set_expire_time(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // @@protoc_insertion_point(class_scope:db.tbld_cooldown)
    private:
        class _Internal;

        ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              id_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              playerid_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              keytype_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              keyidx_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              expire_time_;
        mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize        _cached_size_;
        friend struct ::TableStruct_db_5fproto_2fgamedb_2eproto;
    };
    // -------------------------------------------------------------------

    class tbld_datacount : public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:db.tbld_datacount) */
    {
    public:
        tbld_datacount();
        virtual ~tbld_datacount();

        tbld_datacount(const tbld_datacount& from);
        tbld_datacount(tbld_datacount&& from) noexcept
            : tbld_datacount()
        {
            *this = ::std::move(from);
        }

        inline tbld_datacount& operator=(const tbld_datacount& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline tbld_datacount& operator=(tbld_datacount&& from) noexcept
        {
            if(GetArenaNoVirtual() == from.GetArenaNoVirtual())
            {
                if(this != &from)
                    InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() { return GetDescriptor(); }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() { return GetMetadataStatic().descriptor; }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() { return GetMetadataStatic().reflection; }
        static const tbld_datacount&                      default_instance();

        static void                         InitAsDefaultInstance(); // FOR INTERNAL USE ONLY
        static inline const tbld_datacount* internal_default_instance()
        {
            return reinterpret_cast<const tbld_datacount*>(&_tbld_datacount_default_instance_);
        }
        static constexpr int kIndexInFileMessages = 2;

        friend void swap(tbld_datacount& a, tbld_datacount& b) { a.Swap(&b); }
        inline void Swap(tbld_datacount* other)
        {
            if(other == this)
                return;
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        inline tbld_datacount* New() const final { return CreateMaybeMessage<tbld_datacount>(nullptr); }

        tbld_datacount* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final { return CreateMaybeMessage<tbld_datacount>(arena); }
        void            CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
        void            MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
        void            CopyFrom(const tbld_datacount& from);
        void            MergeFrom(const tbld_datacount& from);
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool                                  IsInitialized() const final;

        size_t                          ByteSizeLong() const final;
        const char*                     _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(::PROTOBUF_NAMESPACE_ID::uint8*                   target,
                                                           ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
        int                             GetCachedSize() const final { return _cached_size_.Get(); }

    private:
        inline void SharedCtor();
        inline void SharedDtor();
        void        SetCachedSize(int size) const final;
        void        InternalSwap(tbld_datacount* other);
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() { return "db.tbld_datacount"; }

    private:
        inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const { return nullptr; }
        inline void*                           MaybeArenaPtr() const { return nullptr; }

    public:
        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

    private:
        static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic()
        {
            ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_db_5fproto_2fgamedb_2eproto);
            return ::descriptor_table_db_5fproto_2fgamedb_2eproto.file_level_metadata[kIndexInFileMessages];
        }

    public:
        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kIdFieldNumber            = 1,
            kPlayeridFieldNumber      = 2,
            kKeytypeFieldNumber       = 3,
            kKeyidxFieldNumber        = 4,
            kDataNumFieldNumber       = 5,
            kNextResetTimeFieldNumber = 6,
        };
        // uint64 id = 1 [(.sql) = {
        void                            clear_id();
        ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
        void                            set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
        void                            _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint64 playerid = 2 [(.sql) = {
        void                            clear_playerid();
        ::PROTOBUF_NAMESPACE_ID::uint64 playerid() const;
        void                            set_playerid(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_playerid() const;
        void                            _internal_set_playerid(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint32 keytype = 3 [(.sql) = {
        void                            clear_keytype();
        ::PROTOBUF_NAMESPACE_ID::uint32 keytype() const;
        void                            set_keytype(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_keytype() const;
        void                            _internal_set_keytype(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 keyidx = 4 [(.sql) = {
        void                            clear_keyidx();
        ::PROTOBUF_NAMESPACE_ID::uint32 keyidx() const;
        void                            set_keyidx(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_keyidx() const;
        void                            _internal_set_keyidx(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint64 data_num = 5;
        void                            clear_data_num();
        ::PROTOBUF_NAMESPACE_ID::uint64 data_num() const;
        void                            set_data_num(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_data_num() const;
        void                            _internal_set_data_num(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint32 next_reset_time = 6;
        void                            clear_next_reset_time();
        ::PROTOBUF_NAMESPACE_ID::uint32 next_reset_time() const;
        void                            set_next_reset_time(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_next_reset_time() const;
        void                            _internal_set_next_reset_time(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // @@protoc_insertion_point(class_scope:db.tbld_datacount)
    private:
        class _Internal;

        ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              id_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              playerid_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              keytype_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              keyidx_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              data_num_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              next_reset_time_;
        mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize        _cached_size_;
        friend struct ::TableStruct_db_5fproto_2fgamedb_2eproto;
    };
    // -------------------------------------------------------------------

    class tbld_global_mail : public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:db.tbld_global_mail) */
    {
    public:
        tbld_global_mail();
        virtual ~tbld_global_mail();

        tbld_global_mail(const tbld_global_mail& from);
        tbld_global_mail(tbld_global_mail&& from) noexcept
            : tbld_global_mail()
        {
            *this = ::std::move(from);
        }

        inline tbld_global_mail& operator=(const tbld_global_mail& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline tbld_global_mail& operator=(tbld_global_mail&& from) noexcept
        {
            if(GetArenaNoVirtual() == from.GetArenaNoVirtual())
            {
                if(this != &from)
                    InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() { return GetDescriptor(); }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() { return GetMetadataStatic().descriptor; }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() { return GetMetadataStatic().reflection; }
        static const tbld_global_mail&                    default_instance();

        static void                           InitAsDefaultInstance(); // FOR INTERNAL USE ONLY
        static inline const tbld_global_mail* internal_default_instance()
        {
            return reinterpret_cast<const tbld_global_mail*>(&_tbld_global_mail_default_instance_);
        }
        static constexpr int kIndexInFileMessages = 3;

        friend void swap(tbld_global_mail& a, tbld_global_mail& b) { a.Swap(&b); }
        inline void Swap(tbld_global_mail* other)
        {
            if(other == this)
                return;
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        inline tbld_global_mail* New() const final { return CreateMaybeMessage<tbld_global_mail>(nullptr); }

        tbld_global_mail* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final { return CreateMaybeMessage<tbld_global_mail>(arena); }
        void              CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
        void              MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
        void              CopyFrom(const tbld_global_mail& from);
        void              MergeFrom(const tbld_global_mail& from);
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool                                  IsInitialized() const final;

        size_t                          ByteSizeLong() const final;
        const char*                     _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(::PROTOBUF_NAMESPACE_ID::uint8*                   target,
                                                           ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
        int                             GetCachedSize() const final { return _cached_size_.Get(); }

    private:
        inline void SharedCtor();
        inline void SharedDtor();
        void        SetCachedSize(int size) const final;
        void        InternalSwap(tbld_global_mail* other);
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() { return "db.tbld_global_mail"; }

    private:
        inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const { return nullptr; }
        inline void*                           MaybeArenaPtr() const { return nullptr; }

    public:
        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

    private:
        static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic()
        {
            ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_db_5fproto_2fgamedb_2eproto);
            return ::descriptor_table_db_5fproto_2fgamedb_2eproto.file_level_metadata[kIndexInFileMessages];
        }

    public:
        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kSendernameFieldNumber = 3,
            kSubjectFieldNumber    = 6,
            kContentFieldNumber    = 7,
            kAttachDataFieldNumber = 10,
            kIdFieldNumber         = 1,
            kSenderidFieldNumber   = 2,
            kFlagFieldNumber       = 5,
            kFilterTypeFieldNumber = 8,
            kFilterDataFieldNumber = 9,
            kCreateTimeFieldNumber = 4,
        };
        // string sendername = 3 [(.sql) = {
        void               clear_sendername();
        const std::string& sendername() const;
        void               set_sendername(const std::string& value);
        void               set_sendername(std::string&& value);
        void               set_sendername(const char* value);
        void               set_sendername(const char* value, size_t size);
        std::string*       mutable_sendername();
        std::string*       release_sendername();
        void               set_allocated_sendername(std::string* sendername);

    private:
        const std::string& _internal_sendername() const;
        void               _internal_set_sendername(const std::string& value);
        std::string*       _internal_mutable_sendername();

    public:
        // string subject = 6 [(.sql) = {
        void               clear_subject();
        const std::string& subject() const;
        void               set_subject(const std::string& value);
        void               set_subject(std::string&& value);
        void               set_subject(const char* value);
        void               set_subject(const char* value, size_t size);
        std::string*       mutable_subject();
        std::string*       release_subject();
        void               set_allocated_subject(std::string* subject);

    private:
        const std::string& _internal_subject() const;
        void               _internal_set_subject(const std::string& value);
        std::string*       _internal_mutable_subject();

    public:
        // string content = 7 [(.sql) = {
        void               clear_content();
        const std::string& content() const;
        void               set_content(const std::string& value);
        void               set_content(std::string&& value);
        void               set_content(const char* value);
        void               set_content(const char* value, size_t size);
        std::string*       mutable_content();
        std::string*       release_content();
        void               set_allocated_content(std::string* content);

    private:
        const std::string& _internal_content() const;
        void               _internal_set_content(const std::string& value);
        std::string*       _internal_mutable_content();

    public:
        // bytes attach_data = 10;
        void               clear_attach_data();
        const std::string& attach_data() const;
        void               set_attach_data(const std::string& value);
        void               set_attach_data(std::string&& value);
        void               set_attach_data(const char* value);
        void               set_attach_data(const void* value, size_t size);
        std::string*       mutable_attach_data();
        std::string*       release_attach_data();
        void               set_allocated_attach_data(std::string* attach_data);

    private:
        const std::string& _internal_attach_data() const;
        void               _internal_set_attach_data(const std::string& value);
        std::string*       _internal_mutable_attach_data();

    public:
        // uint64 id = 1 [(.sql) = {
        void                            clear_id();
        ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
        void                            set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
        void                            _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint64 senderid = 2 [(.sql) = {
        void                            clear_senderid();
        ::PROTOBUF_NAMESPACE_ID::uint64 senderid() const;
        void                            set_senderid(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_senderid() const;
        void                            _internal_set_senderid(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint64 flag = 5;
        void                            clear_flag();
        ::PROTOBUF_NAMESPACE_ID::uint64 flag() const;
        void                            set_flag(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_flag() const;
        void                            _internal_set_flag(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint64 filter_type = 8;
        void                            clear_filter_type();
        ::PROTOBUF_NAMESPACE_ID::uint64 filter_type() const;
        void                            set_filter_type(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_filter_type() const;
        void                            _internal_set_filter_type(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint64 filter_data = 9;
        void                            clear_filter_data();
        ::PROTOBUF_NAMESPACE_ID::uint64 filter_data() const;
        void                            set_filter_data(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_filter_data() const;
        void                            _internal_set_filter_data(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint32 create_time = 4 [(.sql) = {
        void                            clear_create_time();
        ::PROTOBUF_NAMESPACE_ID::uint32 create_time() const;
        void                            set_create_time(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_create_time() const;
        void                            _internal_set_create_time(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // @@protoc_insertion_point(class_scope:db.tbld_global_mail)
    private:
        class _Internal;

        ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
        ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr            sendername_;
        ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr            subject_;
        ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr            content_;
        ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr            attach_data_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              id_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              senderid_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              flag_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              filter_type_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              filter_data_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              create_time_;
        mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize        _cached_size_;
        friend struct ::TableStruct_db_5fproto_2fgamedb_2eproto;
    };
    // -------------------------------------------------------------------

    class tbld_guild : public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:db.tbld_guild) */
    {
    public:
        tbld_guild();
        virtual ~tbld_guild();

        tbld_guild(const tbld_guild& from);
        tbld_guild(tbld_guild&& from) noexcept
            : tbld_guild()
        {
            *this = ::std::move(from);
        }

        inline tbld_guild& operator=(const tbld_guild& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline tbld_guild& operator=(tbld_guild&& from) noexcept
        {
            if(GetArenaNoVirtual() == from.GetArenaNoVirtual())
            {
                if(this != &from)
                    InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() { return GetDescriptor(); }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() { return GetMetadataStatic().descriptor; }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() { return GetMetadataStatic().reflection; }
        static const tbld_guild&                          default_instance();

        static void                     InitAsDefaultInstance(); // FOR INTERNAL USE ONLY
        static inline const tbld_guild* internal_default_instance() { return reinterpret_cast<const tbld_guild*>(&_tbld_guild_default_instance_); }
        static constexpr int            kIndexInFileMessages = 4;

        friend void swap(tbld_guild& a, tbld_guild& b) { a.Swap(&b); }
        inline void Swap(tbld_guild* other)
        {
            if(other == this)
                return;
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        inline tbld_guild* New() const final { return CreateMaybeMessage<tbld_guild>(nullptr); }

        tbld_guild*                           New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final { return CreateMaybeMessage<tbld_guild>(arena); }
        void                                  CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
        void                                  MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
        void                                  CopyFrom(const tbld_guild& from);
        void                                  MergeFrom(const tbld_guild& from);
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool                                  IsInitialized() const final;

        size_t                          ByteSizeLong() const final;
        const char*                     _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(::PROTOBUF_NAMESPACE_ID::uint8*                   target,
                                                           ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
        int                             GetCachedSize() const final { return _cached_size_.Get(); }

    private:
        inline void SharedCtor();
        inline void SharedDtor();
        void        SetCachedSize(int size) const final;
        void        InternalSwap(tbld_guild* other);
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() { return "db.tbld_guild"; }

    private:
        inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const { return nullptr; }
        inline void*                           MaybeArenaPtr() const { return nullptr; }

    public:
        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

    private:
        static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic()
        {
            ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_db_5fproto_2fgamedb_2eproto);
            return ::descriptor_table_db_5fproto_2fgamedb_2eproto.file_level_metadata[kIndexInFileMessages];
        }

    public:
        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kNameFieldNumber        = 3,
            kLeaderNameFieldNumber  = 5,
            kCreatorNameFieldNumber = 7,
            kSloganFieldNumber      = 10,
            kInfo1FieldNumber       = 11,
            kInfo2FieldNumber       = 12,
            kInfo3FieldNumber       = 13,
            kIdFieldNumber          = 1,
            kLevFieldNumber         = 2,
            kLeaderIdFieldNumber    = 4,
            kCreatorIdFieldNumber   = 6,
            kCreateTimeFieldNumber  = 8,
            kDelTimeFieldNumber     = 9,
            kFlagFieldNumber        = 14,
        };
        // string name = 3 [(.sql) = {
        void               clear_name();
        const std::string& name() const;
        void               set_name(const std::string& value);
        void               set_name(std::string&& value);
        void               set_name(const char* value);
        void               set_name(const char* value, size_t size);
        std::string*       mutable_name();
        std::string*       release_name();
        void               set_allocated_name(std::string* name);

    private:
        const std::string& _internal_name() const;
        void               _internal_set_name(const std::string& value);
        std::string*       _internal_mutable_name();

    public:
        // string leader_name = 5 [(.sql) = {
        void               clear_leader_name();
        const std::string& leader_name() const;
        void               set_leader_name(const std::string& value);
        void               set_leader_name(std::string&& value);
        void               set_leader_name(const char* value);
        void               set_leader_name(const char* value, size_t size);
        std::string*       mutable_leader_name();
        std::string*       release_leader_name();
        void               set_allocated_leader_name(std::string* leader_name);

    private:
        const std::string& _internal_leader_name() const;
        void               _internal_set_leader_name(const std::string& value);
        std::string*       _internal_mutable_leader_name();

    public:
        // string creator_name = 7 [(.sql) = {
        void               clear_creator_name();
        const std::string& creator_name() const;
        void               set_creator_name(const std::string& value);
        void               set_creator_name(std::string&& value);
        void               set_creator_name(const char* value);
        void               set_creator_name(const char* value, size_t size);
        std::string*       mutable_creator_name();
        std::string*       release_creator_name();
        void               set_allocated_creator_name(std::string* creator_name);

    private:
        const std::string& _internal_creator_name() const;
        void               _internal_set_creator_name(const std::string& value);
        std::string*       _internal_mutable_creator_name();

    public:
        // string slogan = 10 [(.sql) = {
        void               clear_slogan();
        const std::string& slogan() const;
        void               set_slogan(const std::string& value);
        void               set_slogan(std::string&& value);
        void               set_slogan(const char* value);
        void               set_slogan(const char* value, size_t size);
        std::string*       mutable_slogan();
        std::string*       release_slogan();
        void               set_allocated_slogan(std::string* slogan);

    private:
        const std::string& _internal_slogan() const;
        void               _internal_set_slogan(const std::string& value);
        std::string*       _internal_mutable_slogan();

    public:
        // string info1 = 11 [(.sql) = {
        void               clear_info1();
        const std::string& info1() const;
        void               set_info1(const std::string& value);
        void               set_info1(std::string&& value);
        void               set_info1(const char* value);
        void               set_info1(const char* value, size_t size);
        std::string*       mutable_info1();
        std::string*       release_info1();
        void               set_allocated_info1(std::string* info1);

    private:
        const std::string& _internal_info1() const;
        void               _internal_set_info1(const std::string& value);
        std::string*       _internal_mutable_info1();

    public:
        // string info2 = 12 [(.sql) = {
        void               clear_info2();
        const std::string& info2() const;
        void               set_info2(const std::string& value);
        void               set_info2(std::string&& value);
        void               set_info2(const char* value);
        void               set_info2(const char* value, size_t size);
        std::string*       mutable_info2();
        std::string*       release_info2();
        void               set_allocated_info2(std::string* info2);

    private:
        const std::string& _internal_info2() const;
        void               _internal_set_info2(const std::string& value);
        std::string*       _internal_mutable_info2();

    public:
        // string info3 = 13 [(.sql) = {
        void               clear_info3();
        const std::string& info3() const;
        void               set_info3(const std::string& value);
        void               set_info3(std::string&& value);
        void               set_info3(const char* value);
        void               set_info3(const char* value, size_t size);
        std::string*       mutable_info3();
        std::string*       release_info3();
        void               set_allocated_info3(std::string* info3);

    private:
        const std::string& _internal_info3() const;
        void               _internal_set_info3(const std::string& value);
        std::string*       _internal_mutable_info3();

    public:
        // uint64 id = 1 [(.sql) = {
        void                            clear_id();
        ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
        void                            set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
        void                            _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint64 lev = 2;
        void                            clear_lev();
        ::PROTOBUF_NAMESPACE_ID::uint64 lev() const;
        void                            set_lev(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_lev() const;
        void                            _internal_set_lev(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint64 leader_id = 4;
        void                            clear_leader_id();
        ::PROTOBUF_NAMESPACE_ID::uint64 leader_id() const;
        void                            set_leader_id(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_leader_id() const;
        void                            _internal_set_leader_id(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint64 creator_id = 6 [(.sql) = {
        void                            clear_creator_id();
        ::PROTOBUF_NAMESPACE_ID::uint64 creator_id() const;
        void                            set_creator_id(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_creator_id() const;
        void                            _internal_set_creator_id(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint32 create_time = 8;
        void                            clear_create_time();
        ::PROTOBUF_NAMESPACE_ID::uint32 create_time() const;
        void                            set_create_time(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_create_time() const;
        void                            _internal_set_create_time(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 del_time = 9;
        void                            clear_del_time();
        ::PROTOBUF_NAMESPACE_ID::uint32 del_time() const;
        void                            set_del_time(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_del_time() const;
        void                            _internal_set_del_time(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint64 flag = 14;
        void                            clear_flag();
        ::PROTOBUF_NAMESPACE_ID::uint64 flag() const;
        void                            set_flag(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_flag() const;
        void                            _internal_set_flag(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // @@protoc_insertion_point(class_scope:db.tbld_guild)
    private:
        class _Internal;

        ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
        ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr            name_;
        ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr            leader_name_;
        ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr            creator_name_;
        ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr            slogan_;
        ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr            info1_;
        ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr            info2_;
        ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr            info3_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              id_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              lev_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              leader_id_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              creator_id_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              create_time_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              del_time_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              flag_;
        mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize        _cached_size_;
        friend struct ::TableStruct_db_5fproto_2fgamedb_2eproto;
    };
    // -------------------------------------------------------------------

    class tbld_item : public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:db.tbld_item) */
    {
    public:
        tbld_item();
        virtual ~tbld_item();

        tbld_item(const tbld_item& from);
        tbld_item(tbld_item&& from) noexcept
            : tbld_item()
        {
            *this = ::std::move(from);
        }

        inline tbld_item& operator=(const tbld_item& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline tbld_item& operator=(tbld_item&& from) noexcept
        {
            if(GetArenaNoVirtual() == from.GetArenaNoVirtual())
            {
                if(this != &from)
                    InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() { return GetDescriptor(); }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() { return GetMetadataStatic().descriptor; }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() { return GetMetadataStatic().reflection; }
        static const tbld_item&                           default_instance();

        static void                    InitAsDefaultInstance(); // FOR INTERNAL USE ONLY
        static inline const tbld_item* internal_default_instance() { return reinterpret_cast<const tbld_item*>(&_tbld_item_default_instance_); }
        static constexpr int           kIndexInFileMessages = 5;

        friend void swap(tbld_item& a, tbld_item& b) { a.Swap(&b); }
        inline void Swap(tbld_item* other)
        {
            if(other == this)
                return;
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        inline tbld_item* New() const final { return CreateMaybeMessage<tbld_item>(nullptr); }

        tbld_item*                            New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final { return CreateMaybeMessage<tbld_item>(arena); }
        void                                  CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
        void                                  MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
        void                                  CopyFrom(const tbld_item& from);
        void                                  MergeFrom(const tbld_item& from);
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool                                  IsInitialized() const final;

        size_t                          ByteSizeLong() const final;
        const char*                     _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(::PROTOBUF_NAMESPACE_ID::uint8*                   target,
                                                           ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
        int                             GetCachedSize() const final { return _cached_size_.Get(); }

    private:
        inline void SharedCtor();
        inline void SharedDtor();
        void        SetCachedSize(int size) const final;
        void        InternalSwap(tbld_item* other);
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() { return "db.tbld_item"; }

    private:
        inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const { return nullptr; }
        inline void*                           MaybeArenaPtr() const { return nullptr; }

    public:
        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

    private:
        static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic()
        {
            ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_db_5fproto_2fgamedb_2eproto);
            return ::descriptor_table_db_5fproto_2fgamedb_2eproto.file_level_metadata[kIndexInFileMessages];
        }

    public:
        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kExtraFieldNumber       = 12,
            kIdFieldNumber          = 1,
            kOwnerIdFieldNumber     = 2,
            kItemtypeFieldNumber    = 3,
            kPositionFieldNumber    = 4,
            kGridFieldNumber        = 5,
            kFlagFieldNumber        = 6,
            kPilenumFieldNumber     = 7,
            kExpireTimeFieldNumber  = 8,
            kDuraFieldNumber        = 9,
            kDuraLimitFieldNumber   = 10,
            kAdditionLevFieldNumber = 11,
        };
        // bytes extra = 12;
        void               clear_extra();
        const std::string& extra() const;
        void               set_extra(const std::string& value);
        void               set_extra(std::string&& value);
        void               set_extra(const char* value);
        void               set_extra(const void* value, size_t size);
        std::string*       mutable_extra();
        std::string*       release_extra();
        void               set_allocated_extra(std::string* extra);

    private:
        const std::string& _internal_extra() const;
        void               _internal_set_extra(const std::string& value);
        std::string*       _internal_mutable_extra();

    public:
        // uint64 id = 1 [(.sql) = {
        void                            clear_id();
        ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
        void                            set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
        void                            _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint64 owner_id = 2 [(.sql) = {
        void                            clear_owner_id();
        ::PROTOBUF_NAMESPACE_ID::uint64 owner_id() const;
        void                            set_owner_id(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_owner_id() const;
        void                            _internal_set_owner_id(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint32 itemtype = 3 [(.sql) = {
        void                            clear_itemtype();
        ::PROTOBUF_NAMESPACE_ID::uint32 itemtype() const;
        void                            set_itemtype(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_itemtype() const;
        void                            _internal_set_itemtype(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 position = 4 [(.sql) = {
        void                            clear_position();
        ::PROTOBUF_NAMESPACE_ID::uint32 position() const;
        void                            set_position(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_position() const;
        void                            _internal_set_position(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 grid = 5;
        void                            clear_grid();
        ::PROTOBUF_NAMESPACE_ID::uint32 grid() const;
        void                            set_grid(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_grid() const;
        void                            _internal_set_grid(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 flag = 6;
        void                            clear_flag();
        ::PROTOBUF_NAMESPACE_ID::uint32 flag() const;
        void                            set_flag(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_flag() const;
        void                            _internal_set_flag(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 pilenum = 7;
        void                            clear_pilenum();
        ::PROTOBUF_NAMESPACE_ID::uint32 pilenum() const;
        void                            set_pilenum(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pilenum() const;
        void                            _internal_set_pilenum(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 expire_time = 8;
        void                            clear_expire_time();
        ::PROTOBUF_NAMESPACE_ID::uint32 expire_time() const;
        void                            set_expire_time(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_expire_time() const;
        void                            _internal_set_expire_time(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 dura = 9;
        void                            clear_dura();
        ::PROTOBUF_NAMESPACE_ID::uint32 dura() const;
        void                            set_dura(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_dura() const;
        void                            _internal_set_dura(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 dura_limit = 10;
        void                            clear_dura_limit();
        ::PROTOBUF_NAMESPACE_ID::uint32 dura_limit() const;
        void                            set_dura_limit(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_dura_limit() const;
        void                            _internal_set_dura_limit(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 addition_lev = 11;
        void                            clear_addition_lev();
        ::PROTOBUF_NAMESPACE_ID::uint32 addition_lev() const;
        void                            set_addition_lev(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_addition_lev() const;
        void                            _internal_set_addition_lev(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // @@protoc_insertion_point(class_scope:db.tbld_item)
    private:
        class _Internal;

        ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
        ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr            extra_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              id_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              owner_id_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              itemtype_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              position_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              grid_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              flag_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              pilenum_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              expire_time_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              dura_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              dura_limit_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              addition_lev_;
        mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize        _cached_size_;
        friend struct ::TableStruct_db_5fproto_2fgamedb_2eproto;
    };
    // -------------------------------------------------------------------

    class tbld_mail : public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:db.tbld_mail) */
    {
    public:
        tbld_mail();
        virtual ~tbld_mail();

        tbld_mail(const tbld_mail& from);
        tbld_mail(tbld_mail&& from) noexcept
            : tbld_mail()
        {
            *this = ::std::move(from);
        }

        inline tbld_mail& operator=(const tbld_mail& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline tbld_mail& operator=(tbld_mail&& from) noexcept
        {
            if(GetArenaNoVirtual() == from.GetArenaNoVirtual())
            {
                if(this != &from)
                    InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() { return GetDescriptor(); }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() { return GetMetadataStatic().descriptor; }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() { return GetMetadataStatic().reflection; }
        static const tbld_mail&                           default_instance();

        static void                    InitAsDefaultInstance(); // FOR INTERNAL USE ONLY
        static inline const tbld_mail* internal_default_instance() { return reinterpret_cast<const tbld_mail*>(&_tbld_mail_default_instance_); }
        static constexpr int           kIndexInFileMessages = 6;

        friend void swap(tbld_mail& a, tbld_mail& b) { a.Swap(&b); }
        inline void Swap(tbld_mail* other)
        {
            if(other == this)
                return;
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        inline tbld_mail* New() const final { return CreateMaybeMessage<tbld_mail>(nullptr); }

        tbld_mail*                            New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final { return CreateMaybeMessage<tbld_mail>(arena); }
        void                                  CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
        void                                  MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
        void                                  CopyFrom(const tbld_mail& from);
        void                                  MergeFrom(const tbld_mail& from);
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool                                  IsInitialized() const final;

        size_t                          ByteSizeLong() const final;
        const char*                     _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(::PROTOBUF_NAMESPACE_ID::uint8*                   target,
                                                           ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
        int                             GetCachedSize() const final { return _cached_size_.Get(); }

    private:
        inline void SharedCtor();
        inline void SharedDtor();
        void        SetCachedSize(int size) const final;
        void        InternalSwap(tbld_mail* other);
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() { return "db.tbld_mail"; }

    private:
        inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const { return nullptr; }
        inline void*                           MaybeArenaPtr() const { return nullptr; }

    public:
        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

    private:
        static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic()
        {
            ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_db_5fproto_2fgamedb_2eproto);
            return ::descriptor_table_db_5fproto_2fgamedb_2eproto.file_level_metadata[kIndexInFileMessages];
        }

    public:
        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kSendernameFieldNumber = 5,
            kSubjectFieldNumber    = 8,
            kContentFieldNumber    = 9,
            kIdFieldNumber         = 1,
            kOwneridFieldNumber    = 2,
            kSenderidFieldNumber   = 4,
            kFlagFieldNumber       = 7,
            kCreateTimeFieldNumber = 6,
        };
        // string sendername = 5 [(.sql) = {
        void               clear_sendername();
        const std::string& sendername() const;
        void               set_sendername(const std::string& value);
        void               set_sendername(std::string&& value);
        void               set_sendername(const char* value);
        void               set_sendername(const char* value, size_t size);
        std::string*       mutable_sendername();
        std::string*       release_sendername();
        void               set_allocated_sendername(std::string* sendername);

    private:
        const std::string& _internal_sendername() const;
        void               _internal_set_sendername(const std::string& value);
        std::string*       _internal_mutable_sendername();

    public:
        // string subject = 8 [(.sql) = {
        void               clear_subject();
        const std::string& subject() const;
        void               set_subject(const std::string& value);
        void               set_subject(std::string&& value);
        void               set_subject(const char* value);
        void               set_subject(const char* value, size_t size);
        std::string*       mutable_subject();
        std::string*       release_subject();
        void               set_allocated_subject(std::string* subject);

    private:
        const std::string& _internal_subject() const;
        void               _internal_set_subject(const std::string& value);
        std::string*       _internal_mutable_subject();

    public:
        // string content = 9 [(.sql) = {
        void               clear_content();
        const std::string& content() const;
        void               set_content(const std::string& value);
        void               set_content(std::string&& value);
        void               set_content(const char* value);
        void               set_content(const char* value, size_t size);
        std::string*       mutable_content();
        std::string*       release_content();
        void               set_allocated_content(std::string* content);

    private:
        const std::string& _internal_content() const;
        void               _internal_set_content(const std::string& value);
        std::string*       _internal_mutable_content();

    public:
        // uint64 id = 1 [(.sql) = {
        void                            clear_id();
        ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
        void                            set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
        void                            _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint64 ownerid = 2 [(.sql) = {
        void                            clear_ownerid();
        ::PROTOBUF_NAMESPACE_ID::uint64 ownerid() const;
        void                            set_ownerid(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_ownerid() const;
        void                            _internal_set_ownerid(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint64 senderid = 4 [(.sql) = {
        void                            clear_senderid();
        ::PROTOBUF_NAMESPACE_ID::uint64 senderid() const;
        void                            set_senderid(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_senderid() const;
        void                            _internal_set_senderid(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint64 flag = 7;
        void                            clear_flag();
        ::PROTOBUF_NAMESPACE_ID::uint64 flag() const;
        void                            set_flag(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_flag() const;
        void                            _internal_set_flag(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint32 create_time = 6 [(.sql) = {
        void                            clear_create_time();
        ::PROTOBUF_NAMESPACE_ID::uint32 create_time() const;
        void                            set_create_time(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_create_time() const;
        void                            _internal_set_create_time(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // @@protoc_insertion_point(class_scope:db.tbld_mail)
    private:
        class _Internal;

        ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
        ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr            sendername_;
        ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr            subject_;
        ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr            content_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              id_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              ownerid_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              senderid_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              flag_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              create_time_;
        mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize        _cached_size_;
        friend struct ::TableStruct_db_5fproto_2fgamedb_2eproto;
    };
    // -------------------------------------------------------------------

    class tbld_mail_attachment : public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:db.tbld_mail_attachment) */
    {
    public:
        tbld_mail_attachment();
        virtual ~tbld_mail_attachment();

        tbld_mail_attachment(const tbld_mail_attachment& from);
        tbld_mail_attachment(tbld_mail_attachment&& from) noexcept
            : tbld_mail_attachment()
        {
            *this = ::std::move(from);
        }

        inline tbld_mail_attachment& operator=(const tbld_mail_attachment& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline tbld_mail_attachment& operator=(tbld_mail_attachment&& from) noexcept
        {
            if(GetArenaNoVirtual() == from.GetArenaNoVirtual())
            {
                if(this != &from)
                    InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() { return GetDescriptor(); }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() { return GetMetadataStatic().descriptor; }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() { return GetMetadataStatic().reflection; }
        static const tbld_mail_attachment&                default_instance();

        static void                               InitAsDefaultInstance(); // FOR INTERNAL USE ONLY
        static inline const tbld_mail_attachment* internal_default_instance()
        {
            return reinterpret_cast<const tbld_mail_attachment*>(&_tbld_mail_attachment_default_instance_);
        }
        static constexpr int kIndexInFileMessages = 7;

        friend void swap(tbld_mail_attachment& a, tbld_mail_attachment& b) { a.Swap(&b); }
        inline void Swap(tbld_mail_attachment* other)
        {
            if(other == this)
                return;
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        inline tbld_mail_attachment* New() const final { return CreateMaybeMessage<tbld_mail_attachment>(nullptr); }

        tbld_mail_attachment* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final { return CreateMaybeMessage<tbld_mail_attachment>(arena); }
        void                  CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
        void                  MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
        void                  CopyFrom(const tbld_mail_attachment& from);
        void                  MergeFrom(const tbld_mail_attachment& from);
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool                                  IsInitialized() const final;

        size_t                          ByteSizeLong() const final;
        const char*                     _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(::PROTOBUF_NAMESPACE_ID::uint8*                   target,
                                                           ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
        int                             GetCachedSize() const final { return _cached_size_.Get(); }

    private:
        inline void SharedCtor();
        inline void SharedDtor();
        void        SetCachedSize(int size) const final;
        void        InternalSwap(tbld_mail_attachment* other);
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() { return "db.tbld_mail_attachment"; }

    private:
        inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const { return nullptr; }
        inline void*                           MaybeArenaPtr() const { return nullptr; }

    public:
        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

    private:
        static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic()
        {
            ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_db_5fproto_2fgamedb_2eproto);
            return ::descriptor_table_db_5fproto_2fgamedb_2eproto.file_level_metadata[kIndexInFileMessages];
        }

    public:
        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kIdFieldNumber         = 1,
            kMailidFieldNumber     = 2,
            kAttachDataFieldNumber = 4,
            kAttachTypeFieldNumber = 3,
        };
        // uint64 id = 1 [(.sql) = {
        void                            clear_id();
        ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
        void                            set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
        void                            _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint64 mailid = 2 [(.sql) = {
        void                            clear_mailid();
        ::PROTOBUF_NAMESPACE_ID::uint64 mailid() const;
        void                            set_mailid(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_mailid() const;
        void                            _internal_set_mailid(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint64 attach_data = 4;
        void                            clear_attach_data();
        ::PROTOBUF_NAMESPACE_ID::uint64 attach_data() const;
        void                            set_attach_data(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_attach_data() const;
        void                            _internal_set_attach_data(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint32 attach_type = 3;
        void                            clear_attach_type();
        ::PROTOBUF_NAMESPACE_ID::uint32 attach_type() const;
        void                            set_attach_type(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_attach_type() const;
        void                            _internal_set_attach_type(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // @@protoc_insertion_point(class_scope:db.tbld_mail_attachment)
    private:
        class _Internal;

        ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              id_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              mailid_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              attach_data_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              attach_type_;
        mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize        _cached_size_;
        friend struct ::TableStruct_db_5fproto_2fgamedb_2eproto;
    };
    // -------------------------------------------------------------------

    class tbld_pet : public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:db.tbld_pet) */
    {
    public:
        tbld_pet();
        virtual ~tbld_pet();

        tbld_pet(const tbld_pet& from);
        tbld_pet(tbld_pet&& from) noexcept
            : tbld_pet()
        {
            *this = ::std::move(from);
        }

        inline tbld_pet& operator=(const tbld_pet& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline tbld_pet& operator=(tbld_pet&& from) noexcept
        {
            if(GetArenaNoVirtual() == from.GetArenaNoVirtual())
            {
                if(this != &from)
                    InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() { return GetDescriptor(); }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() { return GetMetadataStatic().descriptor; }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() { return GetMetadataStatic().reflection; }
        static const tbld_pet&                            default_instance();

        static void                   InitAsDefaultInstance(); // FOR INTERNAL USE ONLY
        static inline const tbld_pet* internal_default_instance() { return reinterpret_cast<const tbld_pet*>(&_tbld_pet_default_instance_); }
        static constexpr int          kIndexInFileMessages = 8;

        friend void swap(tbld_pet& a, tbld_pet& b) { a.Swap(&b); }
        inline void Swap(tbld_pet* other)
        {
            if(other == this)
                return;
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        inline tbld_pet* New() const final { return CreateMaybeMessage<tbld_pet>(nullptr); }

        tbld_pet*                             New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final { return CreateMaybeMessage<tbld_pet>(arena); }
        void                                  CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
        void                                  MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
        void                                  CopyFrom(const tbld_pet& from);
        void                                  MergeFrom(const tbld_pet& from);
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool                                  IsInitialized() const final;

        size_t                          ByteSizeLong() const final;
        const char*                     _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(::PROTOBUF_NAMESPACE_ID::uint8*                   target,
                                                           ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
        int                             GetCachedSize() const final { return _cached_size_.Get(); }

    private:
        inline void SharedCtor();
        inline void SharedDtor();
        void        SetCachedSize(int size) const final;
        void        InternalSwap(tbld_pet* other);
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() { return "db.tbld_pet"; }

    private:
        inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const { return nullptr; }
        inline void*                           MaybeArenaPtr() const { return nullptr; }

    public:
        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

    private:
        static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic()
        {
            ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_db_5fproto_2fgamedb_2eproto);
            return ::descriptor_table_db_5fproto_2fgamedb_2eproto.file_level_metadata[kIndexInFileMessages];
        }

    public:
        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kIdFieldNumber      = 1,
            kOwneridFieldNumber = 2,
            kPetTypeFieldNumber = 3,
            kHpFieldNumber      = 4,
            kExpFieldNumber     = 5,
        };
        // uint64 id = 1 [(.sql) = {
        void                            clear_id();
        ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
        void                            set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
        void                            _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint64 ownerid = 2 [(.sql) = {
        void                            clear_ownerid();
        ::PROTOBUF_NAMESPACE_ID::uint64 ownerid() const;
        void                            set_ownerid(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_ownerid() const;
        void                            _internal_set_ownerid(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint32 pet_type = 3 [(.sql) = {
        void                            clear_pet_type();
        ::PROTOBUF_NAMESPACE_ID::uint32 pet_type() const;
        void                            set_pet_type(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pet_type() const;
        void                            _internal_set_pet_type(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 hp = 4;
        void                            clear_hp();
        ::PROTOBUF_NAMESPACE_ID::uint32 hp() const;
        void                            set_hp(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hp() const;
        void                            _internal_set_hp(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint64 exp = 5;
        void                            clear_exp();
        ::PROTOBUF_NAMESPACE_ID::uint64 exp() const;
        void                            set_exp(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_exp() const;
        void                            _internal_set_exp(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // @@protoc_insertion_point(class_scope:db.tbld_pet)
    private:
        class _Internal;

        ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              id_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              ownerid_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              pet_type_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              hp_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              exp_;
        mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize        _cached_size_;
        friend struct ::TableStruct_db_5fproto_2fgamedb_2eproto;
    };
    // -------------------------------------------------------------------

    class tbld_player : public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:db.tbld_player) */
    {
    public:
        tbld_player();
        virtual ~tbld_player();

        tbld_player(const tbld_player& from);
        tbld_player(tbld_player&& from) noexcept
            : tbld_player()
        {
            *this = ::std::move(from);
        }

        inline tbld_player& operator=(const tbld_player& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline tbld_player& operator=(tbld_player&& from) noexcept
        {
            if(GetArenaNoVirtual() == from.GetArenaNoVirtual())
            {
                if(this != &from)
                    InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() { return GetDescriptor(); }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() { return GetMetadataStatic().descriptor; }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() { return GetMetadataStatic().reflection; }
        static const tbld_player&                         default_instance();

        static void                      InitAsDefaultInstance(); // FOR INTERNAL USE ONLY
        static inline const tbld_player* internal_default_instance() { return reinterpret_cast<const tbld_player*>(&_tbld_player_default_instance_); }
        static constexpr int             kIndexInFileMessages = 9;

        friend void swap(tbld_player& a, tbld_player& b) { a.Swap(&b); }
        inline void Swap(tbld_player* other)
        {
            if(other == this)
                return;
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        inline tbld_player* New() const final { return CreateMaybeMessage<tbld_player>(nullptr); }

        tbld_player* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final { return CreateMaybeMessage<tbld_player>(arena); }
        void         CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
        void         MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
        void         CopyFrom(const tbld_player& from);
        void         MergeFrom(const tbld_player& from);
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool                                  IsInitialized() const final;

        size_t                          ByteSizeLong() const final;
        const char*                     _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(::PROTOBUF_NAMESPACE_ID::uint8*                   target,
                                                           ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
        int                             GetCachedSize() const final { return _cached_size_.Get(); }

    private:
        inline void SharedCtor();
        inline void SharedDtor();
        void        SetCachedSize(int size) const final;
        void        InternalSwap(tbld_player* other);
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() { return "db.tbld_player"; }

    private:
        inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const { return nullptr; }
        inline void*                           MaybeArenaPtr() const { return nullptr; }

    public:
        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

    private:
        static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic()
        {
            ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_db_5fproto_2fgamedb_2eproto);
            return ::descriptor_table_db_5fproto_2fgamedb_2eproto.file_level_metadata[kIndexInFileMessages];
        }

    public:
        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kOpenidFieldNumber         = 4,
            kNameFieldNumber           = 5,
            kMateNameFieldNumber       = 23,
            kIdFieldNumber             = 1,
            kWorldidFieldNumber        = 2,
            kOriworldidFieldNumber     = 3,
            kProfFieldNumber           = 6,
            kBaselookFieldNumber       = 7,
            kCreateTimeFieldNumber     = 8,
            kLastLogintimeFieldNumber  = 9,
            kLastLogouttimeFieldNumber = 10,
            kDelTimeFieldNumber        = 11,
            kLevFieldNumber            = 12,
            kViplevFieldNumber         = 13,
            kRecordSceneidFieldNumber  = 14,
            kRecordXFieldNumber        = 15,
            kRecordYFieldNumber        = 16,
            kHomeSceneidFieldNumber    = 18,
            kRecordFaceFieldNumber     = 17,
            kHomeXFieldNumber          = 19,
            kHomeYFieldNumber          = 20,
            kHomeFaceFieldNumber       = 21,
            kMateIdFieldNumber         = 22,
            kTeamidFieldNumber         = 24,
            kGuildidFieldNumber        = 25,
            kExpFieldNumber            = 26,
            kMoneyFieldNumber          = 27,
            kMoneyBindFieldNumber      = 28,
            kGoldFieldNumber           = 29,
            kGoldBindFieldNumber       = 30,
            kHpFieldNumber             = 31,
            kMpFieldNumber             = 32,
            kFpFieldNumber             = 33,
            kNpFieldNumber             = 34,
            kPkvalFieldNumber          = 35,
            kHonorFieldNumber          = 36,
            kAchipointFieldNumber      = 37,
            kBagSizeFieldNumber        = 38,
            kStrogeSizeFieldNumber     = 39,
        };
        // string openid = 4 [(.sql) = {
        void               clear_openid();
        const std::string& openid() const;
        void               set_openid(const std::string& value);
        void               set_openid(std::string&& value);
        void               set_openid(const char* value);
        void               set_openid(const char* value, size_t size);
        std::string*       mutable_openid();
        std::string*       release_openid();
        void               set_allocated_openid(std::string* openid);

    private:
        const std::string& _internal_openid() const;
        void               _internal_set_openid(const std::string& value);
        std::string*       _internal_mutable_openid();

    public:
        // string name = 5 [(.sql) = {
        void               clear_name();
        const std::string& name() const;
        void               set_name(const std::string& value);
        void               set_name(std::string&& value);
        void               set_name(const char* value);
        void               set_name(const char* value, size_t size);
        std::string*       mutable_name();
        std::string*       release_name();
        void               set_allocated_name(std::string* name);

    private:
        const std::string& _internal_name() const;
        void               _internal_set_name(const std::string& value);
        std::string*       _internal_mutable_name();

    public:
        // string mate_name = 23 [(.sql) = {
        void               clear_mate_name();
        const std::string& mate_name() const;
        void               set_mate_name(const std::string& value);
        void               set_mate_name(std::string&& value);
        void               set_mate_name(const char* value);
        void               set_mate_name(const char* value, size_t size);
        std::string*       mutable_mate_name();
        std::string*       release_mate_name();
        void               set_allocated_mate_name(std::string* mate_name);

    private:
        const std::string& _internal_mate_name() const;
        void               _internal_set_mate_name(const std::string& value);
        std::string*       _internal_mutable_mate_name();

    public:
        // uint64 id = 1 [(.sql) = {
        void                            clear_id();
        ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
        void                            set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
        void                            _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint32 worldid = 2 [(.sql) = {
        void                            clear_worldid();
        ::PROTOBUF_NAMESPACE_ID::uint32 worldid() const;
        void                            set_worldid(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_worldid() const;
        void                            _internal_set_worldid(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 oriworldid = 3 [(.sql) = {
        void                            clear_oriworldid();
        ::PROTOBUF_NAMESPACE_ID::uint32 oriworldid() const;
        void                            set_oriworldid(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_oriworldid() const;
        void                            _internal_set_oriworldid(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 prof = 6 [(.sql) = {
        void                            clear_prof();
        ::PROTOBUF_NAMESPACE_ID::uint32 prof() const;
        void                            set_prof(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_prof() const;
        void                            _internal_set_prof(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 baselook = 7;
        void                            clear_baselook();
        ::PROTOBUF_NAMESPACE_ID::uint32 baselook() const;
        void                            set_baselook(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_baselook() const;
        void                            _internal_set_baselook(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 create_time = 8 [(.sql) = {
        void                            clear_create_time();
        ::PROTOBUF_NAMESPACE_ID::uint32 create_time() const;
        void                            set_create_time(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_create_time() const;
        void                            _internal_set_create_time(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 last_logintime = 9 [(.sql) = {
        void                            clear_last_logintime();
        ::PROTOBUF_NAMESPACE_ID::uint32 last_logintime() const;
        void                            set_last_logintime(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_last_logintime() const;
        void                            _internal_set_last_logintime(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 last_logouttime = 10 [(.sql) = {
        void                            clear_last_logouttime();
        ::PROTOBUF_NAMESPACE_ID::uint32 last_logouttime() const;
        void                            set_last_logouttime(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_last_logouttime() const;
        void                            _internal_set_last_logouttime(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 del_time = 11 [(.sql) = {
        void                            clear_del_time();
        ::PROTOBUF_NAMESPACE_ID::uint32 del_time() const;
        void                            set_del_time(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_del_time() const;
        void                            _internal_set_del_time(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 lev = 12 [(.sql) = {
        void                            clear_lev();
        ::PROTOBUF_NAMESPACE_ID::uint32 lev() const;
        void                            set_lev(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_lev() const;
        void                            _internal_set_lev(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 viplev = 13;
        void                            clear_viplev();
        ::PROTOBUF_NAMESPACE_ID::uint32 viplev() const;
        void                            set_viplev(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_viplev() const;
        void                            _internal_set_viplev(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint64 record_sceneid = 14;
        void                            clear_record_sceneid();
        ::PROTOBUF_NAMESPACE_ID::uint64 record_sceneid() const;
        void                            set_record_sceneid(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_record_sceneid() const;
        void                            _internal_set_record_sceneid(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // float record_x = 15;
        void  clear_record_x();
        float record_x() const;
        void  set_record_x(float value);

    private:
        float _internal_record_x() const;
        void  _internal_set_record_x(float value);

    public:
        // float record_y = 16;
        void  clear_record_y();
        float record_y() const;
        void  set_record_y(float value);

    private:
        float _internal_record_y() const;
        void  _internal_set_record_y(float value);

    public:
        // uint64 home_sceneid = 18;
        void                            clear_home_sceneid();
        ::PROTOBUF_NAMESPACE_ID::uint64 home_sceneid() const;
        void                            set_home_sceneid(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_home_sceneid() const;
        void                            _internal_set_home_sceneid(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // float record_face = 17;
        void  clear_record_face();
        float record_face() const;
        void  set_record_face(float value);

    private:
        float _internal_record_face() const;
        void  _internal_set_record_face(float value);

    public:
        // float home_x = 19;
        void  clear_home_x();
        float home_x() const;
        void  set_home_x(float value);

    private:
        float _internal_home_x() const;
        void  _internal_set_home_x(float value);

    public:
        // float home_y = 20;
        void  clear_home_y();
        float home_y() const;
        void  set_home_y(float value);

    private:
        float _internal_home_y() const;
        void  _internal_set_home_y(float value);

    public:
        // float home_face = 21;
        void  clear_home_face();
        float home_face() const;
        void  set_home_face(float value);

    private:
        float _internal_home_face() const;
        void  _internal_set_home_face(float value);

    public:
        // uint64 mate_id = 22;
        void                            clear_mate_id();
        ::PROTOBUF_NAMESPACE_ID::uint64 mate_id() const;
        void                            set_mate_id(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_mate_id() const;
        void                            _internal_set_mate_id(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint64 teamid = 24;
        void                            clear_teamid();
        ::PROTOBUF_NAMESPACE_ID::uint64 teamid() const;
        void                            set_teamid(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_teamid() const;
        void                            _internal_set_teamid(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint64 guildid = 25;
        void                            clear_guildid();
        ::PROTOBUF_NAMESPACE_ID::uint64 guildid() const;
        void                            set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_guildid() const;
        void                            _internal_set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint64 exp = 26;
        void                            clear_exp();
        ::PROTOBUF_NAMESPACE_ID::uint64 exp() const;
        void                            set_exp(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_exp() const;
        void                            _internal_set_exp(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint64 money = 27;
        void                            clear_money();
        ::PROTOBUF_NAMESPACE_ID::uint64 money() const;
        void                            set_money(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_money() const;
        void                            _internal_set_money(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint64 money_bind = 28;
        void                            clear_money_bind();
        ::PROTOBUF_NAMESPACE_ID::uint64 money_bind() const;
        void                            set_money_bind(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_money_bind() const;
        void                            _internal_set_money_bind(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint64 gold = 29;
        void                            clear_gold();
        ::PROTOBUF_NAMESPACE_ID::uint64 gold() const;
        void                            set_gold(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_gold() const;
        void                            _internal_set_gold(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint64 gold_bind = 30;
        void                            clear_gold_bind();
        ::PROTOBUF_NAMESPACE_ID::uint64 gold_bind() const;
        void                            set_gold_bind(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_gold_bind() const;
        void                            _internal_set_gold_bind(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint32 hp = 31;
        void                            clear_hp();
        ::PROTOBUF_NAMESPACE_ID::uint32 hp() const;
        void                            set_hp(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hp() const;
        void                            _internal_set_hp(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 mp = 32;
        void                            clear_mp();
        ::PROTOBUF_NAMESPACE_ID::uint32 mp() const;
        void                            set_mp(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_mp() const;
        void                            _internal_set_mp(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 fp = 33;
        void                            clear_fp();
        ::PROTOBUF_NAMESPACE_ID::uint32 fp() const;
        void                            set_fp(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_fp() const;
        void                            _internal_set_fp(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 np = 34;
        void                            clear_np();
        ::PROTOBUF_NAMESPACE_ID::uint32 np() const;
        void                            set_np(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_np() const;
        void                            _internal_set_np(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 pkval = 35;
        void                            clear_pkval();
        ::PROTOBUF_NAMESPACE_ID::uint32 pkval() const;
        void                            set_pkval(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pkval() const;
        void                            _internal_set_pkval(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 honor = 36;
        void                            clear_honor();
        ::PROTOBUF_NAMESPACE_ID::uint32 honor() const;
        void                            set_honor(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_honor() const;
        void                            _internal_set_honor(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 achipoint = 37;
        void                            clear_achipoint();
        ::PROTOBUF_NAMESPACE_ID::uint32 achipoint() const;
        void                            set_achipoint(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_achipoint() const;
        void                            _internal_set_achipoint(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 bag_size = 38;
        void                            clear_bag_size();
        ::PROTOBUF_NAMESPACE_ID::uint32 bag_size() const;
        void                            set_bag_size(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_bag_size() const;
        void                            _internal_set_bag_size(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 stroge_size = 39;
        void                            clear_stroge_size();
        ::PROTOBUF_NAMESPACE_ID::uint32 stroge_size() const;
        void                            set_stroge_size(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_stroge_size() const;
        void                            _internal_set_stroge_size(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // @@protoc_insertion_point(class_scope:db.tbld_player)
    private:
        class _Internal;

        ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
        ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr            openid_;
        ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr            name_;
        ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr            mate_name_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              id_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              worldid_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              oriworldid_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              prof_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              baselook_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              create_time_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              last_logintime_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              last_logouttime_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              del_time_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              lev_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              viplev_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              record_sceneid_;
        float                                                        record_x_;
        float                                                        record_y_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              home_sceneid_;
        float                                                        record_face_;
        float                                                        home_x_;
        float                                                        home_y_;
        float                                                        home_face_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              mate_id_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              teamid_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              guildid_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              exp_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              money_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              money_bind_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              gold_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              gold_bind_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              hp_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              mp_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              fp_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              np_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              pkval_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              honor_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              achipoint_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              bag_size_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              stroge_size_;
        mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize        _cached_size_;
        friend struct ::TableStruct_db_5fproto_2fgamedb_2eproto;
    };
    // -------------------------------------------------------------------

    class tbld_player_guildinfo : public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:db.tbld_player_guildinfo) */
    {
    public:
        tbld_player_guildinfo();
        virtual ~tbld_player_guildinfo();

        tbld_player_guildinfo(const tbld_player_guildinfo& from);
        tbld_player_guildinfo(tbld_player_guildinfo&& from) noexcept
            : tbld_player_guildinfo()
        {
            *this = ::std::move(from);
        }

        inline tbld_player_guildinfo& operator=(const tbld_player_guildinfo& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline tbld_player_guildinfo& operator=(tbld_player_guildinfo&& from) noexcept
        {
            if(GetArenaNoVirtual() == from.GetArenaNoVirtual())
            {
                if(this != &from)
                    InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() { return GetDescriptor(); }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() { return GetMetadataStatic().descriptor; }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() { return GetMetadataStatic().reflection; }
        static const tbld_player_guildinfo&               default_instance();

        static void                                InitAsDefaultInstance(); // FOR INTERNAL USE ONLY
        static inline const tbld_player_guildinfo* internal_default_instance()
        {
            return reinterpret_cast<const tbld_player_guildinfo*>(&_tbld_player_guildinfo_default_instance_);
        }
        static constexpr int kIndexInFileMessages = 10;

        friend void swap(tbld_player_guildinfo& a, tbld_player_guildinfo& b) { a.Swap(&b); }
        inline void Swap(tbld_player_guildinfo* other)
        {
            if(other == this)
                return;
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        inline tbld_player_guildinfo* New() const final { return CreateMaybeMessage<tbld_player_guildinfo>(nullptr); }

        tbld_player_guildinfo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final { return CreateMaybeMessage<tbld_player_guildinfo>(arena); }
        void                   CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
        void                   MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
        void                   CopyFrom(const tbld_player_guildinfo& from);
        void                   MergeFrom(const tbld_player_guildinfo& from);
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool                                  IsInitialized() const final;

        size_t                          ByteSizeLong() const final;
        const char*                     _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(::PROTOBUF_NAMESPACE_ID::uint8*                   target,
                                                           ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
        int                             GetCachedSize() const final { return _cached_size_.Get(); }

    private:
        inline void SharedCtor();
        inline void SharedDtor();
        void        SetCachedSize(int size) const final;
        void        InternalSwap(tbld_player_guildinfo* other);
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() { return "db.tbld_player_guildinfo"; }

    private:
        inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const { return nullptr; }
        inline void*                           MaybeArenaPtr() const { return nullptr; }

    public:
        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

    private:
        static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic()
        {
            ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_db_5fproto_2fgamedb_2eproto);
            return ::descriptor_table_db_5fproto_2fgamedb_2eproto.file_level_metadata[kIndexInFileMessages];
        }

    public:
        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kIdFieldNumber         = 1,
            kGuildidFieldNumber    = 2,
            kRankFieldNumber       = 3,
            kScoreFieldNumber      = 4,
            kTotalScoreFieldNumber = 5,
            kJoinTimeFieldNumber   = 6,
        };
        // uint64 id = 1 [(.sql) = {
        void                            clear_id();
        ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
        void                            set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
        void                            _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint64 guildid = 2;
        void                            clear_guildid();
        ::PROTOBUF_NAMESPACE_ID::uint64 guildid() const;
        void                            set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_guildid() const;
        void                            _internal_set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint32 rank = 3;
        void                            clear_rank();
        ::PROTOBUF_NAMESPACE_ID::uint32 rank() const;
        void                            set_rank(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_rank() const;
        void                            _internal_set_rank(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 score = 4;
        void                            clear_score();
        ::PROTOBUF_NAMESPACE_ID::uint32 score() const;
        void                            set_score(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_score() const;
        void                            _internal_set_score(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 total_score = 5;
        void                            clear_total_score();
        ::PROTOBUF_NAMESPACE_ID::uint32 total_score() const;
        void                            set_total_score(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_total_score() const;
        void                            _internal_set_total_score(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 join_time = 6;
        void                            clear_join_time();
        ::PROTOBUF_NAMESPACE_ID::uint32 join_time() const;
        void                            set_join_time(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_join_time() const;
        void                            _internal_set_join_time(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // @@protoc_insertion_point(class_scope:db.tbld_player_guildinfo)
    private:
        class _Internal;

        ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              id_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              guildid_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              rank_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              score_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              total_score_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              join_time_;
        mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize        _cached_size_;
        friend struct ::TableStruct_db_5fproto_2fgamedb_2eproto;
    };
    // -------------------------------------------------------------------

    class tbld_skill : public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:db.tbld_skill) */
    {
    public:
        tbld_skill();
        virtual ~tbld_skill();

        tbld_skill(const tbld_skill& from);
        tbld_skill(tbld_skill&& from) noexcept
            : tbld_skill()
        {
            *this = ::std::move(from);
        }

        inline tbld_skill& operator=(const tbld_skill& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline tbld_skill& operator=(tbld_skill&& from) noexcept
        {
            if(GetArenaNoVirtual() == from.GetArenaNoVirtual())
            {
                if(this != &from)
                    InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() { return GetDescriptor(); }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() { return GetMetadataStatic().descriptor; }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() { return GetMetadataStatic().reflection; }
        static const tbld_skill&                          default_instance();

        static void                     InitAsDefaultInstance(); // FOR INTERNAL USE ONLY
        static inline const tbld_skill* internal_default_instance() { return reinterpret_cast<const tbld_skill*>(&_tbld_skill_default_instance_); }
        static constexpr int            kIndexInFileMessages = 11;

        friend void swap(tbld_skill& a, tbld_skill& b) { a.Swap(&b); }
        inline void Swap(tbld_skill* other)
        {
            if(other == this)
                return;
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        inline tbld_skill* New() const final { return CreateMaybeMessage<tbld_skill>(nullptr); }

        tbld_skill*                           New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final { return CreateMaybeMessage<tbld_skill>(arena); }
        void                                  CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
        void                                  MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
        void                                  CopyFrom(const tbld_skill& from);
        void                                  MergeFrom(const tbld_skill& from);
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool                                  IsInitialized() const final;

        size_t                          ByteSizeLong() const final;
        const char*                     _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(::PROTOBUF_NAMESPACE_ID::uint8*                   target,
                                                           ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
        int                             GetCachedSize() const final { return _cached_size_.Get(); }

    private:
        inline void SharedCtor();
        inline void SharedDtor();
        void        SetCachedSize(int size) const final;
        void        InternalSwap(tbld_skill* other);
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() { return "db.tbld_skill"; }

    private:
        inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const { return nullptr; }
        inline void*                           MaybeArenaPtr() const { return nullptr; }

    public:
        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

    private:
        static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic()
        {
            ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_db_5fproto_2fgamedb_2eproto);
            return ::descriptor_table_db_5fproto_2fgamedb_2eproto.file_level_metadata[kIndexInFileMessages];
        }

    public:
        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kIdFieldNumber        = 1,
            kUseridFieldNumber    = 2,
            kSkilltypeFieldNumber = 3,
            kLevFieldNumber       = 4,
        };
        // uint64 id = 1 [(.sql) = {
        void                            clear_id();
        ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
        void                            set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
        void                            _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint64 userid = 2 [(.sql) = {
        void                            clear_userid();
        ::PROTOBUF_NAMESPACE_ID::uint64 userid() const;
        void                            set_userid(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_userid() const;
        void                            _internal_set_userid(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint32 skilltype = 3;
        void                            clear_skilltype();
        ::PROTOBUF_NAMESPACE_ID::uint32 skilltype() const;
        void                            set_skilltype(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_skilltype() const;
        void                            _internal_set_skilltype(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 lev = 4;
        void                            clear_lev();
        ::PROTOBUF_NAMESPACE_ID::uint32 lev() const;
        void                            set_lev(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_lev() const;
        void                            _internal_set_lev(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // @@protoc_insertion_point(class_scope:db.tbld_skill)
    private:
        class _Internal;

        ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              id_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              userid_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              skilltype_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              lev_;
        mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize        _cached_size_;
        friend struct ::TableStruct_db_5fproto_2fgamedb_2eproto;
    };
    // -------------------------------------------------------------------

    class tbld_task : public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:db.tbld_task) */
    {
    public:
        tbld_task();
        virtual ~tbld_task();

        tbld_task(const tbld_task& from);
        tbld_task(tbld_task&& from) noexcept
            : tbld_task()
        {
            *this = ::std::move(from);
        }

        inline tbld_task& operator=(const tbld_task& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline tbld_task& operator=(tbld_task&& from) noexcept
        {
            if(GetArenaNoVirtual() == from.GetArenaNoVirtual())
            {
                if(this != &from)
                    InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() { return GetDescriptor(); }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() { return GetMetadataStatic().descriptor; }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() { return GetMetadataStatic().reflection; }
        static const tbld_task&                           default_instance();

        static void                    InitAsDefaultInstance(); // FOR INTERNAL USE ONLY
        static inline const tbld_task* internal_default_instance() { return reinterpret_cast<const tbld_task*>(&_tbld_task_default_instance_); }
        static constexpr int           kIndexInFileMessages = 12;

        friend void swap(tbld_task& a, tbld_task& b) { a.Swap(&b); }
        inline void Swap(tbld_task* other)
        {
            if(other == this)
                return;
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        inline tbld_task* New() const final { return CreateMaybeMessage<tbld_task>(nullptr); }

        tbld_task*                            New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final { return CreateMaybeMessage<tbld_task>(arena); }
        void                                  CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
        void                                  MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
        void                                  CopyFrom(const tbld_task& from);
        void                                  MergeFrom(const tbld_task& from);
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool                                  IsInitialized() const final;

        size_t                          ByteSizeLong() const final;
        const char*                     _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(::PROTOBUF_NAMESPACE_ID::uint8*                   target,
                                                           ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
        int                             GetCachedSize() const final { return _cached_size_.Get(); }

    private:
        inline void SharedCtor();
        inline void SharedDtor();
        void        SetCachedSize(int size) const final;
        void        InternalSwap(tbld_task* other);
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() { return "db.tbld_task"; }

    private:
        inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const { return nullptr; }
        inline void*                           MaybeArenaPtr() const { return nullptr; }

    public:
        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

    private:
        static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic()
        {
            ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_db_5fproto_2fgamedb_2eproto);
            return ::descriptor_table_db_5fproto_2fgamedb_2eproto.file_level_metadata[kIndexInFileMessages];
        }

    public:
        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kIdFieldNumber            = 1,
            kUseridFieldNumber        = 2,
            kTaskidFieldNumber        = 3,
            kNum0FieldNumber          = 4,
            kNum1FieldNumber          = 5,
            kNum2FieldNumber          = 6,
            kNum3FieldNumber          = 7,
            kAcceptUserlevFieldNumber = 8,
            kAcceptTimeFieldNumber    = 9,
            kFinishTimeFieldNumber    = 10,
            kExpireTimeFieldNumber    = 11,
            kDaycountFieldNumber      = 12,
            kDaycountMaxFieldNumber   = 13,
            kStateFieldNumber         = 14,
        };
        // uint64 id = 1 [(.sql) = {
        void                            clear_id();
        ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
        void                            set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
        void                            _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint64 userid = 2 [(.sql) = {
        void                            clear_userid();
        ::PROTOBUF_NAMESPACE_ID::uint64 userid() const;
        void                            set_userid(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_userid() const;
        void                            _internal_set_userid(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint32 taskid = 3 [(.sql) = {
        void                            clear_taskid();
        ::PROTOBUF_NAMESPACE_ID::uint32 taskid() const;
        void                            set_taskid(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_taskid() const;
        void                            _internal_set_taskid(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 num0 = 4;
        void                            clear_num0();
        ::PROTOBUF_NAMESPACE_ID::uint32 num0() const;
        void                            set_num0(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_num0() const;
        void                            _internal_set_num0(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 num1 = 5;
        void                            clear_num1();
        ::PROTOBUF_NAMESPACE_ID::uint32 num1() const;
        void                            set_num1(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_num1() const;
        void                            _internal_set_num1(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 num2 = 6;
        void                            clear_num2();
        ::PROTOBUF_NAMESPACE_ID::uint32 num2() const;
        void                            set_num2(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_num2() const;
        void                            _internal_set_num2(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 num3 = 7;
        void                            clear_num3();
        ::PROTOBUF_NAMESPACE_ID::uint32 num3() const;
        void                            set_num3(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_num3() const;
        void                            _internal_set_num3(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 accept_userlev = 8;
        void                            clear_accept_userlev();
        ::PROTOBUF_NAMESPACE_ID::uint32 accept_userlev() const;
        void                            set_accept_userlev(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_accept_userlev() const;
        void                            _internal_set_accept_userlev(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 accept_time = 9;
        void                            clear_accept_time();
        ::PROTOBUF_NAMESPACE_ID::uint32 accept_time() const;
        void                            set_accept_time(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_accept_time() const;
        void                            _internal_set_accept_time(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 finish_time = 10;
        void                            clear_finish_time();
        ::PROTOBUF_NAMESPACE_ID::uint32 finish_time() const;
        void                            set_finish_time(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_finish_time() const;
        void                            _internal_set_finish_time(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 expire_time = 11;
        void                            clear_expire_time();
        ::PROTOBUF_NAMESPACE_ID::uint32 expire_time() const;
        void                            set_expire_time(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_expire_time() const;
        void                            _internal_set_expire_time(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 daycount = 12;
        void                            clear_daycount();
        ::PROTOBUF_NAMESPACE_ID::uint32 daycount() const;
        void                            set_daycount(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_daycount() const;
        void                            _internal_set_daycount(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 daycount_max = 13;
        void                            clear_daycount_max();
        ::PROTOBUF_NAMESPACE_ID::uint32 daycount_max() const;
        void                            set_daycount_max(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_daycount_max() const;
        void                            _internal_set_daycount_max(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 state = 14;
        void                            clear_state();
        ::PROTOBUF_NAMESPACE_ID::uint32 state() const;
        void                            set_state(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_state() const;
        void                            _internal_set_state(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // @@protoc_insertion_point(class_scope:db.tbld_task)
    private:
        class _Internal;

        ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              id_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              userid_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              taskid_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              num0_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              num1_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              num2_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              num3_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              accept_userlev_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              accept_time_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              finish_time_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              expire_time_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              daycount_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              daycount_max_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              state_;
        mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize        _cached_size_;
        friend struct ::TableStruct_db_5fproto_2fgamedb_2eproto;
    };
    // -------------------------------------------------------------------

    class tbld_achievement : public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:db.tbld_achievement) */
    {
    public:
        tbld_achievement();
        virtual ~tbld_achievement();

        tbld_achievement(const tbld_achievement& from);
        tbld_achievement(tbld_achievement&& from) noexcept
            : tbld_achievement()
        {
            *this = ::std::move(from);
        }

        inline tbld_achievement& operator=(const tbld_achievement& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline tbld_achievement& operator=(tbld_achievement&& from) noexcept
        {
            if(GetArenaNoVirtual() == from.GetArenaNoVirtual())
            {
                if(this != &from)
                    InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() { return GetDescriptor(); }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() { return GetMetadataStatic().descriptor; }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() { return GetMetadataStatic().reflection; }
        static const tbld_achievement&                    default_instance();

        static void                           InitAsDefaultInstance(); // FOR INTERNAL USE ONLY
        static inline const tbld_achievement* internal_default_instance()
        {
            return reinterpret_cast<const tbld_achievement*>(&_tbld_achievement_default_instance_);
        }
        static constexpr int kIndexInFileMessages = 13;

        friend void swap(tbld_achievement& a, tbld_achievement& b) { a.Swap(&b); }
        inline void Swap(tbld_achievement* other)
        {
            if(other == this)
                return;
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        inline tbld_achievement* New() const final { return CreateMaybeMessage<tbld_achievement>(nullptr); }

        tbld_achievement* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final { return CreateMaybeMessage<tbld_achievement>(arena); }
        void              CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
        void              MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
        void              CopyFrom(const tbld_achievement& from);
        void              MergeFrom(const tbld_achievement& from);
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool                                  IsInitialized() const final;

        size_t                          ByteSizeLong() const final;
        const char*                     _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(::PROTOBUF_NAMESPACE_ID::uint8*                   target,
                                                           ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
        int                             GetCachedSize() const final { return _cached_size_.Get(); }

    private:
        inline void SharedCtor();
        inline void SharedDtor();
        void        SetCachedSize(int size) const final;
        void        InternalSwap(tbld_achievement* other);
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() { return "db.tbld_achievement"; }

    private:
        inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const { return nullptr; }
        inline void*                           MaybeArenaPtr() const { return nullptr; }

    public:
        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

    private:
        static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic()
        {
            ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_db_5fproto_2fgamedb_2eproto);
            return ::descriptor_table_db_5fproto_2fgamedb_2eproto.file_level_metadata[kIndexInFileMessages];
        }

    public:
        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kIdFieldNumber     = 1,
            kUseridFieldNumber = 2,
            kAchiidFieldNumber = 3,
            kTakeFieldNumber   = 4,
        };
        // uint64 id = 1 [(.sql) = {
        void                            clear_id();
        ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
        void                            set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
        void                            _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint64 userid = 2 [(.sql) = {
        void                            clear_userid();
        ::PROTOBUF_NAMESPACE_ID::uint64 userid() const;
        void                            set_userid(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_userid() const;
        void                            _internal_set_userid(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint32 achiid = 3 [(.sql) = {
        void                            clear_achiid();
        ::PROTOBUF_NAMESPACE_ID::uint32 achiid() const;
        void                            set_achiid(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_achiid() const;
        void                            _internal_set_achiid(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 take = 4;
        void                            clear_take();
        ::PROTOBUF_NAMESPACE_ID::uint32 take() const;
        void                            set_take(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_take() const;
        void                            _internal_set_take(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // @@protoc_insertion_point(class_scope:db.tbld_achievement)
    private:
        class _Internal;

        ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              id_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              userid_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              achiid_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              take_;
        mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize        _cached_size_;
        friend struct ::TableStruct_db_5fproto_2fgamedb_2eproto;
    };
    // -------------------------------------------------------------------

    class tbld_status : public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:db.tbld_status) */
    {
    public:
        tbld_status();
        virtual ~tbld_status();

        tbld_status(const tbld_status& from);
        tbld_status(tbld_status&& from) noexcept
            : tbld_status()
        {
            *this = ::std::move(from);
        }

        inline tbld_status& operator=(const tbld_status& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline tbld_status& operator=(tbld_status&& from) noexcept
        {
            if(GetArenaNoVirtual() == from.GetArenaNoVirtual())
            {
                if(this != &from)
                    InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() { return GetDescriptor(); }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() { return GetMetadataStatic().descriptor; }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() { return GetMetadataStatic().reflection; }
        static const tbld_status&                         default_instance();

        static void                      InitAsDefaultInstance(); // FOR INTERNAL USE ONLY
        static inline const tbld_status* internal_default_instance() { return reinterpret_cast<const tbld_status*>(&_tbld_status_default_instance_); }
        static constexpr int             kIndexInFileMessages = 14;

        friend void swap(tbld_status& a, tbld_status& b) { a.Swap(&b); }
        inline void Swap(tbld_status* other)
        {
            if(other == this)
                return;
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        inline tbld_status* New() const final { return CreateMaybeMessage<tbld_status>(nullptr); }

        tbld_status* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final { return CreateMaybeMessage<tbld_status>(arena); }
        void         CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
        void         MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
        void         CopyFrom(const tbld_status& from);
        void         MergeFrom(const tbld_status& from);
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool                                  IsInitialized() const final;

        size_t                          ByteSizeLong() const final;
        const char*                     _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(::PROTOBUF_NAMESPACE_ID::uint8*                   target,
                                                           ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
        int                             GetCachedSize() const final { return _cached_size_.Get(); }

    private:
        inline void SharedCtor();
        inline void SharedDtor();
        void        SetCachedSize(int size) const final;
        void        InternalSwap(tbld_status* other);
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() { return "db.tbld_status"; }

    private:
        inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const { return nullptr; }
        inline void*                           MaybeArenaPtr() const { return nullptr; }

    public:
        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

    private:
        static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic()
        {
            ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_db_5fproto_2fgamedb_2eproto);
            return ::descriptor_table_db_5fproto_2fgamedb_2eproto.file_level_metadata[kIndexInFileMessages];
        }

    public:
        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kIdFieldNumber        = 1,
            kUseridFieldNumber    = 2,
            kTypeidFieldNumber    = 3,
            kLevFieldNumber       = 4,
            kPowerFieldNumber     = 5,
            kSecsFieldNumber      = 6,
            kTimesFieldNumber     = 7,
            kLaststampFieldNumber = 8,
            kCasteridFieldNumber  = 9,
            kPauseFieldNumber     = 10,
            kStatusidFieldNumber  = 11,
        };
        // uint64 id = 1 [(.sql) = {
        void                            clear_id();
        ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
        void                            set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
        void                            _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint64 userid = 2 [(.sql) = {
        void                            clear_userid();
        ::PROTOBUF_NAMESPACE_ID::uint64 userid() const;
        void                            set_userid(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_userid() const;
        void                            _internal_set_userid(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint32 typeid = 3 [(.sql) = {
        void                            clear_typeid_();
        ::PROTOBUF_NAMESPACE_ID::uint32 typeid_() const;
        void                            set_typeid_(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_typeid_() const;
        void                            _internal_set_typeid_(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 lev = 4 [(.sql) = {
        void                            clear_lev();
        ::PROTOBUF_NAMESPACE_ID::uint32 lev() const;
        void                            set_lev(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_lev() const;
        void                            _internal_set_lev(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 power = 5;
        void                            clear_power();
        ::PROTOBUF_NAMESPACE_ID::uint32 power() const;
        void                            set_power(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_power() const;
        void                            _internal_set_power(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 secs = 6;
        void                            clear_secs();
        ::PROTOBUF_NAMESPACE_ID::uint32 secs() const;
        void                            set_secs(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_secs() const;
        void                            _internal_set_secs(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 times = 7;
        void                            clear_times();
        ::PROTOBUF_NAMESPACE_ID::uint32 times() const;
        void                            set_times(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_times() const;
        void                            _internal_set_times(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 laststamp = 8;
        void                            clear_laststamp();
        ::PROTOBUF_NAMESPACE_ID::uint32 laststamp() const;
        void                            set_laststamp(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_laststamp() const;
        void                            _internal_set_laststamp(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint64 casterid = 9;
        void                            clear_casterid();
        ::PROTOBUF_NAMESPACE_ID::uint64 casterid() const;
        void                            set_casterid(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_casterid() const;
        void                            _internal_set_casterid(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint32 pause = 10 [(.sql) = {
        void                            clear_pause();
        ::PROTOBUF_NAMESPACE_ID::uint32 pause() const;
        void                            set_pause(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_pause() const;
        void                            _internal_set_pause(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // uint32 statusid = 11;
        void                            clear_statusid();
        ::PROTOBUF_NAMESPACE_ID::uint32 statusid() const;
        void                            set_statusid(::PROTOBUF_NAMESPACE_ID::uint32 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint32 _internal_statusid() const;
        void                            _internal_set_statusid(::PROTOBUF_NAMESPACE_ID::uint32 value);

    public:
        // @@protoc_insertion_point(class_scope:db.tbld_status)
    private:
        class _Internal;

        ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              id_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              userid_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              typeid__;
        ::PROTOBUF_NAMESPACE_ID::uint32                              lev_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              power_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              secs_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              times_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              laststamp_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              casterid_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              pause_;
        ::PROTOBUF_NAMESPACE_ID::uint32                              statusid_;
        mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize        _cached_size_;
        friend struct ::TableStruct_db_5fproto_2fgamedb_2eproto;
    };
    // -------------------------------------------------------------------

    class tbld_systemvar : public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:db.tbld_systemvar) */
    {
    public:
        tbld_systemvar();
        virtual ~tbld_systemvar();

        tbld_systemvar(const tbld_systemvar& from);
        tbld_systemvar(tbld_systemvar&& from) noexcept
            : tbld_systemvar()
        {
            *this = ::std::move(from);
        }

        inline tbld_systemvar& operator=(const tbld_systemvar& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline tbld_systemvar& operator=(tbld_systemvar&& from) noexcept
        {
            if(GetArenaNoVirtual() == from.GetArenaNoVirtual())
            {
                if(this != &from)
                    InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() { return GetDescriptor(); }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() { return GetMetadataStatic().descriptor; }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() { return GetMetadataStatic().reflection; }
        static const tbld_systemvar&                      default_instance();

        static void                         InitAsDefaultInstance(); // FOR INTERNAL USE ONLY
        static inline const tbld_systemvar* internal_default_instance()
        {
            return reinterpret_cast<const tbld_systemvar*>(&_tbld_systemvar_default_instance_);
        }
        static constexpr int kIndexInFileMessages = 15;

        friend void swap(tbld_systemvar& a, tbld_systemvar& b) { a.Swap(&b); }
        inline void Swap(tbld_systemvar* other)
        {
            if(other == this)
                return;
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        inline tbld_systemvar* New() const final { return CreateMaybeMessage<tbld_systemvar>(nullptr); }

        tbld_systemvar* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final { return CreateMaybeMessage<tbld_systemvar>(arena); }
        void            CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
        void            MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
        void            CopyFrom(const tbld_systemvar& from);
        void            MergeFrom(const tbld_systemvar& from);
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool                                  IsInitialized() const final;

        size_t                          ByteSizeLong() const final;
        const char*                     _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(::PROTOBUF_NAMESPACE_ID::uint8*                   target,
                                                           ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
        int                             GetCachedSize() const final { return _cached_size_.Get(); }

    private:
        inline void SharedCtor();
        inline void SharedDtor();
        void        SetCachedSize(int size) const final;
        void        InternalSwap(tbld_systemvar* other);
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() { return "db.tbld_systemvar"; }

    private:
        inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const { return nullptr; }
        inline void*                           MaybeArenaPtr() const { return nullptr; }

    public:
        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

    private:
        static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic()
        {
            ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_db_5fproto_2fgamedb_2eproto);
            return ::descriptor_table_db_5fproto_2fgamedb_2eproto.file_level_metadata[kIndexInFileMessages];
        }

    public:
        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kNameFieldNumber   = 2,
            kStr0FieldNumber   = 7,
            kStr1FieldNumber   = 8,
            kStr2FieldNumber   = 9,
            kStr3FieldNumber   = 10,
            kKeyidxFieldNumber = 1,
            kData0FieldNumber  = 3,
            kData1FieldNumber  = 4,
            kData2FieldNumber  = 5,
            kData3FieldNumber  = 6,
        };
        // string name = 2 [(.sql) = {
        void               clear_name();
        const std::string& name() const;
        void               set_name(const std::string& value);
        void               set_name(std::string&& value);
        void               set_name(const char* value);
        void               set_name(const char* value, size_t size);
        std::string*       mutable_name();
        std::string*       release_name();
        void               set_allocated_name(std::string* name);

    private:
        const std::string& _internal_name() const;
        void               _internal_set_name(const std::string& value);
        std::string*       _internal_mutable_name();

    public:
        // string str0 = 7 [(.sql) = {
        void               clear_str0();
        const std::string& str0() const;
        void               set_str0(const std::string& value);
        void               set_str0(std::string&& value);
        void               set_str0(const char* value);
        void               set_str0(const char* value, size_t size);
        std::string*       mutable_str0();
        std::string*       release_str0();
        void               set_allocated_str0(std::string* str0);

    private:
        const std::string& _internal_str0() const;
        void               _internal_set_str0(const std::string& value);
        std::string*       _internal_mutable_str0();

    public:
        // string str1 = 8 [(.sql) = {
        void               clear_str1();
        const std::string& str1() const;
        void               set_str1(const std::string& value);
        void               set_str1(std::string&& value);
        void               set_str1(const char* value);
        void               set_str1(const char* value, size_t size);
        std::string*       mutable_str1();
        std::string*       release_str1();
        void               set_allocated_str1(std::string* str1);

    private:
        const std::string& _internal_str1() const;
        void               _internal_set_str1(const std::string& value);
        std::string*       _internal_mutable_str1();

    public:
        // string str2 = 9 [(.sql) = {
        void               clear_str2();
        const std::string& str2() const;
        void               set_str2(const std::string& value);
        void               set_str2(std::string&& value);
        void               set_str2(const char* value);
        void               set_str2(const char* value, size_t size);
        std::string*       mutable_str2();
        std::string*       release_str2();
        void               set_allocated_str2(std::string* str2);

    private:
        const std::string& _internal_str2() const;
        void               _internal_set_str2(const std::string& value);
        std::string*       _internal_mutable_str2();

    public:
        // string str3 = 10 [(.sql) = {
        void               clear_str3();
        const std::string& str3() const;
        void               set_str3(const std::string& value);
        void               set_str3(std::string&& value);
        void               set_str3(const char* value);
        void               set_str3(const char* value, size_t size);
        std::string*       mutable_str3();
        std::string*       release_str3();
        void               set_allocated_str3(std::string* str3);

    private:
        const std::string& _internal_str3() const;
        void               _internal_set_str3(const std::string& value);
        std::string*       _internal_mutable_str3();

    public:
        // uint64 keyidx = 1 [(.sql) = {
        void                            clear_keyidx();
        ::PROTOBUF_NAMESPACE_ID::uint64 keyidx() const;
        void                            set_keyidx(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_keyidx() const;
        void                            _internal_set_keyidx(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint64 data0 = 3;
        void                            clear_data0();
        ::PROTOBUF_NAMESPACE_ID::uint64 data0() const;
        void                            set_data0(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_data0() const;
        void                            _internal_set_data0(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint64 data1 = 4;
        void                            clear_data1();
        ::PROTOBUF_NAMESPACE_ID::uint64 data1() const;
        void                            set_data1(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_data1() const;
        void                            _internal_set_data1(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint64 data2 = 5;
        void                            clear_data2();
        ::PROTOBUF_NAMESPACE_ID::uint64 data2() const;
        void                            set_data2(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_data2() const;
        void                            _internal_set_data2(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // uint64 data3 = 6;
        void                            clear_data3();
        ::PROTOBUF_NAMESPACE_ID::uint64 data3() const;
        void                            set_data3(::PROTOBUF_NAMESPACE_ID::uint64 value);

    private:
        ::PROTOBUF_NAMESPACE_ID::uint64 _internal_data3() const;
        void                            _internal_set_data3(::PROTOBUF_NAMESPACE_ID::uint64 value);

    public:
        // @@protoc_insertion_point(class_scope:db.tbld_systemvar)
    private:
        class _Internal;

        ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
        ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr            name_;
        ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr            str0_;
        ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr            str1_;
        ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr            str2_;
        ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr            str3_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              keyidx_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              data0_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              data1_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              data2_;
        ::PROTOBUF_NAMESPACE_ID::uint64                              data3_;
        mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize        _cached_size_;
        friend struct ::TableStruct_db_5fproto_2fgamedb_2eproto;
    };
    // ===================================================================

    // ===================================================================

#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif // __GNUC__
    // tbld_commondata

    // uint64 id = 1 [(.sql) = {
    inline void                            tbld_commondata::clear_id() { id_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_commondata::_internal_id() const { return id_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_commondata::id() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_commondata.id)
        return _internal_id();
    }
    inline void tbld_commondata::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) { id_ = value; }
    inline void tbld_commondata::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_id(value);
        // @@protoc_insertion_point(field_set:db.tbld_commondata.id)
    }

    // uint64 playerid = 2 [(.sql) = {
    inline void                            tbld_commondata::clear_playerid() { playerid_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_commondata::_internal_playerid() const { return playerid_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_commondata::playerid() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_commondata.playerid)
        return _internal_playerid();
    }
    inline void tbld_commondata::_internal_set_playerid(::PROTOBUF_NAMESPACE_ID::uint64 value) { playerid_ = value; }
    inline void tbld_commondata::set_playerid(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_playerid(value);
        // @@protoc_insertion_point(field_set:db.tbld_commondata.playerid)
    }

    // uint32 keytype = 3;
    inline void                            tbld_commondata::clear_keytype() { keytype_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_commondata::_internal_keytype() const { return keytype_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_commondata::keytype() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_commondata.keytype)
        return _internal_keytype();
    }
    inline void tbld_commondata::_internal_set_keytype(::PROTOBUF_NAMESPACE_ID::uint32 value) { keytype_ = value; }
    inline void tbld_commondata::set_keytype(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_keytype(value);
        // @@protoc_insertion_point(field_set:db.tbld_commondata.keytype)
    }

    // uint32 keyidx = 4;
    inline void                            tbld_commondata::clear_keyidx() { keyidx_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_commondata::_internal_keyidx() const { return keyidx_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_commondata::keyidx() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_commondata.keyidx)
        return _internal_keyidx();
    }
    inline void tbld_commondata::_internal_set_keyidx(::PROTOBUF_NAMESPACE_ID::uint32 value) { keyidx_ = value; }
    inline void tbld_commondata::set_keyidx(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_keyidx(value);
        // @@protoc_insertion_point(field_set:db.tbld_commondata.keyidx)
    }

    // uint64 data0 = 5;
    inline void                            tbld_commondata::clear_data0() { data0_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_commondata::_internal_data0() const { return data0_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_commondata::data0() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_commondata.data0)
        return _internal_data0();
    }
    inline void tbld_commondata::_internal_set_data0(::PROTOBUF_NAMESPACE_ID::uint64 value) { data0_ = value; }
    inline void tbld_commondata::set_data0(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_data0(value);
        // @@protoc_insertion_point(field_set:db.tbld_commondata.data0)
    }

    // uint64 data1 = 6;
    inline void                            tbld_commondata::clear_data1() { data1_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_commondata::_internal_data1() const { return data1_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_commondata::data1() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_commondata.data1)
        return _internal_data1();
    }
    inline void tbld_commondata::_internal_set_data1(::PROTOBUF_NAMESPACE_ID::uint64 value) { data1_ = value; }
    inline void tbld_commondata::set_data1(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_data1(value);
        // @@protoc_insertion_point(field_set:db.tbld_commondata.data1)
    }

    // uint64 data2 = 7;
    inline void                            tbld_commondata::clear_data2() { data2_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_commondata::_internal_data2() const { return data2_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_commondata::data2() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_commondata.data2)
        return _internal_data2();
    }
    inline void tbld_commondata::_internal_set_data2(::PROTOBUF_NAMESPACE_ID::uint64 value) { data2_ = value; }
    inline void tbld_commondata::set_data2(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_data2(value);
        // @@protoc_insertion_point(field_set:db.tbld_commondata.data2)
    }

    // uint64 data3 = 8;
    inline void                            tbld_commondata::clear_data3() { data3_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_commondata::_internal_data3() const { return data3_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_commondata::data3() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_commondata.data3)
        return _internal_data3();
    }
    inline void tbld_commondata::_internal_set_data3(::PROTOBUF_NAMESPACE_ID::uint64 value) { data3_ = value; }
    inline void tbld_commondata::set_data3(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_data3(value);
        // @@protoc_insertion_point(field_set:db.tbld_commondata.data3)
    }

    // -------------------------------------------------------------------

    // tbld_cooldown

    // uint64 id = 1 [(.sql) = {
    inline void                            tbld_cooldown::clear_id() { id_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_cooldown::_internal_id() const { return id_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_cooldown::id() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_cooldown.id)
        return _internal_id();
    }
    inline void tbld_cooldown::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) { id_ = value; }
    inline void tbld_cooldown::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_id(value);
        // @@protoc_insertion_point(field_set:db.tbld_cooldown.id)
    }

    // uint64 playerid = 2 [(.sql) = {
    inline void                            tbld_cooldown::clear_playerid() { playerid_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_cooldown::_internal_playerid() const { return playerid_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_cooldown::playerid() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_cooldown.playerid)
        return _internal_playerid();
    }
    inline void tbld_cooldown::_internal_set_playerid(::PROTOBUF_NAMESPACE_ID::uint64 value) { playerid_ = value; }
    inline void tbld_cooldown::set_playerid(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_playerid(value);
        // @@protoc_insertion_point(field_set:db.tbld_cooldown.playerid)
    }

    // uint32 keytype = 3 [(.sql) = {
    inline void                            tbld_cooldown::clear_keytype() { keytype_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_cooldown::_internal_keytype() const { return keytype_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_cooldown::keytype() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_cooldown.keytype)
        return _internal_keytype();
    }
    inline void tbld_cooldown::_internal_set_keytype(::PROTOBUF_NAMESPACE_ID::uint32 value) { keytype_ = value; }
    inline void tbld_cooldown::set_keytype(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_keytype(value);
        // @@protoc_insertion_point(field_set:db.tbld_cooldown.keytype)
    }

    // uint32 keyidx = 4 [(.sql) = {
    inline void                            tbld_cooldown::clear_keyidx() { keyidx_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_cooldown::_internal_keyidx() const { return keyidx_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_cooldown::keyidx() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_cooldown.keyidx)
        return _internal_keyidx();
    }
    inline void tbld_cooldown::_internal_set_keyidx(::PROTOBUF_NAMESPACE_ID::uint32 value) { keyidx_ = value; }
    inline void tbld_cooldown::set_keyidx(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_keyidx(value);
        // @@protoc_insertion_point(field_set:db.tbld_cooldown.keyidx)
    }

    // uint32 expire_time = 5;
    inline void                            tbld_cooldown::clear_expire_time() { expire_time_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_cooldown::_internal_expire_time() const { return expire_time_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_cooldown::expire_time() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_cooldown.expire_time)
        return _internal_expire_time();
    }
    inline void tbld_cooldown::_internal_set_expire_time(::PROTOBUF_NAMESPACE_ID::uint32 value) { expire_time_ = value; }
    inline void tbld_cooldown::set_expire_time(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_expire_time(value);
        // @@protoc_insertion_point(field_set:db.tbld_cooldown.expire_time)
    }

    // -------------------------------------------------------------------

    // tbld_datacount

    // uint64 id = 1 [(.sql) = {
    inline void                            tbld_datacount::clear_id() { id_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_datacount::_internal_id() const { return id_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_datacount::id() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_datacount.id)
        return _internal_id();
    }
    inline void tbld_datacount::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) { id_ = value; }
    inline void tbld_datacount::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_id(value);
        // @@protoc_insertion_point(field_set:db.tbld_datacount.id)
    }

    // uint64 playerid = 2 [(.sql) = {
    inline void                            tbld_datacount::clear_playerid() { playerid_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_datacount::_internal_playerid() const { return playerid_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_datacount::playerid() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_datacount.playerid)
        return _internal_playerid();
    }
    inline void tbld_datacount::_internal_set_playerid(::PROTOBUF_NAMESPACE_ID::uint64 value) { playerid_ = value; }
    inline void tbld_datacount::set_playerid(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_playerid(value);
        // @@protoc_insertion_point(field_set:db.tbld_datacount.playerid)
    }

    // uint32 keytype = 3 [(.sql) = {
    inline void                            tbld_datacount::clear_keytype() { keytype_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_datacount::_internal_keytype() const { return keytype_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_datacount::keytype() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_datacount.keytype)
        return _internal_keytype();
    }
    inline void tbld_datacount::_internal_set_keytype(::PROTOBUF_NAMESPACE_ID::uint32 value) { keytype_ = value; }
    inline void tbld_datacount::set_keytype(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_keytype(value);
        // @@protoc_insertion_point(field_set:db.tbld_datacount.keytype)
    }

    // uint32 keyidx = 4 [(.sql) = {
    inline void                            tbld_datacount::clear_keyidx() { keyidx_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_datacount::_internal_keyidx() const { return keyidx_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_datacount::keyidx() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_datacount.keyidx)
        return _internal_keyidx();
    }
    inline void tbld_datacount::_internal_set_keyidx(::PROTOBUF_NAMESPACE_ID::uint32 value) { keyidx_ = value; }
    inline void tbld_datacount::set_keyidx(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_keyidx(value);
        // @@protoc_insertion_point(field_set:db.tbld_datacount.keyidx)
    }

    // uint64 data_num = 5;
    inline void                            tbld_datacount::clear_data_num() { data_num_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_datacount::_internal_data_num() const { return data_num_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_datacount::data_num() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_datacount.data_num)
        return _internal_data_num();
    }
    inline void tbld_datacount::_internal_set_data_num(::PROTOBUF_NAMESPACE_ID::uint64 value) { data_num_ = value; }
    inline void tbld_datacount::set_data_num(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_data_num(value);
        // @@protoc_insertion_point(field_set:db.tbld_datacount.data_num)
    }

    // uint32 next_reset_time = 6;
    inline void                            tbld_datacount::clear_next_reset_time() { next_reset_time_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_datacount::_internal_next_reset_time() const { return next_reset_time_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_datacount::next_reset_time() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_datacount.next_reset_time)
        return _internal_next_reset_time();
    }
    inline void tbld_datacount::_internal_set_next_reset_time(::PROTOBUF_NAMESPACE_ID::uint32 value) { next_reset_time_ = value; }
    inline void tbld_datacount::set_next_reset_time(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_next_reset_time(value);
        // @@protoc_insertion_point(field_set:db.tbld_datacount.next_reset_time)
    }

    // -------------------------------------------------------------------

    // tbld_global_mail

    // uint64 id = 1 [(.sql) = {
    inline void                            tbld_global_mail::clear_id() { id_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_global_mail::_internal_id() const { return id_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_global_mail::id() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_global_mail.id)
        return _internal_id();
    }
    inline void tbld_global_mail::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) { id_ = value; }
    inline void tbld_global_mail::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_id(value);
        // @@protoc_insertion_point(field_set:db.tbld_global_mail.id)
    }

    // uint64 senderid = 2 [(.sql) = {
    inline void                            tbld_global_mail::clear_senderid() { senderid_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_global_mail::_internal_senderid() const { return senderid_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_global_mail::senderid() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_global_mail.senderid)
        return _internal_senderid();
    }
    inline void tbld_global_mail::_internal_set_senderid(::PROTOBUF_NAMESPACE_ID::uint64 value) { senderid_ = value; }
    inline void tbld_global_mail::set_senderid(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_senderid(value);
        // @@protoc_insertion_point(field_set:db.tbld_global_mail.senderid)
    }

    // string sendername = 3 [(.sql) = {
    inline void tbld_global_mail::clear_sendername()
    {
        sendername_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline const std::string& tbld_global_mail::sendername() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_global_mail.sendername)
        return _internal_sendername();
    }
    inline void tbld_global_mail::set_sendername(const std::string& value)
    {
        _internal_set_sendername(value);
        // @@protoc_insertion_point(field_set:db.tbld_global_mail.sendername)
    }
    inline std::string* tbld_global_mail::mutable_sendername()
    {
        // @@protoc_insertion_point(field_mutable:db.tbld_global_mail.sendername)
        return _internal_mutable_sendername();
    }
    inline const std::string& tbld_global_mail::_internal_sendername() const { return sendername_.GetNoArena(); }
    inline void               tbld_global_mail::_internal_set_sendername(const std::string& value)
    {

        sendername_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
    }
    inline void tbld_global_mail::set_sendername(std::string&& value)
    {

        sendername_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
        // @@protoc_insertion_point(field_set_rvalue:db.tbld_global_mail.sendername)
    }
    inline void tbld_global_mail::set_sendername(const char* value)
    {
        GOOGLE_DCHECK(value != nullptr);

        sendername_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
        // @@protoc_insertion_point(field_set_char:db.tbld_global_mail.sendername)
    }
    inline void tbld_global_mail::set_sendername(const char* value, size_t size)
    {

        sendername_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
                               ::std::string(reinterpret_cast<const char*>(value), size));
        // @@protoc_insertion_point(field_set_pointer:db.tbld_global_mail.sendername)
    }
    inline std::string* tbld_global_mail::_internal_mutable_sendername()
    {

        return sendername_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline std::string* tbld_global_mail::release_sendername()
    {
        // @@protoc_insertion_point(field_release:db.tbld_global_mail.sendername)

        return sendername_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline void tbld_global_mail::set_allocated_sendername(std::string* sendername)
    {
        if(sendername != nullptr)
        {
        }
        else
        {
        }
        sendername_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sendername);
        // @@protoc_insertion_point(field_set_allocated:db.tbld_global_mail.sendername)
    }

    // uint32 create_time = 4 [(.sql) = {
    inline void                            tbld_global_mail::clear_create_time() { create_time_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_global_mail::_internal_create_time() const { return create_time_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_global_mail::create_time() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_global_mail.create_time)
        return _internal_create_time();
    }
    inline void tbld_global_mail::_internal_set_create_time(::PROTOBUF_NAMESPACE_ID::uint32 value) { create_time_ = value; }
    inline void tbld_global_mail::set_create_time(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_create_time(value);
        // @@protoc_insertion_point(field_set:db.tbld_global_mail.create_time)
    }

    // uint64 flag = 5;
    inline void                            tbld_global_mail::clear_flag() { flag_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_global_mail::_internal_flag() const { return flag_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_global_mail::flag() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_global_mail.flag)
        return _internal_flag();
    }
    inline void tbld_global_mail::_internal_set_flag(::PROTOBUF_NAMESPACE_ID::uint64 value) { flag_ = value; }
    inline void tbld_global_mail::set_flag(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_flag(value);
        // @@protoc_insertion_point(field_set:db.tbld_global_mail.flag)
    }

    // string subject = 6 [(.sql) = {
    inline void tbld_global_mail::clear_subject() { subject_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited()); }
    inline const std::string& tbld_global_mail::subject() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_global_mail.subject)
        return _internal_subject();
    }
    inline void tbld_global_mail::set_subject(const std::string& value)
    {
        _internal_set_subject(value);
        // @@protoc_insertion_point(field_set:db.tbld_global_mail.subject)
    }
    inline std::string* tbld_global_mail::mutable_subject()
    {
        // @@protoc_insertion_point(field_mutable:db.tbld_global_mail.subject)
        return _internal_mutable_subject();
    }
    inline const std::string& tbld_global_mail::_internal_subject() const { return subject_.GetNoArena(); }
    inline void               tbld_global_mail::_internal_set_subject(const std::string& value)
    {

        subject_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
    }
    inline void tbld_global_mail::set_subject(std::string&& value)
    {

        subject_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
        // @@protoc_insertion_point(field_set_rvalue:db.tbld_global_mail.subject)
    }
    inline void tbld_global_mail::set_subject(const char* value)
    {
        GOOGLE_DCHECK(value != nullptr);

        subject_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
        // @@protoc_insertion_point(field_set_char:db.tbld_global_mail.subject)
    }
    inline void tbld_global_mail::set_subject(const char* value, size_t size)
    {

        subject_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
                            ::std::string(reinterpret_cast<const char*>(value), size));
        // @@protoc_insertion_point(field_set_pointer:db.tbld_global_mail.subject)
    }
    inline std::string* tbld_global_mail::_internal_mutable_subject()
    {

        return subject_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline std::string* tbld_global_mail::release_subject()
    {
        // @@protoc_insertion_point(field_release:db.tbld_global_mail.subject)

        return subject_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline void tbld_global_mail::set_allocated_subject(std::string* subject)
    {
        if(subject != nullptr)
        {
        }
        else
        {
        }
        subject_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), subject);
        // @@protoc_insertion_point(field_set_allocated:db.tbld_global_mail.subject)
    }

    // string content = 7 [(.sql) = {
    inline void tbld_global_mail::clear_content() { content_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited()); }
    inline const std::string& tbld_global_mail::content() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_global_mail.content)
        return _internal_content();
    }
    inline void tbld_global_mail::set_content(const std::string& value)
    {
        _internal_set_content(value);
        // @@protoc_insertion_point(field_set:db.tbld_global_mail.content)
    }
    inline std::string* tbld_global_mail::mutable_content()
    {
        // @@protoc_insertion_point(field_mutable:db.tbld_global_mail.content)
        return _internal_mutable_content();
    }
    inline const std::string& tbld_global_mail::_internal_content() const { return content_.GetNoArena(); }
    inline void               tbld_global_mail::_internal_set_content(const std::string& value)
    {

        content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
    }
    inline void tbld_global_mail::set_content(std::string&& value)
    {

        content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
        // @@protoc_insertion_point(field_set_rvalue:db.tbld_global_mail.content)
    }
    inline void tbld_global_mail::set_content(const char* value)
    {
        GOOGLE_DCHECK(value != nullptr);

        content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
        // @@protoc_insertion_point(field_set_char:db.tbld_global_mail.content)
    }
    inline void tbld_global_mail::set_content(const char* value, size_t size)
    {

        content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
                            ::std::string(reinterpret_cast<const char*>(value), size));
        // @@protoc_insertion_point(field_set_pointer:db.tbld_global_mail.content)
    }
    inline std::string* tbld_global_mail::_internal_mutable_content()
    {

        return content_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline std::string* tbld_global_mail::release_content()
    {
        // @@protoc_insertion_point(field_release:db.tbld_global_mail.content)

        return content_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline void tbld_global_mail::set_allocated_content(std::string* content)
    {
        if(content != nullptr)
        {
        }
        else
        {
        }
        content_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), content);
        // @@protoc_insertion_point(field_set_allocated:db.tbld_global_mail.content)
    }

    // uint64 filter_type = 8;
    inline void                            tbld_global_mail::clear_filter_type() { filter_type_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_global_mail::_internal_filter_type() const { return filter_type_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_global_mail::filter_type() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_global_mail.filter_type)
        return _internal_filter_type();
    }
    inline void tbld_global_mail::_internal_set_filter_type(::PROTOBUF_NAMESPACE_ID::uint64 value) { filter_type_ = value; }
    inline void tbld_global_mail::set_filter_type(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_filter_type(value);
        // @@protoc_insertion_point(field_set:db.tbld_global_mail.filter_type)
    }

    // uint64 filter_data = 9;
    inline void                            tbld_global_mail::clear_filter_data() { filter_data_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_global_mail::_internal_filter_data() const { return filter_data_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_global_mail::filter_data() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_global_mail.filter_data)
        return _internal_filter_data();
    }
    inline void tbld_global_mail::_internal_set_filter_data(::PROTOBUF_NAMESPACE_ID::uint64 value) { filter_data_ = value; }
    inline void tbld_global_mail::set_filter_data(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_filter_data(value);
        // @@protoc_insertion_point(field_set:db.tbld_global_mail.filter_data)
    }

    // bytes attach_data = 10;
    inline void tbld_global_mail::clear_attach_data()
    {
        attach_data_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline const std::string& tbld_global_mail::attach_data() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_global_mail.attach_data)
        return _internal_attach_data();
    }
    inline void tbld_global_mail::set_attach_data(const std::string& value)
    {
        _internal_set_attach_data(value);
        // @@protoc_insertion_point(field_set:db.tbld_global_mail.attach_data)
    }
    inline std::string* tbld_global_mail::mutable_attach_data()
    {
        // @@protoc_insertion_point(field_mutable:db.tbld_global_mail.attach_data)
        return _internal_mutable_attach_data();
    }
    inline const std::string& tbld_global_mail::_internal_attach_data() const { return attach_data_.GetNoArena(); }
    inline void               tbld_global_mail::_internal_set_attach_data(const std::string& value)
    {

        attach_data_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
    }
    inline void tbld_global_mail::set_attach_data(std::string&& value)
    {

        attach_data_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
        // @@protoc_insertion_point(field_set_rvalue:db.tbld_global_mail.attach_data)
    }
    inline void tbld_global_mail::set_attach_data(const char* value)
    {
        GOOGLE_DCHECK(value != nullptr);

        attach_data_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
        // @@protoc_insertion_point(field_set_char:db.tbld_global_mail.attach_data)
    }
    inline void tbld_global_mail::set_attach_data(const void* value, size_t size)
    {

        attach_data_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
                                ::std::string(reinterpret_cast<const char*>(value), size));
        // @@protoc_insertion_point(field_set_pointer:db.tbld_global_mail.attach_data)
    }
    inline std::string* tbld_global_mail::_internal_mutable_attach_data()
    {

        return attach_data_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline std::string* tbld_global_mail::release_attach_data()
    {
        // @@protoc_insertion_point(field_release:db.tbld_global_mail.attach_data)

        return attach_data_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline void tbld_global_mail::set_allocated_attach_data(std::string* attach_data)
    {
        if(attach_data != nullptr)
        {
        }
        else
        {
        }
        attach_data_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), attach_data);
        // @@protoc_insertion_point(field_set_allocated:db.tbld_global_mail.attach_data)
    }

    // -------------------------------------------------------------------

    // tbld_guild

    // uint64 id = 1 [(.sql) = {
    inline void                            tbld_guild::clear_id() { id_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_guild::_internal_id() const { return id_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_guild::id() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_guild.id)
        return _internal_id();
    }
    inline void tbld_guild::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) { id_ = value; }
    inline void tbld_guild::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_id(value);
        // @@protoc_insertion_point(field_set:db.tbld_guild.id)
    }

    // uint64 lev = 2;
    inline void                            tbld_guild::clear_lev() { lev_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_guild::_internal_lev() const { return lev_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_guild::lev() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_guild.lev)
        return _internal_lev();
    }
    inline void tbld_guild::_internal_set_lev(::PROTOBUF_NAMESPACE_ID::uint64 value) { lev_ = value; }
    inline void tbld_guild::set_lev(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_lev(value);
        // @@protoc_insertion_point(field_set:db.tbld_guild.lev)
    }

    // string name = 3 [(.sql) = {
    inline void tbld_guild::clear_name() { name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited()); }
    inline const std::string& tbld_guild::name() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_guild.name)
        return _internal_name();
    }
    inline void tbld_guild::set_name(const std::string& value)
    {
        _internal_set_name(value);
        // @@protoc_insertion_point(field_set:db.tbld_guild.name)
    }
    inline std::string* tbld_guild::mutable_name()
    {
        // @@protoc_insertion_point(field_mutable:db.tbld_guild.name)
        return _internal_mutable_name();
    }
    inline const std::string& tbld_guild::_internal_name() const { return name_.GetNoArena(); }
    inline void               tbld_guild::_internal_set_name(const std::string& value)
    {

        name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
    }
    inline void tbld_guild::set_name(std::string&& value)
    {

        name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
        // @@protoc_insertion_point(field_set_rvalue:db.tbld_guild.name)
    }
    inline void tbld_guild::set_name(const char* value)
    {
        GOOGLE_DCHECK(value != nullptr);

        name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
        // @@protoc_insertion_point(field_set_char:db.tbld_guild.name)
    }
    inline void tbld_guild::set_name(const char* value, size_t size)
    {

        name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
                         ::std::string(reinterpret_cast<const char*>(value), size));
        // @@protoc_insertion_point(field_set_pointer:db.tbld_guild.name)
    }
    inline std::string* tbld_guild::_internal_mutable_name()
    {

        return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline std::string* tbld_guild::release_name()
    {
        // @@protoc_insertion_point(field_release:db.tbld_guild.name)

        return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline void tbld_guild::set_allocated_name(std::string* name)
    {
        if(name != nullptr)
        {
        }
        else
        {
        }
        name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
        // @@protoc_insertion_point(field_set_allocated:db.tbld_guild.name)
    }

    // uint64 leader_id = 4;
    inline void                            tbld_guild::clear_leader_id() { leader_id_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_guild::_internal_leader_id() const { return leader_id_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_guild::leader_id() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_guild.leader_id)
        return _internal_leader_id();
    }
    inline void tbld_guild::_internal_set_leader_id(::PROTOBUF_NAMESPACE_ID::uint64 value) { leader_id_ = value; }
    inline void tbld_guild::set_leader_id(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_leader_id(value);
        // @@protoc_insertion_point(field_set:db.tbld_guild.leader_id)
    }

    // string leader_name = 5 [(.sql) = {
    inline void tbld_guild::clear_leader_name()
    {
        leader_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline const std::string& tbld_guild::leader_name() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_guild.leader_name)
        return _internal_leader_name();
    }
    inline void tbld_guild::set_leader_name(const std::string& value)
    {
        _internal_set_leader_name(value);
        // @@protoc_insertion_point(field_set:db.tbld_guild.leader_name)
    }
    inline std::string* tbld_guild::mutable_leader_name()
    {
        // @@protoc_insertion_point(field_mutable:db.tbld_guild.leader_name)
        return _internal_mutable_leader_name();
    }
    inline const std::string& tbld_guild::_internal_leader_name() const { return leader_name_.GetNoArena(); }
    inline void               tbld_guild::_internal_set_leader_name(const std::string& value)
    {

        leader_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
    }
    inline void tbld_guild::set_leader_name(std::string&& value)
    {

        leader_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
        // @@protoc_insertion_point(field_set_rvalue:db.tbld_guild.leader_name)
    }
    inline void tbld_guild::set_leader_name(const char* value)
    {
        GOOGLE_DCHECK(value != nullptr);

        leader_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
        // @@protoc_insertion_point(field_set_char:db.tbld_guild.leader_name)
    }
    inline void tbld_guild::set_leader_name(const char* value, size_t size)
    {

        leader_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
                                ::std::string(reinterpret_cast<const char*>(value), size));
        // @@protoc_insertion_point(field_set_pointer:db.tbld_guild.leader_name)
    }
    inline std::string* tbld_guild::_internal_mutable_leader_name()
    {

        return leader_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline std::string* tbld_guild::release_leader_name()
    {
        // @@protoc_insertion_point(field_release:db.tbld_guild.leader_name)

        return leader_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline void tbld_guild::set_allocated_leader_name(std::string* leader_name)
    {
        if(leader_name != nullptr)
        {
        }
        else
        {
        }
        leader_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), leader_name);
        // @@protoc_insertion_point(field_set_allocated:db.tbld_guild.leader_name)
    }

    // uint64 creator_id = 6 [(.sql) = {
    inline void                            tbld_guild::clear_creator_id() { creator_id_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_guild::_internal_creator_id() const { return creator_id_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_guild::creator_id() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_guild.creator_id)
        return _internal_creator_id();
    }
    inline void tbld_guild::_internal_set_creator_id(::PROTOBUF_NAMESPACE_ID::uint64 value) { creator_id_ = value; }
    inline void tbld_guild::set_creator_id(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_creator_id(value);
        // @@protoc_insertion_point(field_set:db.tbld_guild.creator_id)
    }

    // string creator_name = 7 [(.sql) = {
    inline void tbld_guild::clear_creator_name()
    {
        creator_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline const std::string& tbld_guild::creator_name() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_guild.creator_name)
        return _internal_creator_name();
    }
    inline void tbld_guild::set_creator_name(const std::string& value)
    {
        _internal_set_creator_name(value);
        // @@protoc_insertion_point(field_set:db.tbld_guild.creator_name)
    }
    inline std::string* tbld_guild::mutable_creator_name()
    {
        // @@protoc_insertion_point(field_mutable:db.tbld_guild.creator_name)
        return _internal_mutable_creator_name();
    }
    inline const std::string& tbld_guild::_internal_creator_name() const { return creator_name_.GetNoArena(); }
    inline void               tbld_guild::_internal_set_creator_name(const std::string& value)
    {

        creator_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
    }
    inline void tbld_guild::set_creator_name(std::string&& value)
    {

        creator_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
        // @@protoc_insertion_point(field_set_rvalue:db.tbld_guild.creator_name)
    }
    inline void tbld_guild::set_creator_name(const char* value)
    {
        GOOGLE_DCHECK(value != nullptr);

        creator_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
        // @@protoc_insertion_point(field_set_char:db.tbld_guild.creator_name)
    }
    inline void tbld_guild::set_creator_name(const char* value, size_t size)
    {

        creator_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
                                 ::std::string(reinterpret_cast<const char*>(value), size));
        // @@protoc_insertion_point(field_set_pointer:db.tbld_guild.creator_name)
    }
    inline std::string* tbld_guild::_internal_mutable_creator_name()
    {

        return creator_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline std::string* tbld_guild::release_creator_name()
    {
        // @@protoc_insertion_point(field_release:db.tbld_guild.creator_name)

        return creator_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline void tbld_guild::set_allocated_creator_name(std::string* creator_name)
    {
        if(creator_name != nullptr)
        {
        }
        else
        {
        }
        creator_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), creator_name);
        // @@protoc_insertion_point(field_set_allocated:db.tbld_guild.creator_name)
    }

    // uint32 create_time = 8;
    inline void                            tbld_guild::clear_create_time() { create_time_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_guild::_internal_create_time() const { return create_time_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_guild::create_time() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_guild.create_time)
        return _internal_create_time();
    }
    inline void tbld_guild::_internal_set_create_time(::PROTOBUF_NAMESPACE_ID::uint32 value) { create_time_ = value; }
    inline void tbld_guild::set_create_time(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_create_time(value);
        // @@protoc_insertion_point(field_set:db.tbld_guild.create_time)
    }

    // uint32 del_time = 9;
    inline void                            tbld_guild::clear_del_time() { del_time_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_guild::_internal_del_time() const { return del_time_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_guild::del_time() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_guild.del_time)
        return _internal_del_time();
    }
    inline void tbld_guild::_internal_set_del_time(::PROTOBUF_NAMESPACE_ID::uint32 value) { del_time_ = value; }
    inline void tbld_guild::set_del_time(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_del_time(value);
        // @@protoc_insertion_point(field_set:db.tbld_guild.del_time)
    }

    // string slogan = 10 [(.sql) = {
    inline void tbld_guild::clear_slogan() { slogan_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited()); }
    inline const std::string& tbld_guild::slogan() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_guild.slogan)
        return _internal_slogan();
    }
    inline void tbld_guild::set_slogan(const std::string& value)
    {
        _internal_set_slogan(value);
        // @@protoc_insertion_point(field_set:db.tbld_guild.slogan)
    }
    inline std::string* tbld_guild::mutable_slogan()
    {
        // @@protoc_insertion_point(field_mutable:db.tbld_guild.slogan)
        return _internal_mutable_slogan();
    }
    inline const std::string& tbld_guild::_internal_slogan() const { return slogan_.GetNoArena(); }
    inline void               tbld_guild::_internal_set_slogan(const std::string& value)
    {

        slogan_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
    }
    inline void tbld_guild::set_slogan(std::string&& value)
    {

        slogan_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
        // @@protoc_insertion_point(field_set_rvalue:db.tbld_guild.slogan)
    }
    inline void tbld_guild::set_slogan(const char* value)
    {
        GOOGLE_DCHECK(value != nullptr);

        slogan_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
        // @@protoc_insertion_point(field_set_char:db.tbld_guild.slogan)
    }
    inline void tbld_guild::set_slogan(const char* value, size_t size)
    {

        slogan_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
                           ::std::string(reinterpret_cast<const char*>(value), size));
        // @@protoc_insertion_point(field_set_pointer:db.tbld_guild.slogan)
    }
    inline std::string* tbld_guild::_internal_mutable_slogan()
    {

        return slogan_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline std::string* tbld_guild::release_slogan()
    {
        // @@protoc_insertion_point(field_release:db.tbld_guild.slogan)

        return slogan_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline void tbld_guild::set_allocated_slogan(std::string* slogan)
    {
        if(slogan != nullptr)
        {
        }
        else
        {
        }
        slogan_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), slogan);
        // @@protoc_insertion_point(field_set_allocated:db.tbld_guild.slogan)
    }

    // string info1 = 11 [(.sql) = {
    inline void tbld_guild::clear_info1() { info1_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited()); }
    inline const std::string& tbld_guild::info1() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_guild.info1)
        return _internal_info1();
    }
    inline void tbld_guild::set_info1(const std::string& value)
    {
        _internal_set_info1(value);
        // @@protoc_insertion_point(field_set:db.tbld_guild.info1)
    }
    inline std::string* tbld_guild::mutable_info1()
    {
        // @@protoc_insertion_point(field_mutable:db.tbld_guild.info1)
        return _internal_mutable_info1();
    }
    inline const std::string& tbld_guild::_internal_info1() const { return info1_.GetNoArena(); }
    inline void               tbld_guild::_internal_set_info1(const std::string& value)
    {

        info1_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
    }
    inline void tbld_guild::set_info1(std::string&& value)
    {

        info1_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
        // @@protoc_insertion_point(field_set_rvalue:db.tbld_guild.info1)
    }
    inline void tbld_guild::set_info1(const char* value)
    {
        GOOGLE_DCHECK(value != nullptr);

        info1_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
        // @@protoc_insertion_point(field_set_char:db.tbld_guild.info1)
    }
    inline void tbld_guild::set_info1(const char* value, size_t size)
    {

        info1_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
                          ::std::string(reinterpret_cast<const char*>(value), size));
        // @@protoc_insertion_point(field_set_pointer:db.tbld_guild.info1)
    }
    inline std::string* tbld_guild::_internal_mutable_info1()
    {

        return info1_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline std::string* tbld_guild::release_info1()
    {
        // @@protoc_insertion_point(field_release:db.tbld_guild.info1)

        return info1_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline void tbld_guild::set_allocated_info1(std::string* info1)
    {
        if(info1 != nullptr)
        {
        }
        else
        {
        }
        info1_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), info1);
        // @@protoc_insertion_point(field_set_allocated:db.tbld_guild.info1)
    }

    // string info2 = 12 [(.sql) = {
    inline void tbld_guild::clear_info2() { info2_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited()); }
    inline const std::string& tbld_guild::info2() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_guild.info2)
        return _internal_info2();
    }
    inline void tbld_guild::set_info2(const std::string& value)
    {
        _internal_set_info2(value);
        // @@protoc_insertion_point(field_set:db.tbld_guild.info2)
    }
    inline std::string* tbld_guild::mutable_info2()
    {
        // @@protoc_insertion_point(field_mutable:db.tbld_guild.info2)
        return _internal_mutable_info2();
    }
    inline const std::string& tbld_guild::_internal_info2() const { return info2_.GetNoArena(); }
    inline void               tbld_guild::_internal_set_info2(const std::string& value)
    {

        info2_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
    }
    inline void tbld_guild::set_info2(std::string&& value)
    {

        info2_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
        // @@protoc_insertion_point(field_set_rvalue:db.tbld_guild.info2)
    }
    inline void tbld_guild::set_info2(const char* value)
    {
        GOOGLE_DCHECK(value != nullptr);

        info2_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
        // @@protoc_insertion_point(field_set_char:db.tbld_guild.info2)
    }
    inline void tbld_guild::set_info2(const char* value, size_t size)
    {

        info2_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
                          ::std::string(reinterpret_cast<const char*>(value), size));
        // @@protoc_insertion_point(field_set_pointer:db.tbld_guild.info2)
    }
    inline std::string* tbld_guild::_internal_mutable_info2()
    {

        return info2_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline std::string* tbld_guild::release_info2()
    {
        // @@protoc_insertion_point(field_release:db.tbld_guild.info2)

        return info2_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline void tbld_guild::set_allocated_info2(std::string* info2)
    {
        if(info2 != nullptr)
        {
        }
        else
        {
        }
        info2_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), info2);
        // @@protoc_insertion_point(field_set_allocated:db.tbld_guild.info2)
    }

    // string info3 = 13 [(.sql) = {
    inline void tbld_guild::clear_info3() { info3_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited()); }
    inline const std::string& tbld_guild::info3() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_guild.info3)
        return _internal_info3();
    }
    inline void tbld_guild::set_info3(const std::string& value)
    {
        _internal_set_info3(value);
        // @@protoc_insertion_point(field_set:db.tbld_guild.info3)
    }
    inline std::string* tbld_guild::mutable_info3()
    {
        // @@protoc_insertion_point(field_mutable:db.tbld_guild.info3)
        return _internal_mutable_info3();
    }
    inline const std::string& tbld_guild::_internal_info3() const { return info3_.GetNoArena(); }
    inline void               tbld_guild::_internal_set_info3(const std::string& value)
    {

        info3_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
    }
    inline void tbld_guild::set_info3(std::string&& value)
    {

        info3_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
        // @@protoc_insertion_point(field_set_rvalue:db.tbld_guild.info3)
    }
    inline void tbld_guild::set_info3(const char* value)
    {
        GOOGLE_DCHECK(value != nullptr);

        info3_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
        // @@protoc_insertion_point(field_set_char:db.tbld_guild.info3)
    }
    inline void tbld_guild::set_info3(const char* value, size_t size)
    {

        info3_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
                          ::std::string(reinterpret_cast<const char*>(value), size));
        // @@protoc_insertion_point(field_set_pointer:db.tbld_guild.info3)
    }
    inline std::string* tbld_guild::_internal_mutable_info3()
    {

        return info3_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline std::string* tbld_guild::release_info3()
    {
        // @@protoc_insertion_point(field_release:db.tbld_guild.info3)

        return info3_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline void tbld_guild::set_allocated_info3(std::string* info3)
    {
        if(info3 != nullptr)
        {
        }
        else
        {
        }
        info3_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), info3);
        // @@protoc_insertion_point(field_set_allocated:db.tbld_guild.info3)
    }

    // uint64 flag = 14;
    inline void                            tbld_guild::clear_flag() { flag_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_guild::_internal_flag() const { return flag_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_guild::flag() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_guild.flag)
        return _internal_flag();
    }
    inline void tbld_guild::_internal_set_flag(::PROTOBUF_NAMESPACE_ID::uint64 value) { flag_ = value; }
    inline void tbld_guild::set_flag(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_flag(value);
        // @@protoc_insertion_point(field_set:db.tbld_guild.flag)
    }

    // -------------------------------------------------------------------

    // tbld_item

    // uint64 id = 1 [(.sql) = {
    inline void                            tbld_item::clear_id() { id_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_item::_internal_id() const { return id_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_item::id() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_item.id)
        return _internal_id();
    }
    inline void tbld_item::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) { id_ = value; }
    inline void tbld_item::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_id(value);
        // @@protoc_insertion_point(field_set:db.tbld_item.id)
    }

    // uint64 owner_id = 2 [(.sql) = {
    inline void                            tbld_item::clear_owner_id() { owner_id_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_item::_internal_owner_id() const { return owner_id_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_item::owner_id() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_item.owner_id)
        return _internal_owner_id();
    }
    inline void tbld_item::_internal_set_owner_id(::PROTOBUF_NAMESPACE_ID::uint64 value) { owner_id_ = value; }
    inline void tbld_item::set_owner_id(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_owner_id(value);
        // @@protoc_insertion_point(field_set:db.tbld_item.owner_id)
    }

    // uint32 itemtype = 3 [(.sql) = {
    inline void                            tbld_item::clear_itemtype() { itemtype_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_item::_internal_itemtype() const { return itemtype_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_item::itemtype() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_item.itemtype)
        return _internal_itemtype();
    }
    inline void tbld_item::_internal_set_itemtype(::PROTOBUF_NAMESPACE_ID::uint32 value) { itemtype_ = value; }
    inline void tbld_item::set_itemtype(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_itemtype(value);
        // @@protoc_insertion_point(field_set:db.tbld_item.itemtype)
    }

    // uint32 position = 4 [(.sql) = {
    inline void                            tbld_item::clear_position() { position_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_item::_internal_position() const { return position_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_item::position() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_item.position)
        return _internal_position();
    }
    inline void tbld_item::_internal_set_position(::PROTOBUF_NAMESPACE_ID::uint32 value) { position_ = value; }
    inline void tbld_item::set_position(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_position(value);
        // @@protoc_insertion_point(field_set:db.tbld_item.position)
    }

    // uint32 grid = 5;
    inline void                            tbld_item::clear_grid() { grid_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_item::_internal_grid() const { return grid_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_item::grid() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_item.grid)
        return _internal_grid();
    }
    inline void tbld_item::_internal_set_grid(::PROTOBUF_NAMESPACE_ID::uint32 value) { grid_ = value; }
    inline void tbld_item::set_grid(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_grid(value);
        // @@protoc_insertion_point(field_set:db.tbld_item.grid)
    }

    // uint32 flag = 6;
    inline void                            tbld_item::clear_flag() { flag_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_item::_internal_flag() const { return flag_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_item::flag() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_item.flag)
        return _internal_flag();
    }
    inline void tbld_item::_internal_set_flag(::PROTOBUF_NAMESPACE_ID::uint32 value) { flag_ = value; }
    inline void tbld_item::set_flag(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_flag(value);
        // @@protoc_insertion_point(field_set:db.tbld_item.flag)
    }

    // uint32 pilenum = 7;
    inline void                            tbld_item::clear_pilenum() { pilenum_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_item::_internal_pilenum() const { return pilenum_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_item::pilenum() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_item.pilenum)
        return _internal_pilenum();
    }
    inline void tbld_item::_internal_set_pilenum(::PROTOBUF_NAMESPACE_ID::uint32 value) { pilenum_ = value; }
    inline void tbld_item::set_pilenum(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_pilenum(value);
        // @@protoc_insertion_point(field_set:db.tbld_item.pilenum)
    }

    // uint32 expire_time = 8;
    inline void                            tbld_item::clear_expire_time() { expire_time_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_item::_internal_expire_time() const { return expire_time_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_item::expire_time() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_item.expire_time)
        return _internal_expire_time();
    }
    inline void tbld_item::_internal_set_expire_time(::PROTOBUF_NAMESPACE_ID::uint32 value) { expire_time_ = value; }
    inline void tbld_item::set_expire_time(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_expire_time(value);
        // @@protoc_insertion_point(field_set:db.tbld_item.expire_time)
    }

    // uint32 dura = 9;
    inline void                            tbld_item::clear_dura() { dura_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_item::_internal_dura() const { return dura_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_item::dura() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_item.dura)
        return _internal_dura();
    }
    inline void tbld_item::_internal_set_dura(::PROTOBUF_NAMESPACE_ID::uint32 value) { dura_ = value; }
    inline void tbld_item::set_dura(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_dura(value);
        // @@protoc_insertion_point(field_set:db.tbld_item.dura)
    }

    // uint32 dura_limit = 10;
    inline void                            tbld_item::clear_dura_limit() { dura_limit_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_item::_internal_dura_limit() const { return dura_limit_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_item::dura_limit() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_item.dura_limit)
        return _internal_dura_limit();
    }
    inline void tbld_item::_internal_set_dura_limit(::PROTOBUF_NAMESPACE_ID::uint32 value) { dura_limit_ = value; }
    inline void tbld_item::set_dura_limit(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_dura_limit(value);
        // @@protoc_insertion_point(field_set:db.tbld_item.dura_limit)
    }

    // uint32 addition_lev = 11;
    inline void                            tbld_item::clear_addition_lev() { addition_lev_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_item::_internal_addition_lev() const { return addition_lev_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_item::addition_lev() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_item.addition_lev)
        return _internal_addition_lev();
    }
    inline void tbld_item::_internal_set_addition_lev(::PROTOBUF_NAMESPACE_ID::uint32 value) { addition_lev_ = value; }
    inline void tbld_item::set_addition_lev(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_addition_lev(value);
        // @@protoc_insertion_point(field_set:db.tbld_item.addition_lev)
    }

    // bytes extra = 12;
    inline void tbld_item::clear_extra() { extra_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited()); }
    inline const std::string& tbld_item::extra() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_item.extra)
        return _internal_extra();
    }
    inline void tbld_item::set_extra(const std::string& value)
    {
        _internal_set_extra(value);
        // @@protoc_insertion_point(field_set:db.tbld_item.extra)
    }
    inline std::string* tbld_item::mutable_extra()
    {
        // @@protoc_insertion_point(field_mutable:db.tbld_item.extra)
        return _internal_mutable_extra();
    }
    inline const std::string& tbld_item::_internal_extra() const { return extra_.GetNoArena(); }
    inline void               tbld_item::_internal_set_extra(const std::string& value)
    {

        extra_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
    }
    inline void tbld_item::set_extra(std::string&& value)
    {

        extra_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
        // @@protoc_insertion_point(field_set_rvalue:db.tbld_item.extra)
    }
    inline void tbld_item::set_extra(const char* value)
    {
        GOOGLE_DCHECK(value != nullptr);

        extra_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
        // @@protoc_insertion_point(field_set_char:db.tbld_item.extra)
    }
    inline void tbld_item::set_extra(const void* value, size_t size)
    {

        extra_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
                          ::std::string(reinterpret_cast<const char*>(value), size));
        // @@protoc_insertion_point(field_set_pointer:db.tbld_item.extra)
    }
    inline std::string* tbld_item::_internal_mutable_extra()
    {

        return extra_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline std::string* tbld_item::release_extra()
    {
        // @@protoc_insertion_point(field_release:db.tbld_item.extra)

        return extra_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline void tbld_item::set_allocated_extra(std::string* extra)
    {
        if(extra != nullptr)
        {
        }
        else
        {
        }
        extra_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), extra);
        // @@protoc_insertion_point(field_set_allocated:db.tbld_item.extra)
    }

    // -------------------------------------------------------------------

    // tbld_mail

    // uint64 id = 1 [(.sql) = {
    inline void                            tbld_mail::clear_id() { id_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_mail::_internal_id() const { return id_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_mail::id() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_mail.id)
        return _internal_id();
    }
    inline void tbld_mail::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) { id_ = value; }
    inline void tbld_mail::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_id(value);
        // @@protoc_insertion_point(field_set:db.tbld_mail.id)
    }

    // uint64 ownerid = 2 [(.sql) = {
    inline void                            tbld_mail::clear_ownerid() { ownerid_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_mail::_internal_ownerid() const { return ownerid_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_mail::ownerid() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_mail.ownerid)
        return _internal_ownerid();
    }
    inline void tbld_mail::_internal_set_ownerid(::PROTOBUF_NAMESPACE_ID::uint64 value) { ownerid_ = value; }
    inline void tbld_mail::set_ownerid(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_ownerid(value);
        // @@protoc_insertion_point(field_set:db.tbld_mail.ownerid)
    }

    // uint64 senderid = 4 [(.sql) = {
    inline void                            tbld_mail::clear_senderid() { senderid_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_mail::_internal_senderid() const { return senderid_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_mail::senderid() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_mail.senderid)
        return _internal_senderid();
    }
    inline void tbld_mail::_internal_set_senderid(::PROTOBUF_NAMESPACE_ID::uint64 value) { senderid_ = value; }
    inline void tbld_mail::set_senderid(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_senderid(value);
        // @@protoc_insertion_point(field_set:db.tbld_mail.senderid)
    }

    // string sendername = 5 [(.sql) = {
    inline void tbld_mail::clear_sendername() { sendername_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited()); }
    inline const std::string& tbld_mail::sendername() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_mail.sendername)
        return _internal_sendername();
    }
    inline void tbld_mail::set_sendername(const std::string& value)
    {
        _internal_set_sendername(value);
        // @@protoc_insertion_point(field_set:db.tbld_mail.sendername)
    }
    inline std::string* tbld_mail::mutable_sendername()
    {
        // @@protoc_insertion_point(field_mutable:db.tbld_mail.sendername)
        return _internal_mutable_sendername();
    }
    inline const std::string& tbld_mail::_internal_sendername() const { return sendername_.GetNoArena(); }
    inline void               tbld_mail::_internal_set_sendername(const std::string& value)
    {

        sendername_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
    }
    inline void tbld_mail::set_sendername(std::string&& value)
    {

        sendername_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
        // @@protoc_insertion_point(field_set_rvalue:db.tbld_mail.sendername)
    }
    inline void tbld_mail::set_sendername(const char* value)
    {
        GOOGLE_DCHECK(value != nullptr);

        sendername_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
        // @@protoc_insertion_point(field_set_char:db.tbld_mail.sendername)
    }
    inline void tbld_mail::set_sendername(const char* value, size_t size)
    {

        sendername_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
                               ::std::string(reinterpret_cast<const char*>(value), size));
        // @@protoc_insertion_point(field_set_pointer:db.tbld_mail.sendername)
    }
    inline std::string* tbld_mail::_internal_mutable_sendername()
    {

        return sendername_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline std::string* tbld_mail::release_sendername()
    {
        // @@protoc_insertion_point(field_release:db.tbld_mail.sendername)

        return sendername_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline void tbld_mail::set_allocated_sendername(std::string* sendername)
    {
        if(sendername != nullptr)
        {
        }
        else
        {
        }
        sendername_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sendername);
        // @@protoc_insertion_point(field_set_allocated:db.tbld_mail.sendername)
    }

    // uint32 create_time = 6 [(.sql) = {
    inline void                            tbld_mail::clear_create_time() { create_time_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_mail::_internal_create_time() const { return create_time_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_mail::create_time() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_mail.create_time)
        return _internal_create_time();
    }
    inline void tbld_mail::_internal_set_create_time(::PROTOBUF_NAMESPACE_ID::uint32 value) { create_time_ = value; }
    inline void tbld_mail::set_create_time(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_create_time(value);
        // @@protoc_insertion_point(field_set:db.tbld_mail.create_time)
    }

    // uint64 flag = 7;
    inline void                            tbld_mail::clear_flag() { flag_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_mail::_internal_flag() const { return flag_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_mail::flag() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_mail.flag)
        return _internal_flag();
    }
    inline void tbld_mail::_internal_set_flag(::PROTOBUF_NAMESPACE_ID::uint64 value) { flag_ = value; }
    inline void tbld_mail::set_flag(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_flag(value);
        // @@protoc_insertion_point(field_set:db.tbld_mail.flag)
    }

    // string subject = 8 [(.sql) = {
    inline void tbld_mail::clear_subject() { subject_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited()); }
    inline const std::string& tbld_mail::subject() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_mail.subject)
        return _internal_subject();
    }
    inline void tbld_mail::set_subject(const std::string& value)
    {
        _internal_set_subject(value);
        // @@protoc_insertion_point(field_set:db.tbld_mail.subject)
    }
    inline std::string* tbld_mail::mutable_subject()
    {
        // @@protoc_insertion_point(field_mutable:db.tbld_mail.subject)
        return _internal_mutable_subject();
    }
    inline const std::string& tbld_mail::_internal_subject() const { return subject_.GetNoArena(); }
    inline void               tbld_mail::_internal_set_subject(const std::string& value)
    {

        subject_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
    }
    inline void tbld_mail::set_subject(std::string&& value)
    {

        subject_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
        // @@protoc_insertion_point(field_set_rvalue:db.tbld_mail.subject)
    }
    inline void tbld_mail::set_subject(const char* value)
    {
        GOOGLE_DCHECK(value != nullptr);

        subject_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
        // @@protoc_insertion_point(field_set_char:db.tbld_mail.subject)
    }
    inline void tbld_mail::set_subject(const char* value, size_t size)
    {

        subject_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
                            ::std::string(reinterpret_cast<const char*>(value), size));
        // @@protoc_insertion_point(field_set_pointer:db.tbld_mail.subject)
    }
    inline std::string* tbld_mail::_internal_mutable_subject()
    {

        return subject_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline std::string* tbld_mail::release_subject()
    {
        // @@protoc_insertion_point(field_release:db.tbld_mail.subject)

        return subject_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline void tbld_mail::set_allocated_subject(std::string* subject)
    {
        if(subject != nullptr)
        {
        }
        else
        {
        }
        subject_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), subject);
        // @@protoc_insertion_point(field_set_allocated:db.tbld_mail.subject)
    }

    // string content = 9 [(.sql) = {
    inline void tbld_mail::clear_content() { content_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited()); }
    inline const std::string& tbld_mail::content() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_mail.content)
        return _internal_content();
    }
    inline void tbld_mail::set_content(const std::string& value)
    {
        _internal_set_content(value);
        // @@protoc_insertion_point(field_set:db.tbld_mail.content)
    }
    inline std::string* tbld_mail::mutable_content()
    {
        // @@protoc_insertion_point(field_mutable:db.tbld_mail.content)
        return _internal_mutable_content();
    }
    inline const std::string& tbld_mail::_internal_content() const { return content_.GetNoArena(); }
    inline void               tbld_mail::_internal_set_content(const std::string& value)
    {

        content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
    }
    inline void tbld_mail::set_content(std::string&& value)
    {

        content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
        // @@protoc_insertion_point(field_set_rvalue:db.tbld_mail.content)
    }
    inline void tbld_mail::set_content(const char* value)
    {
        GOOGLE_DCHECK(value != nullptr);

        content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
        // @@protoc_insertion_point(field_set_char:db.tbld_mail.content)
    }
    inline void tbld_mail::set_content(const char* value, size_t size)
    {

        content_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
                            ::std::string(reinterpret_cast<const char*>(value), size));
        // @@protoc_insertion_point(field_set_pointer:db.tbld_mail.content)
    }
    inline std::string* tbld_mail::_internal_mutable_content()
    {

        return content_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline std::string* tbld_mail::release_content()
    {
        // @@protoc_insertion_point(field_release:db.tbld_mail.content)

        return content_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline void tbld_mail::set_allocated_content(std::string* content)
    {
        if(content != nullptr)
        {
        }
        else
        {
        }
        content_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), content);
        // @@protoc_insertion_point(field_set_allocated:db.tbld_mail.content)
    }

    // -------------------------------------------------------------------

    // tbld_mail_attachment

    // uint64 id = 1 [(.sql) = {
    inline void                            tbld_mail_attachment::clear_id() { id_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_mail_attachment::_internal_id() const { return id_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_mail_attachment::id() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_mail_attachment.id)
        return _internal_id();
    }
    inline void tbld_mail_attachment::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) { id_ = value; }
    inline void tbld_mail_attachment::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_id(value);
        // @@protoc_insertion_point(field_set:db.tbld_mail_attachment.id)
    }

    // uint64 mailid = 2 [(.sql) = {
    inline void                            tbld_mail_attachment::clear_mailid() { mailid_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_mail_attachment::_internal_mailid() const { return mailid_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_mail_attachment::mailid() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_mail_attachment.mailid)
        return _internal_mailid();
    }
    inline void tbld_mail_attachment::_internal_set_mailid(::PROTOBUF_NAMESPACE_ID::uint64 value) { mailid_ = value; }
    inline void tbld_mail_attachment::set_mailid(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_mailid(value);
        // @@protoc_insertion_point(field_set:db.tbld_mail_attachment.mailid)
    }

    // uint32 attach_type = 3;
    inline void                            tbld_mail_attachment::clear_attach_type() { attach_type_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_mail_attachment::_internal_attach_type() const { return attach_type_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_mail_attachment::attach_type() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_mail_attachment.attach_type)
        return _internal_attach_type();
    }
    inline void tbld_mail_attachment::_internal_set_attach_type(::PROTOBUF_NAMESPACE_ID::uint32 value) { attach_type_ = value; }
    inline void tbld_mail_attachment::set_attach_type(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_attach_type(value);
        // @@protoc_insertion_point(field_set:db.tbld_mail_attachment.attach_type)
    }

    // uint64 attach_data = 4;
    inline void                            tbld_mail_attachment::clear_attach_data() { attach_data_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_mail_attachment::_internal_attach_data() const { return attach_data_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_mail_attachment::attach_data() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_mail_attachment.attach_data)
        return _internal_attach_data();
    }
    inline void tbld_mail_attachment::_internal_set_attach_data(::PROTOBUF_NAMESPACE_ID::uint64 value) { attach_data_ = value; }
    inline void tbld_mail_attachment::set_attach_data(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_attach_data(value);
        // @@protoc_insertion_point(field_set:db.tbld_mail_attachment.attach_data)
    }

    // -------------------------------------------------------------------

    // tbld_pet

    // uint64 id = 1 [(.sql) = {
    inline void                            tbld_pet::clear_id() { id_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_pet::_internal_id() const { return id_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_pet::id() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_pet.id)
        return _internal_id();
    }
    inline void tbld_pet::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) { id_ = value; }
    inline void tbld_pet::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_id(value);
        // @@protoc_insertion_point(field_set:db.tbld_pet.id)
    }

    // uint64 ownerid = 2 [(.sql) = {
    inline void                            tbld_pet::clear_ownerid() { ownerid_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_pet::_internal_ownerid() const { return ownerid_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_pet::ownerid() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_pet.ownerid)
        return _internal_ownerid();
    }
    inline void tbld_pet::_internal_set_ownerid(::PROTOBUF_NAMESPACE_ID::uint64 value) { ownerid_ = value; }
    inline void tbld_pet::set_ownerid(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_ownerid(value);
        // @@protoc_insertion_point(field_set:db.tbld_pet.ownerid)
    }

    // uint32 pet_type = 3 [(.sql) = {
    inline void                            tbld_pet::clear_pet_type() { pet_type_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_pet::_internal_pet_type() const { return pet_type_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_pet::pet_type() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_pet.pet_type)
        return _internal_pet_type();
    }
    inline void tbld_pet::_internal_set_pet_type(::PROTOBUF_NAMESPACE_ID::uint32 value) { pet_type_ = value; }
    inline void tbld_pet::set_pet_type(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_pet_type(value);
        // @@protoc_insertion_point(field_set:db.tbld_pet.pet_type)
    }

    // uint32 hp = 4;
    inline void                            tbld_pet::clear_hp() { hp_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_pet::_internal_hp() const { return hp_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_pet::hp() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_pet.hp)
        return _internal_hp();
    }
    inline void tbld_pet::_internal_set_hp(::PROTOBUF_NAMESPACE_ID::uint32 value) { hp_ = value; }
    inline void tbld_pet::set_hp(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_hp(value);
        // @@protoc_insertion_point(field_set:db.tbld_pet.hp)
    }

    // uint64 exp = 5;
    inline void                            tbld_pet::clear_exp() { exp_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_pet::_internal_exp() const { return exp_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_pet::exp() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_pet.exp)
        return _internal_exp();
    }
    inline void tbld_pet::_internal_set_exp(::PROTOBUF_NAMESPACE_ID::uint64 value) { exp_ = value; }
    inline void tbld_pet::set_exp(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_exp(value);
        // @@protoc_insertion_point(field_set:db.tbld_pet.exp)
    }

    // -------------------------------------------------------------------

    // tbld_player

    // uint64 id = 1 [(.sql) = {
    inline void                            tbld_player::clear_id() { id_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_player::_internal_id() const { return id_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_player::id() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_player.id)
        return _internal_id();
    }
    inline void tbld_player::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) { id_ = value; }
    inline void tbld_player::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_id(value);
        // @@protoc_insertion_point(field_set:db.tbld_player.id)
    }

    // uint32 worldid = 2 [(.sql) = {
    inline void                            tbld_player::clear_worldid() { worldid_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_player::_internal_worldid() const { return worldid_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_player::worldid() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_player.worldid)
        return _internal_worldid();
    }
    inline void tbld_player::_internal_set_worldid(::PROTOBUF_NAMESPACE_ID::uint32 value) { worldid_ = value; }
    inline void tbld_player::set_worldid(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_worldid(value);
        // @@protoc_insertion_point(field_set:db.tbld_player.worldid)
    }

    // uint32 oriworldid = 3 [(.sql) = {
    inline void                            tbld_player::clear_oriworldid() { oriworldid_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_player::_internal_oriworldid() const { return oriworldid_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_player::oriworldid() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_player.oriworldid)
        return _internal_oriworldid();
    }
    inline void tbld_player::_internal_set_oriworldid(::PROTOBUF_NAMESPACE_ID::uint32 value) { oriworldid_ = value; }
    inline void tbld_player::set_oriworldid(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_oriworldid(value);
        // @@protoc_insertion_point(field_set:db.tbld_player.oriworldid)
    }

    // string openid = 4 [(.sql) = {
    inline void tbld_player::clear_openid() { openid_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited()); }
    inline const std::string& tbld_player::openid() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_player.openid)
        return _internal_openid();
    }
    inline void tbld_player::set_openid(const std::string& value)
    {
        _internal_set_openid(value);
        // @@protoc_insertion_point(field_set:db.tbld_player.openid)
    }
    inline std::string* tbld_player::mutable_openid()
    {
        // @@protoc_insertion_point(field_mutable:db.tbld_player.openid)
        return _internal_mutable_openid();
    }
    inline const std::string& tbld_player::_internal_openid() const { return openid_.GetNoArena(); }
    inline void               tbld_player::_internal_set_openid(const std::string& value)
    {

        openid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
    }
    inline void tbld_player::set_openid(std::string&& value)
    {

        openid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
        // @@protoc_insertion_point(field_set_rvalue:db.tbld_player.openid)
    }
    inline void tbld_player::set_openid(const char* value)
    {
        GOOGLE_DCHECK(value != nullptr);

        openid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
        // @@protoc_insertion_point(field_set_char:db.tbld_player.openid)
    }
    inline void tbld_player::set_openid(const char* value, size_t size)
    {

        openid_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
                           ::std::string(reinterpret_cast<const char*>(value), size));
        // @@protoc_insertion_point(field_set_pointer:db.tbld_player.openid)
    }
    inline std::string* tbld_player::_internal_mutable_openid()
    {

        return openid_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline std::string* tbld_player::release_openid()
    {
        // @@protoc_insertion_point(field_release:db.tbld_player.openid)

        return openid_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline void tbld_player::set_allocated_openid(std::string* openid)
    {
        if(openid != nullptr)
        {
        }
        else
        {
        }
        openid_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), openid);
        // @@protoc_insertion_point(field_set_allocated:db.tbld_player.openid)
    }

    // string name = 5 [(.sql) = {
    inline void tbld_player::clear_name() { name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited()); }
    inline const std::string& tbld_player::name() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_player.name)
        return _internal_name();
    }
    inline void tbld_player::set_name(const std::string& value)
    {
        _internal_set_name(value);
        // @@protoc_insertion_point(field_set:db.tbld_player.name)
    }
    inline std::string* tbld_player::mutable_name()
    {
        // @@protoc_insertion_point(field_mutable:db.tbld_player.name)
        return _internal_mutable_name();
    }
    inline const std::string& tbld_player::_internal_name() const { return name_.GetNoArena(); }
    inline void               tbld_player::_internal_set_name(const std::string& value)
    {

        name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
    }
    inline void tbld_player::set_name(std::string&& value)
    {

        name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
        // @@protoc_insertion_point(field_set_rvalue:db.tbld_player.name)
    }
    inline void tbld_player::set_name(const char* value)
    {
        GOOGLE_DCHECK(value != nullptr);

        name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
        // @@protoc_insertion_point(field_set_char:db.tbld_player.name)
    }
    inline void tbld_player::set_name(const char* value, size_t size)
    {

        name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
                         ::std::string(reinterpret_cast<const char*>(value), size));
        // @@protoc_insertion_point(field_set_pointer:db.tbld_player.name)
    }
    inline std::string* tbld_player::_internal_mutable_name()
    {

        return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline std::string* tbld_player::release_name()
    {
        // @@protoc_insertion_point(field_release:db.tbld_player.name)

        return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline void tbld_player::set_allocated_name(std::string* name)
    {
        if(name != nullptr)
        {
        }
        else
        {
        }
        name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
        // @@protoc_insertion_point(field_set_allocated:db.tbld_player.name)
    }

    // uint32 prof = 6 [(.sql) = {
    inline void                            tbld_player::clear_prof() { prof_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_player::_internal_prof() const { return prof_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_player::prof() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_player.prof)
        return _internal_prof();
    }
    inline void tbld_player::_internal_set_prof(::PROTOBUF_NAMESPACE_ID::uint32 value) { prof_ = value; }
    inline void tbld_player::set_prof(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_prof(value);
        // @@protoc_insertion_point(field_set:db.tbld_player.prof)
    }

    // uint32 baselook = 7;
    inline void                            tbld_player::clear_baselook() { baselook_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_player::_internal_baselook() const { return baselook_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_player::baselook() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_player.baselook)
        return _internal_baselook();
    }
    inline void tbld_player::_internal_set_baselook(::PROTOBUF_NAMESPACE_ID::uint32 value) { baselook_ = value; }
    inline void tbld_player::set_baselook(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_baselook(value);
        // @@protoc_insertion_point(field_set:db.tbld_player.baselook)
    }

    // uint32 create_time = 8 [(.sql) = {
    inline void                            tbld_player::clear_create_time() { create_time_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_player::_internal_create_time() const { return create_time_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_player::create_time() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_player.create_time)
        return _internal_create_time();
    }
    inline void tbld_player::_internal_set_create_time(::PROTOBUF_NAMESPACE_ID::uint32 value) { create_time_ = value; }
    inline void tbld_player::set_create_time(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_create_time(value);
        // @@protoc_insertion_point(field_set:db.tbld_player.create_time)
    }

    // uint32 last_logintime = 9 [(.sql) = {
    inline void                            tbld_player::clear_last_logintime() { last_logintime_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_player::_internal_last_logintime() const { return last_logintime_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_player::last_logintime() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_player.last_logintime)
        return _internal_last_logintime();
    }
    inline void tbld_player::_internal_set_last_logintime(::PROTOBUF_NAMESPACE_ID::uint32 value) { last_logintime_ = value; }
    inline void tbld_player::set_last_logintime(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_last_logintime(value);
        // @@protoc_insertion_point(field_set:db.tbld_player.last_logintime)
    }

    // uint32 last_logouttime = 10 [(.sql) = {
    inline void                            tbld_player::clear_last_logouttime() { last_logouttime_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_player::_internal_last_logouttime() const { return last_logouttime_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_player::last_logouttime() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_player.last_logouttime)
        return _internal_last_logouttime();
    }
    inline void tbld_player::_internal_set_last_logouttime(::PROTOBUF_NAMESPACE_ID::uint32 value) { last_logouttime_ = value; }
    inline void tbld_player::set_last_logouttime(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_last_logouttime(value);
        // @@protoc_insertion_point(field_set:db.tbld_player.last_logouttime)
    }

    // uint32 del_time = 11 [(.sql) = {
    inline void                            tbld_player::clear_del_time() { del_time_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_player::_internal_del_time() const { return del_time_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_player::del_time() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_player.del_time)
        return _internal_del_time();
    }
    inline void tbld_player::_internal_set_del_time(::PROTOBUF_NAMESPACE_ID::uint32 value) { del_time_ = value; }
    inline void tbld_player::set_del_time(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_del_time(value);
        // @@protoc_insertion_point(field_set:db.tbld_player.del_time)
    }

    // uint32 lev = 12 [(.sql) = {
    inline void                            tbld_player::clear_lev() { lev_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_player::_internal_lev() const { return lev_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_player::lev() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_player.lev)
        return _internal_lev();
    }
    inline void tbld_player::_internal_set_lev(::PROTOBUF_NAMESPACE_ID::uint32 value) { lev_ = value; }
    inline void tbld_player::set_lev(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_lev(value);
        // @@protoc_insertion_point(field_set:db.tbld_player.lev)
    }

    // uint32 viplev = 13;
    inline void                            tbld_player::clear_viplev() { viplev_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_player::_internal_viplev() const { return viplev_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_player::viplev() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_player.viplev)
        return _internal_viplev();
    }
    inline void tbld_player::_internal_set_viplev(::PROTOBUF_NAMESPACE_ID::uint32 value) { viplev_ = value; }
    inline void tbld_player::set_viplev(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_viplev(value);
        // @@protoc_insertion_point(field_set:db.tbld_player.viplev)
    }

    // uint64 record_sceneid = 14;
    inline void                            tbld_player::clear_record_sceneid() { record_sceneid_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_player::_internal_record_sceneid() const { return record_sceneid_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_player::record_sceneid() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_player.record_sceneid)
        return _internal_record_sceneid();
    }
    inline void tbld_player::_internal_set_record_sceneid(::PROTOBUF_NAMESPACE_ID::uint64 value) { record_sceneid_ = value; }
    inline void tbld_player::set_record_sceneid(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_record_sceneid(value);
        // @@protoc_insertion_point(field_set:db.tbld_player.record_sceneid)
    }

    // float record_x = 15;
    inline void  tbld_player::clear_record_x() { record_x_ = 0; }
    inline float tbld_player::_internal_record_x() const { return record_x_; }
    inline float tbld_player::record_x() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_player.record_x)
        return _internal_record_x();
    }
    inline void tbld_player::_internal_set_record_x(float value) { record_x_ = value; }
    inline void tbld_player::set_record_x(float value)
    {
        _internal_set_record_x(value);
        // @@protoc_insertion_point(field_set:db.tbld_player.record_x)
    }

    // float record_y = 16;
    inline void  tbld_player::clear_record_y() { record_y_ = 0; }
    inline float tbld_player::_internal_record_y() const { return record_y_; }
    inline float tbld_player::record_y() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_player.record_y)
        return _internal_record_y();
    }
    inline void tbld_player::_internal_set_record_y(float value) { record_y_ = value; }
    inline void tbld_player::set_record_y(float value)
    {
        _internal_set_record_y(value);
        // @@protoc_insertion_point(field_set:db.tbld_player.record_y)
    }

    // float record_face = 17;
    inline void  tbld_player::clear_record_face() { record_face_ = 0; }
    inline float tbld_player::_internal_record_face() const { return record_face_; }
    inline float tbld_player::record_face() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_player.record_face)
        return _internal_record_face();
    }
    inline void tbld_player::_internal_set_record_face(float value) { record_face_ = value; }
    inline void tbld_player::set_record_face(float value)
    {
        _internal_set_record_face(value);
        // @@protoc_insertion_point(field_set:db.tbld_player.record_face)
    }

    // uint64 home_sceneid = 18;
    inline void                            tbld_player::clear_home_sceneid() { home_sceneid_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_player::_internal_home_sceneid() const { return home_sceneid_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_player::home_sceneid() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_player.home_sceneid)
        return _internal_home_sceneid();
    }
    inline void tbld_player::_internal_set_home_sceneid(::PROTOBUF_NAMESPACE_ID::uint64 value) { home_sceneid_ = value; }
    inline void tbld_player::set_home_sceneid(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_home_sceneid(value);
        // @@protoc_insertion_point(field_set:db.tbld_player.home_sceneid)
    }

    // float home_x = 19;
    inline void  tbld_player::clear_home_x() { home_x_ = 0; }
    inline float tbld_player::_internal_home_x() const { return home_x_; }
    inline float tbld_player::home_x() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_player.home_x)
        return _internal_home_x();
    }
    inline void tbld_player::_internal_set_home_x(float value) { home_x_ = value; }
    inline void tbld_player::set_home_x(float value)
    {
        _internal_set_home_x(value);
        // @@protoc_insertion_point(field_set:db.tbld_player.home_x)
    }

    // float home_y = 20;
    inline void  tbld_player::clear_home_y() { home_y_ = 0; }
    inline float tbld_player::_internal_home_y() const { return home_y_; }
    inline float tbld_player::home_y() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_player.home_y)
        return _internal_home_y();
    }
    inline void tbld_player::_internal_set_home_y(float value) { home_y_ = value; }
    inline void tbld_player::set_home_y(float value)
    {
        _internal_set_home_y(value);
        // @@protoc_insertion_point(field_set:db.tbld_player.home_y)
    }

    // float home_face = 21;
    inline void  tbld_player::clear_home_face() { home_face_ = 0; }
    inline float tbld_player::_internal_home_face() const { return home_face_; }
    inline float tbld_player::home_face() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_player.home_face)
        return _internal_home_face();
    }
    inline void tbld_player::_internal_set_home_face(float value) { home_face_ = value; }
    inline void tbld_player::set_home_face(float value)
    {
        _internal_set_home_face(value);
        // @@protoc_insertion_point(field_set:db.tbld_player.home_face)
    }

    // uint64 mate_id = 22;
    inline void                            tbld_player::clear_mate_id() { mate_id_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_player::_internal_mate_id() const { return mate_id_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_player::mate_id() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_player.mate_id)
        return _internal_mate_id();
    }
    inline void tbld_player::_internal_set_mate_id(::PROTOBUF_NAMESPACE_ID::uint64 value) { mate_id_ = value; }
    inline void tbld_player::set_mate_id(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_mate_id(value);
        // @@protoc_insertion_point(field_set:db.tbld_player.mate_id)
    }

    // string mate_name = 23 [(.sql) = {
    inline void tbld_player::clear_mate_name() { mate_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited()); }
    inline const std::string& tbld_player::mate_name() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_player.mate_name)
        return _internal_mate_name();
    }
    inline void tbld_player::set_mate_name(const std::string& value)
    {
        _internal_set_mate_name(value);
        // @@protoc_insertion_point(field_set:db.tbld_player.mate_name)
    }
    inline std::string* tbld_player::mutable_mate_name()
    {
        // @@protoc_insertion_point(field_mutable:db.tbld_player.mate_name)
        return _internal_mutable_mate_name();
    }
    inline const std::string& tbld_player::_internal_mate_name() const { return mate_name_.GetNoArena(); }
    inline void               tbld_player::_internal_set_mate_name(const std::string& value)
    {

        mate_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
    }
    inline void tbld_player::set_mate_name(std::string&& value)
    {

        mate_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
        // @@protoc_insertion_point(field_set_rvalue:db.tbld_player.mate_name)
    }
    inline void tbld_player::set_mate_name(const char* value)
    {
        GOOGLE_DCHECK(value != nullptr);

        mate_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
        // @@protoc_insertion_point(field_set_char:db.tbld_player.mate_name)
    }
    inline void tbld_player::set_mate_name(const char* value, size_t size)
    {

        mate_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
                              ::std::string(reinterpret_cast<const char*>(value), size));
        // @@protoc_insertion_point(field_set_pointer:db.tbld_player.mate_name)
    }
    inline std::string* tbld_player::_internal_mutable_mate_name()
    {

        return mate_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline std::string* tbld_player::release_mate_name()
    {
        // @@protoc_insertion_point(field_release:db.tbld_player.mate_name)

        return mate_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline void tbld_player::set_allocated_mate_name(std::string* mate_name)
    {
        if(mate_name != nullptr)
        {
        }
        else
        {
        }
        mate_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), mate_name);
        // @@protoc_insertion_point(field_set_allocated:db.tbld_player.mate_name)
    }

    // uint64 teamid = 24;
    inline void                            tbld_player::clear_teamid() { teamid_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_player::_internal_teamid() const { return teamid_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_player::teamid() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_player.teamid)
        return _internal_teamid();
    }
    inline void tbld_player::_internal_set_teamid(::PROTOBUF_NAMESPACE_ID::uint64 value) { teamid_ = value; }
    inline void tbld_player::set_teamid(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_teamid(value);
        // @@protoc_insertion_point(field_set:db.tbld_player.teamid)
    }

    // uint64 guildid = 25;
    inline void                            tbld_player::clear_guildid() { guildid_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_player::_internal_guildid() const { return guildid_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_player::guildid() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_player.guildid)
        return _internal_guildid();
    }
    inline void tbld_player::_internal_set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value) { guildid_ = value; }
    inline void tbld_player::set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_guildid(value);
        // @@protoc_insertion_point(field_set:db.tbld_player.guildid)
    }

    // uint64 exp = 26;
    inline void                            tbld_player::clear_exp() { exp_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_player::_internal_exp() const { return exp_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_player::exp() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_player.exp)
        return _internal_exp();
    }
    inline void tbld_player::_internal_set_exp(::PROTOBUF_NAMESPACE_ID::uint64 value) { exp_ = value; }
    inline void tbld_player::set_exp(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_exp(value);
        // @@protoc_insertion_point(field_set:db.tbld_player.exp)
    }

    // uint64 money = 27;
    inline void                            tbld_player::clear_money() { money_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_player::_internal_money() const { return money_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_player::money() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_player.money)
        return _internal_money();
    }
    inline void tbld_player::_internal_set_money(::PROTOBUF_NAMESPACE_ID::uint64 value) { money_ = value; }
    inline void tbld_player::set_money(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_money(value);
        // @@protoc_insertion_point(field_set:db.tbld_player.money)
    }

    // uint64 money_bind = 28;
    inline void                            tbld_player::clear_money_bind() { money_bind_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_player::_internal_money_bind() const { return money_bind_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_player::money_bind() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_player.money_bind)
        return _internal_money_bind();
    }
    inline void tbld_player::_internal_set_money_bind(::PROTOBUF_NAMESPACE_ID::uint64 value) { money_bind_ = value; }
    inline void tbld_player::set_money_bind(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_money_bind(value);
        // @@protoc_insertion_point(field_set:db.tbld_player.money_bind)
    }

    // uint64 gold = 29;
    inline void                            tbld_player::clear_gold() { gold_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_player::_internal_gold() const { return gold_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_player::gold() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_player.gold)
        return _internal_gold();
    }
    inline void tbld_player::_internal_set_gold(::PROTOBUF_NAMESPACE_ID::uint64 value) { gold_ = value; }
    inline void tbld_player::set_gold(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_gold(value);
        // @@protoc_insertion_point(field_set:db.tbld_player.gold)
    }

    // uint64 gold_bind = 30;
    inline void                            tbld_player::clear_gold_bind() { gold_bind_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_player::_internal_gold_bind() const { return gold_bind_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_player::gold_bind() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_player.gold_bind)
        return _internal_gold_bind();
    }
    inline void tbld_player::_internal_set_gold_bind(::PROTOBUF_NAMESPACE_ID::uint64 value) { gold_bind_ = value; }
    inline void tbld_player::set_gold_bind(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_gold_bind(value);
        // @@protoc_insertion_point(field_set:db.tbld_player.gold_bind)
    }

    // uint32 hp = 31;
    inline void                            tbld_player::clear_hp() { hp_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_player::_internal_hp() const { return hp_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_player::hp() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_player.hp)
        return _internal_hp();
    }
    inline void tbld_player::_internal_set_hp(::PROTOBUF_NAMESPACE_ID::uint32 value) { hp_ = value; }
    inline void tbld_player::set_hp(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_hp(value);
        // @@protoc_insertion_point(field_set:db.tbld_player.hp)
    }

    // uint32 mp = 32;
    inline void                            tbld_player::clear_mp() { mp_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_player::_internal_mp() const { return mp_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_player::mp() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_player.mp)
        return _internal_mp();
    }
    inline void tbld_player::_internal_set_mp(::PROTOBUF_NAMESPACE_ID::uint32 value) { mp_ = value; }
    inline void tbld_player::set_mp(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_mp(value);
        // @@protoc_insertion_point(field_set:db.tbld_player.mp)
    }

    // uint32 fp = 33;
    inline void                            tbld_player::clear_fp() { fp_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_player::_internal_fp() const { return fp_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_player::fp() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_player.fp)
        return _internal_fp();
    }
    inline void tbld_player::_internal_set_fp(::PROTOBUF_NAMESPACE_ID::uint32 value) { fp_ = value; }
    inline void tbld_player::set_fp(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_fp(value);
        // @@protoc_insertion_point(field_set:db.tbld_player.fp)
    }

    // uint32 np = 34;
    inline void                            tbld_player::clear_np() { np_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_player::_internal_np() const { return np_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_player::np() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_player.np)
        return _internal_np();
    }
    inline void tbld_player::_internal_set_np(::PROTOBUF_NAMESPACE_ID::uint32 value) { np_ = value; }
    inline void tbld_player::set_np(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_np(value);
        // @@protoc_insertion_point(field_set:db.tbld_player.np)
    }

    // uint32 pkval = 35;
    inline void                            tbld_player::clear_pkval() { pkval_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_player::_internal_pkval() const { return pkval_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_player::pkval() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_player.pkval)
        return _internal_pkval();
    }
    inline void tbld_player::_internal_set_pkval(::PROTOBUF_NAMESPACE_ID::uint32 value) { pkval_ = value; }
    inline void tbld_player::set_pkval(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_pkval(value);
        // @@protoc_insertion_point(field_set:db.tbld_player.pkval)
    }

    // uint32 honor = 36;
    inline void                            tbld_player::clear_honor() { honor_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_player::_internal_honor() const { return honor_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_player::honor() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_player.honor)
        return _internal_honor();
    }
    inline void tbld_player::_internal_set_honor(::PROTOBUF_NAMESPACE_ID::uint32 value) { honor_ = value; }
    inline void tbld_player::set_honor(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_honor(value);
        // @@protoc_insertion_point(field_set:db.tbld_player.honor)
    }

    // uint32 achipoint = 37;
    inline void                            tbld_player::clear_achipoint() { achipoint_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_player::_internal_achipoint() const { return achipoint_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_player::achipoint() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_player.achipoint)
        return _internal_achipoint();
    }
    inline void tbld_player::_internal_set_achipoint(::PROTOBUF_NAMESPACE_ID::uint32 value) { achipoint_ = value; }
    inline void tbld_player::set_achipoint(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_achipoint(value);
        // @@protoc_insertion_point(field_set:db.tbld_player.achipoint)
    }

    // uint32 bag_size = 38;
    inline void                            tbld_player::clear_bag_size() { bag_size_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_player::_internal_bag_size() const { return bag_size_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_player::bag_size() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_player.bag_size)
        return _internal_bag_size();
    }
    inline void tbld_player::_internal_set_bag_size(::PROTOBUF_NAMESPACE_ID::uint32 value) { bag_size_ = value; }
    inline void tbld_player::set_bag_size(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_bag_size(value);
        // @@protoc_insertion_point(field_set:db.tbld_player.bag_size)
    }

    // uint32 stroge_size = 39;
    inline void                            tbld_player::clear_stroge_size() { stroge_size_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_player::_internal_stroge_size() const { return stroge_size_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_player::stroge_size() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_player.stroge_size)
        return _internal_stroge_size();
    }
    inline void tbld_player::_internal_set_stroge_size(::PROTOBUF_NAMESPACE_ID::uint32 value) { stroge_size_ = value; }
    inline void tbld_player::set_stroge_size(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_stroge_size(value);
        // @@protoc_insertion_point(field_set:db.tbld_player.stroge_size)
    }

    // -------------------------------------------------------------------

    // tbld_player_guildinfo

    // uint64 id = 1 [(.sql) = {
    inline void                            tbld_player_guildinfo::clear_id() { id_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_player_guildinfo::_internal_id() const { return id_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_player_guildinfo::id() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_player_guildinfo.id)
        return _internal_id();
    }
    inline void tbld_player_guildinfo::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) { id_ = value; }
    inline void tbld_player_guildinfo::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_id(value);
        // @@protoc_insertion_point(field_set:db.tbld_player_guildinfo.id)
    }

    // uint64 guildid = 2;
    inline void                            tbld_player_guildinfo::clear_guildid() { guildid_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_player_guildinfo::_internal_guildid() const { return guildid_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_player_guildinfo::guildid() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_player_guildinfo.guildid)
        return _internal_guildid();
    }
    inline void tbld_player_guildinfo::_internal_set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value) { guildid_ = value; }
    inline void tbld_player_guildinfo::set_guildid(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_guildid(value);
        // @@protoc_insertion_point(field_set:db.tbld_player_guildinfo.guildid)
    }

    // uint32 rank = 3;
    inline void                            tbld_player_guildinfo::clear_rank() { rank_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_player_guildinfo::_internal_rank() const { return rank_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_player_guildinfo::rank() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_player_guildinfo.rank)
        return _internal_rank();
    }
    inline void tbld_player_guildinfo::_internal_set_rank(::PROTOBUF_NAMESPACE_ID::uint32 value) { rank_ = value; }
    inline void tbld_player_guildinfo::set_rank(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_rank(value);
        // @@protoc_insertion_point(field_set:db.tbld_player_guildinfo.rank)
    }

    // uint32 score = 4;
    inline void                            tbld_player_guildinfo::clear_score() { score_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_player_guildinfo::_internal_score() const { return score_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_player_guildinfo::score() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_player_guildinfo.score)
        return _internal_score();
    }
    inline void tbld_player_guildinfo::_internal_set_score(::PROTOBUF_NAMESPACE_ID::uint32 value) { score_ = value; }
    inline void tbld_player_guildinfo::set_score(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_score(value);
        // @@protoc_insertion_point(field_set:db.tbld_player_guildinfo.score)
    }

    // uint32 total_score = 5;
    inline void                            tbld_player_guildinfo::clear_total_score() { total_score_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_player_guildinfo::_internal_total_score() const { return total_score_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_player_guildinfo::total_score() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_player_guildinfo.total_score)
        return _internal_total_score();
    }
    inline void tbld_player_guildinfo::_internal_set_total_score(::PROTOBUF_NAMESPACE_ID::uint32 value) { total_score_ = value; }
    inline void tbld_player_guildinfo::set_total_score(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_total_score(value);
        // @@protoc_insertion_point(field_set:db.tbld_player_guildinfo.total_score)
    }

    // uint32 join_time = 6;
    inline void                            tbld_player_guildinfo::clear_join_time() { join_time_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_player_guildinfo::_internal_join_time() const { return join_time_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_player_guildinfo::join_time() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_player_guildinfo.join_time)
        return _internal_join_time();
    }
    inline void tbld_player_guildinfo::_internal_set_join_time(::PROTOBUF_NAMESPACE_ID::uint32 value) { join_time_ = value; }
    inline void tbld_player_guildinfo::set_join_time(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_join_time(value);
        // @@protoc_insertion_point(field_set:db.tbld_player_guildinfo.join_time)
    }

    // -------------------------------------------------------------------

    // tbld_skill

    // uint64 id = 1 [(.sql) = {
    inline void                            tbld_skill::clear_id() { id_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_skill::_internal_id() const { return id_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_skill::id() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_skill.id)
        return _internal_id();
    }
    inline void tbld_skill::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) { id_ = value; }
    inline void tbld_skill::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_id(value);
        // @@protoc_insertion_point(field_set:db.tbld_skill.id)
    }

    // uint64 userid = 2 [(.sql) = {
    inline void                            tbld_skill::clear_userid() { userid_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_skill::_internal_userid() const { return userid_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_skill::userid() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_skill.userid)
        return _internal_userid();
    }
    inline void tbld_skill::_internal_set_userid(::PROTOBUF_NAMESPACE_ID::uint64 value) { userid_ = value; }
    inline void tbld_skill::set_userid(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_userid(value);
        // @@protoc_insertion_point(field_set:db.tbld_skill.userid)
    }

    // uint32 skilltype = 3;
    inline void                            tbld_skill::clear_skilltype() { skilltype_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_skill::_internal_skilltype() const { return skilltype_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_skill::skilltype() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_skill.skilltype)
        return _internal_skilltype();
    }
    inline void tbld_skill::_internal_set_skilltype(::PROTOBUF_NAMESPACE_ID::uint32 value) { skilltype_ = value; }
    inline void tbld_skill::set_skilltype(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_skilltype(value);
        // @@protoc_insertion_point(field_set:db.tbld_skill.skilltype)
    }

    // uint32 lev = 4;
    inline void                            tbld_skill::clear_lev() { lev_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_skill::_internal_lev() const { return lev_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_skill::lev() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_skill.lev)
        return _internal_lev();
    }
    inline void tbld_skill::_internal_set_lev(::PROTOBUF_NAMESPACE_ID::uint32 value) { lev_ = value; }
    inline void tbld_skill::set_lev(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_lev(value);
        // @@protoc_insertion_point(field_set:db.tbld_skill.lev)
    }

    // -------------------------------------------------------------------

    // tbld_task

    // uint64 id = 1 [(.sql) = {
    inline void                            tbld_task::clear_id() { id_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_task::_internal_id() const { return id_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_task::id() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_task.id)
        return _internal_id();
    }
    inline void tbld_task::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) { id_ = value; }
    inline void tbld_task::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_id(value);
        // @@protoc_insertion_point(field_set:db.tbld_task.id)
    }

    // uint64 userid = 2 [(.sql) = {
    inline void                            tbld_task::clear_userid() { userid_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_task::_internal_userid() const { return userid_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_task::userid() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_task.userid)
        return _internal_userid();
    }
    inline void tbld_task::_internal_set_userid(::PROTOBUF_NAMESPACE_ID::uint64 value) { userid_ = value; }
    inline void tbld_task::set_userid(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_userid(value);
        // @@protoc_insertion_point(field_set:db.tbld_task.userid)
    }

    // uint32 taskid = 3 [(.sql) = {
    inline void                            tbld_task::clear_taskid() { taskid_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_task::_internal_taskid() const { return taskid_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_task::taskid() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_task.taskid)
        return _internal_taskid();
    }
    inline void tbld_task::_internal_set_taskid(::PROTOBUF_NAMESPACE_ID::uint32 value) { taskid_ = value; }
    inline void tbld_task::set_taskid(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_taskid(value);
        // @@protoc_insertion_point(field_set:db.tbld_task.taskid)
    }

    // uint32 num0 = 4;
    inline void                            tbld_task::clear_num0() { num0_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_task::_internal_num0() const { return num0_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_task::num0() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_task.num0)
        return _internal_num0();
    }
    inline void tbld_task::_internal_set_num0(::PROTOBUF_NAMESPACE_ID::uint32 value) { num0_ = value; }
    inline void tbld_task::set_num0(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_num0(value);
        // @@protoc_insertion_point(field_set:db.tbld_task.num0)
    }

    // uint32 num1 = 5;
    inline void                            tbld_task::clear_num1() { num1_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_task::_internal_num1() const { return num1_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_task::num1() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_task.num1)
        return _internal_num1();
    }
    inline void tbld_task::_internal_set_num1(::PROTOBUF_NAMESPACE_ID::uint32 value) { num1_ = value; }
    inline void tbld_task::set_num1(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_num1(value);
        // @@protoc_insertion_point(field_set:db.tbld_task.num1)
    }

    // uint32 num2 = 6;
    inline void                            tbld_task::clear_num2() { num2_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_task::_internal_num2() const { return num2_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_task::num2() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_task.num2)
        return _internal_num2();
    }
    inline void tbld_task::_internal_set_num2(::PROTOBUF_NAMESPACE_ID::uint32 value) { num2_ = value; }
    inline void tbld_task::set_num2(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_num2(value);
        // @@protoc_insertion_point(field_set:db.tbld_task.num2)
    }

    // uint32 num3 = 7;
    inline void                            tbld_task::clear_num3() { num3_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_task::_internal_num3() const { return num3_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_task::num3() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_task.num3)
        return _internal_num3();
    }
    inline void tbld_task::_internal_set_num3(::PROTOBUF_NAMESPACE_ID::uint32 value) { num3_ = value; }
    inline void tbld_task::set_num3(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_num3(value);
        // @@protoc_insertion_point(field_set:db.tbld_task.num3)
    }

    // uint32 accept_userlev = 8;
    inline void                            tbld_task::clear_accept_userlev() { accept_userlev_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_task::_internal_accept_userlev() const { return accept_userlev_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_task::accept_userlev() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_task.accept_userlev)
        return _internal_accept_userlev();
    }
    inline void tbld_task::_internal_set_accept_userlev(::PROTOBUF_NAMESPACE_ID::uint32 value) { accept_userlev_ = value; }
    inline void tbld_task::set_accept_userlev(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_accept_userlev(value);
        // @@protoc_insertion_point(field_set:db.tbld_task.accept_userlev)
    }

    // uint32 accept_time = 9;
    inline void                            tbld_task::clear_accept_time() { accept_time_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_task::_internal_accept_time() const { return accept_time_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_task::accept_time() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_task.accept_time)
        return _internal_accept_time();
    }
    inline void tbld_task::_internal_set_accept_time(::PROTOBUF_NAMESPACE_ID::uint32 value) { accept_time_ = value; }
    inline void tbld_task::set_accept_time(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_accept_time(value);
        // @@protoc_insertion_point(field_set:db.tbld_task.accept_time)
    }

    // uint32 finish_time = 10;
    inline void                            tbld_task::clear_finish_time() { finish_time_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_task::_internal_finish_time() const { return finish_time_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_task::finish_time() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_task.finish_time)
        return _internal_finish_time();
    }
    inline void tbld_task::_internal_set_finish_time(::PROTOBUF_NAMESPACE_ID::uint32 value) { finish_time_ = value; }
    inline void tbld_task::set_finish_time(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_finish_time(value);
        // @@protoc_insertion_point(field_set:db.tbld_task.finish_time)
    }

    // uint32 expire_time = 11;
    inline void                            tbld_task::clear_expire_time() { expire_time_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_task::_internal_expire_time() const { return expire_time_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_task::expire_time() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_task.expire_time)
        return _internal_expire_time();
    }
    inline void tbld_task::_internal_set_expire_time(::PROTOBUF_NAMESPACE_ID::uint32 value) { expire_time_ = value; }
    inline void tbld_task::set_expire_time(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_expire_time(value);
        // @@protoc_insertion_point(field_set:db.tbld_task.expire_time)
    }

    // uint32 daycount = 12;
    inline void                            tbld_task::clear_daycount() { daycount_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_task::_internal_daycount() const { return daycount_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_task::daycount() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_task.daycount)
        return _internal_daycount();
    }
    inline void tbld_task::_internal_set_daycount(::PROTOBUF_NAMESPACE_ID::uint32 value) { daycount_ = value; }
    inline void tbld_task::set_daycount(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_daycount(value);
        // @@protoc_insertion_point(field_set:db.tbld_task.daycount)
    }

    // uint32 daycount_max = 13;
    inline void                            tbld_task::clear_daycount_max() { daycount_max_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_task::_internal_daycount_max() const { return daycount_max_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_task::daycount_max() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_task.daycount_max)
        return _internal_daycount_max();
    }
    inline void tbld_task::_internal_set_daycount_max(::PROTOBUF_NAMESPACE_ID::uint32 value) { daycount_max_ = value; }
    inline void tbld_task::set_daycount_max(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_daycount_max(value);
        // @@protoc_insertion_point(field_set:db.tbld_task.daycount_max)
    }

    // uint32 state = 14;
    inline void                            tbld_task::clear_state() { state_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_task::_internal_state() const { return state_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_task::state() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_task.state)
        return _internal_state();
    }
    inline void tbld_task::_internal_set_state(::PROTOBUF_NAMESPACE_ID::uint32 value) { state_ = value; }
    inline void tbld_task::set_state(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_state(value);
        // @@protoc_insertion_point(field_set:db.tbld_task.state)
    }

    // -------------------------------------------------------------------

    // tbld_achievement

    // uint64 id = 1 [(.sql) = {
    inline void                            tbld_achievement::clear_id() { id_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_achievement::_internal_id() const { return id_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_achievement::id() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_achievement.id)
        return _internal_id();
    }
    inline void tbld_achievement::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) { id_ = value; }
    inline void tbld_achievement::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_id(value);
        // @@protoc_insertion_point(field_set:db.tbld_achievement.id)
    }

    // uint64 userid = 2 [(.sql) = {
    inline void                            tbld_achievement::clear_userid() { userid_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_achievement::_internal_userid() const { return userid_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_achievement::userid() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_achievement.userid)
        return _internal_userid();
    }
    inline void tbld_achievement::_internal_set_userid(::PROTOBUF_NAMESPACE_ID::uint64 value) { userid_ = value; }
    inline void tbld_achievement::set_userid(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_userid(value);
        // @@protoc_insertion_point(field_set:db.tbld_achievement.userid)
    }

    // uint32 achiid = 3 [(.sql) = {
    inline void                            tbld_achievement::clear_achiid() { achiid_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_achievement::_internal_achiid() const { return achiid_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_achievement::achiid() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_achievement.achiid)
        return _internal_achiid();
    }
    inline void tbld_achievement::_internal_set_achiid(::PROTOBUF_NAMESPACE_ID::uint32 value) { achiid_ = value; }
    inline void tbld_achievement::set_achiid(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_achiid(value);
        // @@protoc_insertion_point(field_set:db.tbld_achievement.achiid)
    }

    // uint32 take = 4;
    inline void                            tbld_achievement::clear_take() { take_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_achievement::_internal_take() const { return take_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_achievement::take() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_achievement.take)
        return _internal_take();
    }
    inline void tbld_achievement::_internal_set_take(::PROTOBUF_NAMESPACE_ID::uint32 value) { take_ = value; }
    inline void tbld_achievement::set_take(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_take(value);
        // @@protoc_insertion_point(field_set:db.tbld_achievement.take)
    }

    // -------------------------------------------------------------------

    // tbld_status

    // uint64 id = 1 [(.sql) = {
    inline void                            tbld_status::clear_id() { id_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_status::_internal_id() const { return id_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_status::id() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_status.id)
        return _internal_id();
    }
    inline void tbld_status::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) { id_ = value; }
    inline void tbld_status::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_id(value);
        // @@protoc_insertion_point(field_set:db.tbld_status.id)
    }

    // uint64 userid = 2 [(.sql) = {
    inline void                            tbld_status::clear_userid() { userid_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_status::_internal_userid() const { return userid_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_status::userid() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_status.userid)
        return _internal_userid();
    }
    inline void tbld_status::_internal_set_userid(::PROTOBUF_NAMESPACE_ID::uint64 value) { userid_ = value; }
    inline void tbld_status::set_userid(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_userid(value);
        // @@protoc_insertion_point(field_set:db.tbld_status.userid)
    }

    // uint32 typeid = 3 [(.sql) = {
    inline void                            tbld_status::clear_typeid_() { typeid__ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_status::_internal_typeid_() const { return typeid__; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_status::typeid_() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_status.typeid)
        return _internal_typeid_();
    }
    inline void tbld_status::_internal_set_typeid_(::PROTOBUF_NAMESPACE_ID::uint32 value) { typeid__ = value; }
    inline void tbld_status::set_typeid_(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_typeid_(value);
        // @@protoc_insertion_point(field_set:db.tbld_status.typeid)
    }

    // uint32 lev = 4 [(.sql) = {
    inline void                            tbld_status::clear_lev() { lev_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_status::_internal_lev() const { return lev_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_status::lev() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_status.lev)
        return _internal_lev();
    }
    inline void tbld_status::_internal_set_lev(::PROTOBUF_NAMESPACE_ID::uint32 value) { lev_ = value; }
    inline void tbld_status::set_lev(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_lev(value);
        // @@protoc_insertion_point(field_set:db.tbld_status.lev)
    }

    // uint32 power = 5;
    inline void                            tbld_status::clear_power() { power_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_status::_internal_power() const { return power_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_status::power() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_status.power)
        return _internal_power();
    }
    inline void tbld_status::_internal_set_power(::PROTOBUF_NAMESPACE_ID::uint32 value) { power_ = value; }
    inline void tbld_status::set_power(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_power(value);
        // @@protoc_insertion_point(field_set:db.tbld_status.power)
    }

    // uint32 secs = 6;
    inline void                            tbld_status::clear_secs() { secs_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_status::_internal_secs() const { return secs_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_status::secs() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_status.secs)
        return _internal_secs();
    }
    inline void tbld_status::_internal_set_secs(::PROTOBUF_NAMESPACE_ID::uint32 value) { secs_ = value; }
    inline void tbld_status::set_secs(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_secs(value);
        // @@protoc_insertion_point(field_set:db.tbld_status.secs)
    }

    // uint32 times = 7;
    inline void                            tbld_status::clear_times() { times_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_status::_internal_times() const { return times_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_status::times() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_status.times)
        return _internal_times();
    }
    inline void tbld_status::_internal_set_times(::PROTOBUF_NAMESPACE_ID::uint32 value) { times_ = value; }
    inline void tbld_status::set_times(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_times(value);
        // @@protoc_insertion_point(field_set:db.tbld_status.times)
    }

    // uint32 laststamp = 8;
    inline void                            tbld_status::clear_laststamp() { laststamp_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_status::_internal_laststamp() const { return laststamp_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_status::laststamp() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_status.laststamp)
        return _internal_laststamp();
    }
    inline void tbld_status::_internal_set_laststamp(::PROTOBUF_NAMESPACE_ID::uint32 value) { laststamp_ = value; }
    inline void tbld_status::set_laststamp(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_laststamp(value);
        // @@protoc_insertion_point(field_set:db.tbld_status.laststamp)
    }

    // uint64 casterid = 9;
    inline void                            tbld_status::clear_casterid() { casterid_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_status::_internal_casterid() const { return casterid_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_status::casterid() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_status.casterid)
        return _internal_casterid();
    }
    inline void tbld_status::_internal_set_casterid(::PROTOBUF_NAMESPACE_ID::uint64 value) { casterid_ = value; }
    inline void tbld_status::set_casterid(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_casterid(value);
        // @@protoc_insertion_point(field_set:db.tbld_status.casterid)
    }

    // uint32 pause = 10 [(.sql) = {
    inline void                            tbld_status::clear_pause() { pause_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_status::_internal_pause() const { return pause_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_status::pause() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_status.pause)
        return _internal_pause();
    }
    inline void tbld_status::_internal_set_pause(::PROTOBUF_NAMESPACE_ID::uint32 value) { pause_ = value; }
    inline void tbld_status::set_pause(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_pause(value);
        // @@protoc_insertion_point(field_set:db.tbld_status.pause)
    }

    // uint32 statusid = 11;
    inline void                            tbld_status::clear_statusid() { statusid_ = 0u; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_status::_internal_statusid() const { return statusid_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint32 tbld_status::statusid() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_status.statusid)
        return _internal_statusid();
    }
    inline void tbld_status::_internal_set_statusid(::PROTOBUF_NAMESPACE_ID::uint32 value) { statusid_ = value; }
    inline void tbld_status::set_statusid(::PROTOBUF_NAMESPACE_ID::uint32 value)
    {
        _internal_set_statusid(value);
        // @@protoc_insertion_point(field_set:db.tbld_status.statusid)
    }

    // -------------------------------------------------------------------

    // tbld_systemvar

    // uint64 keyidx = 1 [(.sql) = {
    inline void                            tbld_systemvar::clear_keyidx() { keyidx_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_systemvar::_internal_keyidx() const { return keyidx_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_systemvar::keyidx() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_systemvar.keyidx)
        return _internal_keyidx();
    }
    inline void tbld_systemvar::_internal_set_keyidx(::PROTOBUF_NAMESPACE_ID::uint64 value) { keyidx_ = value; }
    inline void tbld_systemvar::set_keyidx(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_keyidx(value);
        // @@protoc_insertion_point(field_set:db.tbld_systemvar.keyidx)
    }

    // string name = 2 [(.sql) = {
    inline void tbld_systemvar::clear_name() { name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited()); }
    inline const std::string& tbld_systemvar::name() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_systemvar.name)
        return _internal_name();
    }
    inline void tbld_systemvar::set_name(const std::string& value)
    {
        _internal_set_name(value);
        // @@protoc_insertion_point(field_set:db.tbld_systemvar.name)
    }
    inline std::string* tbld_systemvar::mutable_name()
    {
        // @@protoc_insertion_point(field_mutable:db.tbld_systemvar.name)
        return _internal_mutable_name();
    }
    inline const std::string& tbld_systemvar::_internal_name() const { return name_.GetNoArena(); }
    inline void               tbld_systemvar::_internal_set_name(const std::string& value)
    {

        name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
    }
    inline void tbld_systemvar::set_name(std::string&& value)
    {

        name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
        // @@protoc_insertion_point(field_set_rvalue:db.tbld_systemvar.name)
    }
    inline void tbld_systemvar::set_name(const char* value)
    {
        GOOGLE_DCHECK(value != nullptr);

        name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
        // @@protoc_insertion_point(field_set_char:db.tbld_systemvar.name)
    }
    inline void tbld_systemvar::set_name(const char* value, size_t size)
    {

        name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
                         ::std::string(reinterpret_cast<const char*>(value), size));
        // @@protoc_insertion_point(field_set_pointer:db.tbld_systemvar.name)
    }
    inline std::string* tbld_systemvar::_internal_mutable_name()
    {

        return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline std::string* tbld_systemvar::release_name()
    {
        // @@protoc_insertion_point(field_release:db.tbld_systemvar.name)

        return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline void tbld_systemvar::set_allocated_name(std::string* name)
    {
        if(name != nullptr)
        {
        }
        else
        {
        }
        name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
        // @@protoc_insertion_point(field_set_allocated:db.tbld_systemvar.name)
    }

    // uint64 data0 = 3;
    inline void                            tbld_systemvar::clear_data0() { data0_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_systemvar::_internal_data0() const { return data0_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_systemvar::data0() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_systemvar.data0)
        return _internal_data0();
    }
    inline void tbld_systemvar::_internal_set_data0(::PROTOBUF_NAMESPACE_ID::uint64 value) { data0_ = value; }
    inline void tbld_systemvar::set_data0(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_data0(value);
        // @@protoc_insertion_point(field_set:db.tbld_systemvar.data0)
    }

    // uint64 data1 = 4;
    inline void                            tbld_systemvar::clear_data1() { data1_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_systemvar::_internal_data1() const { return data1_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_systemvar::data1() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_systemvar.data1)
        return _internal_data1();
    }
    inline void tbld_systemvar::_internal_set_data1(::PROTOBUF_NAMESPACE_ID::uint64 value) { data1_ = value; }
    inline void tbld_systemvar::set_data1(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_data1(value);
        // @@protoc_insertion_point(field_set:db.tbld_systemvar.data1)
    }

    // uint64 data2 = 5;
    inline void                            tbld_systemvar::clear_data2() { data2_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_systemvar::_internal_data2() const { return data2_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_systemvar::data2() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_systemvar.data2)
        return _internal_data2();
    }
    inline void tbld_systemvar::_internal_set_data2(::PROTOBUF_NAMESPACE_ID::uint64 value) { data2_ = value; }
    inline void tbld_systemvar::set_data2(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_data2(value);
        // @@protoc_insertion_point(field_set:db.tbld_systemvar.data2)
    }

    // uint64 data3 = 6;
    inline void                            tbld_systemvar::clear_data3() { data3_ = PROTOBUF_ULONGLONG(0); }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_systemvar::_internal_data3() const { return data3_; }
    inline ::PROTOBUF_NAMESPACE_ID::uint64 tbld_systemvar::data3() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_systemvar.data3)
        return _internal_data3();
    }
    inline void tbld_systemvar::_internal_set_data3(::PROTOBUF_NAMESPACE_ID::uint64 value) { data3_ = value; }
    inline void tbld_systemvar::set_data3(::PROTOBUF_NAMESPACE_ID::uint64 value)
    {
        _internal_set_data3(value);
        // @@protoc_insertion_point(field_set:db.tbld_systemvar.data3)
    }

    // string str0 = 7 [(.sql) = {
    inline void tbld_systemvar::clear_str0() { str0_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited()); }
    inline const std::string& tbld_systemvar::str0() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_systemvar.str0)
        return _internal_str0();
    }
    inline void tbld_systemvar::set_str0(const std::string& value)
    {
        _internal_set_str0(value);
        // @@protoc_insertion_point(field_set:db.tbld_systemvar.str0)
    }
    inline std::string* tbld_systemvar::mutable_str0()
    {
        // @@protoc_insertion_point(field_mutable:db.tbld_systemvar.str0)
        return _internal_mutable_str0();
    }
    inline const std::string& tbld_systemvar::_internal_str0() const { return str0_.GetNoArena(); }
    inline void               tbld_systemvar::_internal_set_str0(const std::string& value)
    {

        str0_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
    }
    inline void tbld_systemvar::set_str0(std::string&& value)
    {

        str0_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
        // @@protoc_insertion_point(field_set_rvalue:db.tbld_systemvar.str0)
    }
    inline void tbld_systemvar::set_str0(const char* value)
    {
        GOOGLE_DCHECK(value != nullptr);

        str0_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
        // @@protoc_insertion_point(field_set_char:db.tbld_systemvar.str0)
    }
    inline void tbld_systemvar::set_str0(const char* value, size_t size)
    {

        str0_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
                         ::std::string(reinterpret_cast<const char*>(value), size));
        // @@protoc_insertion_point(field_set_pointer:db.tbld_systemvar.str0)
    }
    inline std::string* tbld_systemvar::_internal_mutable_str0()
    {

        return str0_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline std::string* tbld_systemvar::release_str0()
    {
        // @@protoc_insertion_point(field_release:db.tbld_systemvar.str0)

        return str0_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline void tbld_systemvar::set_allocated_str0(std::string* str0)
    {
        if(str0 != nullptr)
        {
        }
        else
        {
        }
        str0_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), str0);
        // @@protoc_insertion_point(field_set_allocated:db.tbld_systemvar.str0)
    }

    // string str1 = 8 [(.sql) = {
    inline void tbld_systemvar::clear_str1() { str1_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited()); }
    inline const std::string& tbld_systemvar::str1() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_systemvar.str1)
        return _internal_str1();
    }
    inline void tbld_systemvar::set_str1(const std::string& value)
    {
        _internal_set_str1(value);
        // @@protoc_insertion_point(field_set:db.tbld_systemvar.str1)
    }
    inline std::string* tbld_systemvar::mutable_str1()
    {
        // @@protoc_insertion_point(field_mutable:db.tbld_systemvar.str1)
        return _internal_mutable_str1();
    }
    inline const std::string& tbld_systemvar::_internal_str1() const { return str1_.GetNoArena(); }
    inline void               tbld_systemvar::_internal_set_str1(const std::string& value)
    {

        str1_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
    }
    inline void tbld_systemvar::set_str1(std::string&& value)
    {

        str1_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
        // @@protoc_insertion_point(field_set_rvalue:db.tbld_systemvar.str1)
    }
    inline void tbld_systemvar::set_str1(const char* value)
    {
        GOOGLE_DCHECK(value != nullptr);

        str1_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
        // @@protoc_insertion_point(field_set_char:db.tbld_systemvar.str1)
    }
    inline void tbld_systemvar::set_str1(const char* value, size_t size)
    {

        str1_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
                         ::std::string(reinterpret_cast<const char*>(value), size));
        // @@protoc_insertion_point(field_set_pointer:db.tbld_systemvar.str1)
    }
    inline std::string* tbld_systemvar::_internal_mutable_str1()
    {

        return str1_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline std::string* tbld_systemvar::release_str1()
    {
        // @@protoc_insertion_point(field_release:db.tbld_systemvar.str1)

        return str1_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline void tbld_systemvar::set_allocated_str1(std::string* str1)
    {
        if(str1 != nullptr)
        {
        }
        else
        {
        }
        str1_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), str1);
        // @@protoc_insertion_point(field_set_allocated:db.tbld_systemvar.str1)
    }

    // string str2 = 9 [(.sql) = {
    inline void tbld_systemvar::clear_str2() { str2_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited()); }
    inline const std::string& tbld_systemvar::str2() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_systemvar.str2)
        return _internal_str2();
    }
    inline void tbld_systemvar::set_str2(const std::string& value)
    {
        _internal_set_str2(value);
        // @@protoc_insertion_point(field_set:db.tbld_systemvar.str2)
    }
    inline std::string* tbld_systemvar::mutable_str2()
    {
        // @@protoc_insertion_point(field_mutable:db.tbld_systemvar.str2)
        return _internal_mutable_str2();
    }
    inline const std::string& tbld_systemvar::_internal_str2() const { return str2_.GetNoArena(); }
    inline void               tbld_systemvar::_internal_set_str2(const std::string& value)
    {

        str2_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
    }
    inline void tbld_systemvar::set_str2(std::string&& value)
    {

        str2_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
        // @@protoc_insertion_point(field_set_rvalue:db.tbld_systemvar.str2)
    }
    inline void tbld_systemvar::set_str2(const char* value)
    {
        GOOGLE_DCHECK(value != nullptr);

        str2_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
        // @@protoc_insertion_point(field_set_char:db.tbld_systemvar.str2)
    }
    inline void tbld_systemvar::set_str2(const char* value, size_t size)
    {

        str2_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
                         ::std::string(reinterpret_cast<const char*>(value), size));
        // @@protoc_insertion_point(field_set_pointer:db.tbld_systemvar.str2)
    }
    inline std::string* tbld_systemvar::_internal_mutable_str2()
    {

        return str2_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline std::string* tbld_systemvar::release_str2()
    {
        // @@protoc_insertion_point(field_release:db.tbld_systemvar.str2)

        return str2_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline void tbld_systemvar::set_allocated_str2(std::string* str2)
    {
        if(str2 != nullptr)
        {
        }
        else
        {
        }
        str2_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), str2);
        // @@protoc_insertion_point(field_set_allocated:db.tbld_systemvar.str2)
    }

    // string str3 = 10 [(.sql) = {
    inline void tbld_systemvar::clear_str3() { str3_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited()); }
    inline const std::string& tbld_systemvar::str3() const
    {
        // @@protoc_insertion_point(field_get:db.tbld_systemvar.str3)
        return _internal_str3();
    }
    inline void tbld_systemvar::set_str3(const std::string& value)
    {
        _internal_set_str3(value);
        // @@protoc_insertion_point(field_set:db.tbld_systemvar.str3)
    }
    inline std::string* tbld_systemvar::mutable_str3()
    {
        // @@protoc_insertion_point(field_mutable:db.tbld_systemvar.str3)
        return _internal_mutable_str3();
    }
    inline const std::string& tbld_systemvar::_internal_str3() const { return str3_.GetNoArena(); }
    inline void               tbld_systemvar::_internal_set_str3(const std::string& value)
    {

        str3_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
    }
    inline void tbld_systemvar::set_str3(std::string&& value)
    {

        str3_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
        // @@protoc_insertion_point(field_set_rvalue:db.tbld_systemvar.str3)
    }
    inline void tbld_systemvar::set_str3(const char* value)
    {
        GOOGLE_DCHECK(value != nullptr);

        str3_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
        // @@protoc_insertion_point(field_set_char:db.tbld_systemvar.str3)
    }
    inline void tbld_systemvar::set_str3(const char* value, size_t size)
    {

        str3_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
                         ::std::string(reinterpret_cast<const char*>(value), size));
        // @@protoc_insertion_point(field_set_pointer:db.tbld_systemvar.str3)
    }
    inline std::string* tbld_systemvar::_internal_mutable_str3()
    {

        return str3_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline std::string* tbld_systemvar::release_str3()
    {
        // @@protoc_insertion_point(field_release:db.tbld_systemvar.str3)

        return str3_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
    }
    inline void tbld_systemvar::set_allocated_str3(std::string* str3)
    {
        if(str3 != nullptr)
        {
        }
        else
        {
        }
        str3_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), str3);
        // @@protoc_insertion_point(field_set_allocated:db.tbld_systemvar.str3)
    }

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif // __GNUC__
    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // @@protoc_insertion_point(namespace_scope)

} // namespace db

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_db_5fproto_2fgamedb_2eproto
