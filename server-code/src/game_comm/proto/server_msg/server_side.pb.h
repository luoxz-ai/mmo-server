// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server_msg/server_side.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_server_5fmsg_2fserver_5fside_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_server_5fmsg_2fserver_5fside_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011002 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "common/Common.pb.h"
#include <google/protobuf/descriptor.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_server_5fmsg_2fserver_5fside_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_server_5fmsg_2fserver_5fside_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[63]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_server_5fmsg_2fserver_5fside_2eproto;
namespace ServerMSG {
class ActiveGen;
class ActiveGenDefaultTypeInternal;
extern ActiveGenDefaultTypeInternal _ActiveGen_default_instance_;
class ActorCastSkill;
class ActorCastSkillDefaultTypeInternal;
extern ActorCastSkillDefaultTypeInternal _ActorCastSkill_default_instance_;
class ActorCastSkill_Fail;
class ActorCastSkill_FailDefaultTypeInternal;
extern ActorCastSkill_FailDefaultTypeInternal _ActorCastSkill_Fail_default_instance_;
class ActorCreate;
class ActorCreateDefaultTypeInternal;
extern ActorCreateDefaultTypeInternal _ActorCreate_default_instance_;
class ActorDestory;
class ActorDestoryDefaultTypeInternal;
extern ActorDestoryDefaultTypeInternal _ActorDestory_default_instance_;
class ActorFlyTo;
class ActorFlyToDefaultTypeInternal;
extern ActorFlyToDefaultTypeInternal _ActorFlyTo_default_instance_;
class ActorMove;
class ActorMoveDefaultTypeInternal;
extern ActorMoveDefaultTypeInternal _ActorMove_default_instance_;
class ActorSetHide;
class ActorSetHideDefaultTypeInternal;
extern ActorSetHideDefaultTypeInternal _ActorSetHide_default_instance_;
class AddTaskPhase;
class AddTaskPhaseDefaultTypeInternal;
extern AddTaskPhaseDefaultTypeInternal _AddTaskPhase_default_instance_;
class GuildAcceptApply;
class GuildAcceptApplyDefaultTypeInternal;
extern GuildAcceptApplyDefaultTypeInternal _GuildAcceptApply_default_instance_;
class GuildAcceptInvite;
class GuildAcceptInviteDefaultTypeInternal;
extern GuildAcceptInviteDefaultTypeInternal _GuildAcceptInvite_default_instance_;
class GuildAddMember;
class GuildAddMemberDefaultTypeInternal;
extern GuildAddMemberDefaultTypeInternal _GuildAddMember_default_instance_;
class GuildApplyMember;
class GuildApplyMemberDefaultTypeInternal;
extern GuildApplyMemberDefaultTypeInternal _GuildApplyMember_default_instance_;
class GuildCreate;
class GuildCreateDefaultTypeInternal;
extern GuildCreateDefaultTypeInternal _GuildCreate_default_instance_;
class GuildDelMember;
class GuildDelMemberDefaultTypeInternal;
extern GuildDelMemberDefaultTypeInternal _GuildDelMember_default_instance_;
class GuildDestory;
class GuildDestoryDefaultTypeInternal;
extern GuildDestoryDefaultTypeInternal _GuildDestory_default_instance_;
class GuildInviteMember;
class GuildInviteMemberDefaultTypeInternal;
extern GuildInviteMemberDefaultTypeInternal _GuildInviteMember_default_instance_;
class GuildKickMember;
class GuildKickMemberDefaultTypeInternal;
extern GuildKickMemberDefaultTypeInternal _GuildKickMember_default_instance_;
class GuildMemberInfoList;
class GuildMemberInfoListDefaultTypeInternal;
extern GuildMemberInfoListDefaultTypeInternal _GuildMemberInfoList_default_instance_;
class GuildNewLeader;
class GuildNewLeaderDefaultTypeInternal;
extern GuildNewLeaderDefaultTypeInternal _GuildNewLeader_default_instance_;
class GuildQuit;
class GuildQuitDefaultTypeInternal;
extern GuildQuitDefaultTypeInternal _GuildQuit_default_instance_;
class KillGen;
class KillGenDefaultTypeInternal;
extern KillGenDefaultTypeInternal _KillGen_default_instance_;
class MessageTransmit;
class MessageTransmitDefaultTypeInternal;
extern MessageTransmitDefaultTypeInternal _MessageTransmit_default_instance_;
class MonsterDestory;
class MonsterDestoryDefaultTypeInternal;
extern MonsterDestoryDefaultTypeInternal _MonsterDestory_default_instance_;
class MonsterGen;
class MonsterGenDefaultTypeInternal;
extern MonsterGenDefaultTypeInternal _MonsterGen_default_instance_;
class MonsterGenMulti;
class MonsterGenMultiDefaultTypeInternal;
extern MonsterGenMultiDefaultTypeInternal _MonsterGenMulti_default_instance_;
class MonsterGenOnce;
class MonsterGenOnceDefaultTypeInternal;
extern MonsterGenOnceDefaultTypeInternal _MonsterGenOnce_default_instance_;
class PhaseCreate;
class PhaseCreateDefaultTypeInternal;
extern PhaseCreateDefaultTypeInternal _PhaseCreate_default_instance_;
class PhaseDestory;
class PhaseDestoryDefaultTypeInternal;
extern PhaseDestoryDefaultTypeInternal _PhaseDestory_default_instance_;
class PlayerChangeZone;
class PlayerChangeZoneDefaultTypeInternal;
extern PlayerChangeZoneDefaultTypeInternal _PlayerChangeZone_default_instance_;
class PlayerChangeZone_Data;
class PlayerChangeZone_DataDefaultTypeInternal;
extern PlayerChangeZone_DataDefaultTypeInternal _PlayerChangeZone_Data_default_instance_;
class PlayerEnterZone;
class PlayerEnterZoneDefaultTypeInternal;
extern PlayerEnterZoneDefaultTypeInternal _PlayerEnterZone_default_instance_;
class PlayerLogout;
class PlayerLogoutDefaultTypeInternal;
extern PlayerLogoutDefaultTypeInternal _PlayerLogout_default_instance_;
class RemoveTaskPhase;
class RemoveTaskPhaseDefaultTypeInternal;
extern RemoveTaskPhaseDefaultTypeInternal _RemoveTaskPhase_default_instance_;
class SceneCreate;
class SceneCreateDefaultTypeInternal;
extern SceneCreateDefaultTypeInternal _SceneCreate_default_instance_;
class ServerSideMessageOptions;
class ServerSideMessageOptionsDefaultTypeInternal;
extern ServerSideMessageOptionsDefaultTypeInternal _ServerSideMessageOptions_default_instance_;
class ServiceCmd;
class ServiceCmdDefaultTypeInternal;
extern ServiceCmdDefaultTypeInternal _ServiceCmd_default_instance_;
class ServiceHttpRequest;
class ServiceHttpRequestDefaultTypeInternal;
extern ServiceHttpRequestDefaultTypeInternal _ServiceHttpRequest_default_instance_;
class ServiceHttpRequest_KvmapEntry_DoNotUse;
class ServiceHttpRequest_KvmapEntry_DoNotUseDefaultTypeInternal;
extern ServiceHttpRequest_KvmapEntry_DoNotUseDefaultTypeInternal _ServiceHttpRequest_KvmapEntry_DoNotUse_default_instance_;
class ServiceHttpResponse;
class ServiceHttpResponseDefaultTypeInternal;
extern ServiceHttpResponseDefaultTypeInternal _ServiceHttpResponse_default_instance_;
class ServiceReady;
class ServiceReadyDefaultTypeInternal;
extern ServiceReadyDefaultTypeInternal _ServiceReady_default_instance_;
class ServiceRegister;
class ServiceRegisterDefaultTypeInternal;
extern ServiceRegisterDefaultTypeInternal _ServiceRegister_default_instance_;
class SocketAuth;
class SocketAuthDefaultTypeInternal;
extern SocketAuthDefaultTypeInternal _SocketAuth_default_instance_;
class SocketChangeDest;
class SocketChangeDestDefaultTypeInternal;
extern SocketChangeDestDefaultTypeInternal _SocketChangeDest_default_instance_;
class SocketClose;
class SocketCloseDefaultTypeInternal;
extern SocketCloseDefaultTypeInternal _SocketClose_default_instance_;
class SocketConnect;
class SocketConnectDefaultTypeInternal;
extern SocketConnectDefaultTypeInternal _SocketConnect_default_instance_;
class SocketLogin;
class SocketLoginDefaultTypeInternal;
extern SocketLoginDefaultTypeInternal _SocketLogin_default_instance_;
class SocketStartAccept;
class SocketStartAcceptDefaultTypeInternal;
extern SocketStartAcceptDefaultTypeInternal _SocketStartAccept_default_instance_;
class SocketStopAccept;
class SocketStopAcceptDefaultTypeInternal;
extern SocketStopAcceptDefaultTypeInternal _SocketStopAccept_default_instance_;
class SyncTaskPhase;
class SyncTaskPhaseDefaultTypeInternal;
extern SyncTaskPhaseDefaultTypeInternal _SyncTaskPhase_default_instance_;
class SystemVarChange;
class SystemVarChangeDefaultTypeInternal;
extern SystemVarChangeDefaultTypeInternal _SystemVarChange_default_instance_;
class TeamAcceptApply;
class TeamAcceptApplyDefaultTypeInternal;
extern TeamAcceptApplyDefaultTypeInternal _TeamAcceptApply_default_instance_;
class TeamAcceptInvite;
class TeamAcceptInviteDefaultTypeInternal;
extern TeamAcceptInviteDefaultTypeInternal _TeamAcceptInvite_default_instance_;
class TeamAddMember;
class TeamAddMemberDefaultTypeInternal;
extern TeamAddMemberDefaultTypeInternal _TeamAddMember_default_instance_;
class TeamApplyMember;
class TeamApplyMemberDefaultTypeInternal;
extern TeamApplyMemberDefaultTypeInternal _TeamApplyMember_default_instance_;
class TeamCreate;
class TeamCreateDefaultTypeInternal;
extern TeamCreateDefaultTypeInternal _TeamCreate_default_instance_;
class TeamDelMember;
class TeamDelMemberDefaultTypeInternal;
extern TeamDelMemberDefaultTypeInternal _TeamDelMember_default_instance_;
class TeamDestory;
class TeamDestoryDefaultTypeInternal;
extern TeamDestoryDefaultTypeInternal _TeamDestory_default_instance_;
class TeamInviteMember;
class TeamInviteMemberDefaultTypeInternal;
extern TeamInviteMemberDefaultTypeInternal _TeamInviteMember_default_instance_;
class TeamKickMember;
class TeamKickMemberDefaultTypeInternal;
extern TeamKickMemberDefaultTypeInternal _TeamKickMember_default_instance_;
class TeamMemberInfoList;
class TeamMemberInfoListDefaultTypeInternal;
extern TeamMemberInfoListDefaultTypeInternal _TeamMemberInfoList_default_instance_;
class TeamNewLeader;
class TeamNewLeaderDefaultTypeInternal;
extern TeamNewLeaderDefaultTypeInternal _TeamNewLeader_default_instance_;
class TeamQuit;
class TeamQuitDefaultTypeInternal;
extern TeamQuitDefaultTypeInternal _TeamQuit_default_instance_;
}  // namespace ServerMSG
PROTOBUF_NAMESPACE_OPEN
template<> ::ServerMSG::ActiveGen* Arena::CreateMaybeMessage<::ServerMSG::ActiveGen>(Arena*);
template<> ::ServerMSG::ActorCastSkill* Arena::CreateMaybeMessage<::ServerMSG::ActorCastSkill>(Arena*);
template<> ::ServerMSG::ActorCastSkill_Fail* Arena::CreateMaybeMessage<::ServerMSG::ActorCastSkill_Fail>(Arena*);
template<> ::ServerMSG::ActorCreate* Arena::CreateMaybeMessage<::ServerMSG::ActorCreate>(Arena*);
template<> ::ServerMSG::ActorDestory* Arena::CreateMaybeMessage<::ServerMSG::ActorDestory>(Arena*);
template<> ::ServerMSG::ActorFlyTo* Arena::CreateMaybeMessage<::ServerMSG::ActorFlyTo>(Arena*);
template<> ::ServerMSG::ActorMove* Arena::CreateMaybeMessage<::ServerMSG::ActorMove>(Arena*);
template<> ::ServerMSG::ActorSetHide* Arena::CreateMaybeMessage<::ServerMSG::ActorSetHide>(Arena*);
template<> ::ServerMSG::AddTaskPhase* Arena::CreateMaybeMessage<::ServerMSG::AddTaskPhase>(Arena*);
template<> ::ServerMSG::GuildAcceptApply* Arena::CreateMaybeMessage<::ServerMSG::GuildAcceptApply>(Arena*);
template<> ::ServerMSG::GuildAcceptInvite* Arena::CreateMaybeMessage<::ServerMSG::GuildAcceptInvite>(Arena*);
template<> ::ServerMSG::GuildAddMember* Arena::CreateMaybeMessage<::ServerMSG::GuildAddMember>(Arena*);
template<> ::ServerMSG::GuildApplyMember* Arena::CreateMaybeMessage<::ServerMSG::GuildApplyMember>(Arena*);
template<> ::ServerMSG::GuildCreate* Arena::CreateMaybeMessage<::ServerMSG::GuildCreate>(Arena*);
template<> ::ServerMSG::GuildDelMember* Arena::CreateMaybeMessage<::ServerMSG::GuildDelMember>(Arena*);
template<> ::ServerMSG::GuildDestory* Arena::CreateMaybeMessage<::ServerMSG::GuildDestory>(Arena*);
template<> ::ServerMSG::GuildInviteMember* Arena::CreateMaybeMessage<::ServerMSG::GuildInviteMember>(Arena*);
template<> ::ServerMSG::GuildKickMember* Arena::CreateMaybeMessage<::ServerMSG::GuildKickMember>(Arena*);
template<> ::ServerMSG::GuildMemberInfoList* Arena::CreateMaybeMessage<::ServerMSG::GuildMemberInfoList>(Arena*);
template<> ::ServerMSG::GuildNewLeader* Arena::CreateMaybeMessage<::ServerMSG::GuildNewLeader>(Arena*);
template<> ::ServerMSG::GuildQuit* Arena::CreateMaybeMessage<::ServerMSG::GuildQuit>(Arena*);
template<> ::ServerMSG::KillGen* Arena::CreateMaybeMessage<::ServerMSG::KillGen>(Arena*);
template<> ::ServerMSG::MessageTransmit* Arena::CreateMaybeMessage<::ServerMSG::MessageTransmit>(Arena*);
template<> ::ServerMSG::MonsterDestory* Arena::CreateMaybeMessage<::ServerMSG::MonsterDestory>(Arena*);
template<> ::ServerMSG::MonsterGen* Arena::CreateMaybeMessage<::ServerMSG::MonsterGen>(Arena*);
template<> ::ServerMSG::MonsterGenMulti* Arena::CreateMaybeMessage<::ServerMSG::MonsterGenMulti>(Arena*);
template<> ::ServerMSG::MonsterGenOnce* Arena::CreateMaybeMessage<::ServerMSG::MonsterGenOnce>(Arena*);
template<> ::ServerMSG::PhaseCreate* Arena::CreateMaybeMessage<::ServerMSG::PhaseCreate>(Arena*);
template<> ::ServerMSG::PhaseDestory* Arena::CreateMaybeMessage<::ServerMSG::PhaseDestory>(Arena*);
template<> ::ServerMSG::PlayerChangeZone* Arena::CreateMaybeMessage<::ServerMSG::PlayerChangeZone>(Arena*);
template<> ::ServerMSG::PlayerChangeZone_Data* Arena::CreateMaybeMessage<::ServerMSG::PlayerChangeZone_Data>(Arena*);
template<> ::ServerMSG::PlayerEnterZone* Arena::CreateMaybeMessage<::ServerMSG::PlayerEnterZone>(Arena*);
template<> ::ServerMSG::PlayerLogout* Arena::CreateMaybeMessage<::ServerMSG::PlayerLogout>(Arena*);
template<> ::ServerMSG::RemoveTaskPhase* Arena::CreateMaybeMessage<::ServerMSG::RemoveTaskPhase>(Arena*);
template<> ::ServerMSG::SceneCreate* Arena::CreateMaybeMessage<::ServerMSG::SceneCreate>(Arena*);
template<> ::ServerMSG::ServerSideMessageOptions* Arena::CreateMaybeMessage<::ServerMSG::ServerSideMessageOptions>(Arena*);
template<> ::ServerMSG::ServiceCmd* Arena::CreateMaybeMessage<::ServerMSG::ServiceCmd>(Arena*);
template<> ::ServerMSG::ServiceHttpRequest* Arena::CreateMaybeMessage<::ServerMSG::ServiceHttpRequest>(Arena*);
template<> ::ServerMSG::ServiceHttpRequest_KvmapEntry_DoNotUse* Arena::CreateMaybeMessage<::ServerMSG::ServiceHttpRequest_KvmapEntry_DoNotUse>(Arena*);
template<> ::ServerMSG::ServiceHttpResponse* Arena::CreateMaybeMessage<::ServerMSG::ServiceHttpResponse>(Arena*);
template<> ::ServerMSG::ServiceReady* Arena::CreateMaybeMessage<::ServerMSG::ServiceReady>(Arena*);
template<> ::ServerMSG::ServiceRegister* Arena::CreateMaybeMessage<::ServerMSG::ServiceRegister>(Arena*);
template<> ::ServerMSG::SocketAuth* Arena::CreateMaybeMessage<::ServerMSG::SocketAuth>(Arena*);
template<> ::ServerMSG::SocketChangeDest* Arena::CreateMaybeMessage<::ServerMSG::SocketChangeDest>(Arena*);
template<> ::ServerMSG::SocketClose* Arena::CreateMaybeMessage<::ServerMSG::SocketClose>(Arena*);
template<> ::ServerMSG::SocketConnect* Arena::CreateMaybeMessage<::ServerMSG::SocketConnect>(Arena*);
template<> ::ServerMSG::SocketLogin* Arena::CreateMaybeMessage<::ServerMSG::SocketLogin>(Arena*);
template<> ::ServerMSG::SocketStartAccept* Arena::CreateMaybeMessage<::ServerMSG::SocketStartAccept>(Arena*);
template<> ::ServerMSG::SocketStopAccept* Arena::CreateMaybeMessage<::ServerMSG::SocketStopAccept>(Arena*);
template<> ::ServerMSG::SyncTaskPhase* Arena::CreateMaybeMessage<::ServerMSG::SyncTaskPhase>(Arena*);
template<> ::ServerMSG::SystemVarChange* Arena::CreateMaybeMessage<::ServerMSG::SystemVarChange>(Arena*);
template<> ::ServerMSG::TeamAcceptApply* Arena::CreateMaybeMessage<::ServerMSG::TeamAcceptApply>(Arena*);
template<> ::ServerMSG::TeamAcceptInvite* Arena::CreateMaybeMessage<::ServerMSG::TeamAcceptInvite>(Arena*);
template<> ::ServerMSG::TeamAddMember* Arena::CreateMaybeMessage<::ServerMSG::TeamAddMember>(Arena*);
template<> ::ServerMSG::TeamApplyMember* Arena::CreateMaybeMessage<::ServerMSG::TeamApplyMember>(Arena*);
template<> ::ServerMSG::TeamCreate* Arena::CreateMaybeMessage<::ServerMSG::TeamCreate>(Arena*);
template<> ::ServerMSG::TeamDelMember* Arena::CreateMaybeMessage<::ServerMSG::TeamDelMember>(Arena*);
template<> ::ServerMSG::TeamDestory* Arena::CreateMaybeMessage<::ServerMSG::TeamDestory>(Arena*);
template<> ::ServerMSG::TeamInviteMember* Arena::CreateMaybeMessage<::ServerMSG::TeamInviteMember>(Arena*);
template<> ::ServerMSG::TeamKickMember* Arena::CreateMaybeMessage<::ServerMSG::TeamKickMember>(Arena*);
template<> ::ServerMSG::TeamMemberInfoList* Arena::CreateMaybeMessage<::ServerMSG::TeamMemberInfoList>(Arena*);
template<> ::ServerMSG::TeamNewLeader* Arena::CreateMaybeMessage<::ServerMSG::TeamNewLeader>(Arena*);
template<> ::ServerMSG::TeamQuit* Arena::CreateMaybeMessage<::ServerMSG::TeamQuit>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace ServerMSG {

enum SystemVarChange_SystemVarChangeType : int {
  SystemVarChange_SystemVarChangeType_SVCT_CREATE = 0,
  SystemVarChange_SystemVarChangeType_SVCT_SET_DATA = 1,
  SystemVarChange_SystemVarChangeType_SVCT_ADD_DATA = 2,
  SystemVarChange_SystemVarChangeType_SVCT_SET_STR = 3,
  SystemVarChange_SystemVarChangeType_SystemVarChange_SystemVarChangeType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  SystemVarChange_SystemVarChangeType_SystemVarChange_SystemVarChangeType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool SystemVarChange_SystemVarChangeType_IsValid(int value);
constexpr SystemVarChange_SystemVarChangeType SystemVarChange_SystemVarChangeType_SystemVarChangeType_MIN = SystemVarChange_SystemVarChangeType_SVCT_CREATE;
constexpr SystemVarChange_SystemVarChangeType SystemVarChange_SystemVarChangeType_SystemVarChangeType_MAX = SystemVarChange_SystemVarChangeType_SVCT_SET_STR;
constexpr int SystemVarChange_SystemVarChangeType_SystemVarChangeType_ARRAYSIZE = SystemVarChange_SystemVarChangeType_SystemVarChangeType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SystemVarChange_SystemVarChangeType_descriptor();
template<typename T>
inline const std::string& SystemVarChange_SystemVarChangeType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, SystemVarChange_SystemVarChangeType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function SystemVarChange_SystemVarChangeType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    SystemVarChange_SystemVarChangeType_descriptor(), enum_t_value);
}
inline bool SystemVarChange_SystemVarChangeType_Parse(
    const std::string& name, SystemVarChange_SystemVarChangeType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<SystemVarChange_SystemVarChangeType>(
    SystemVarChange_SystemVarChangeType_descriptor(), name, value);
}
enum OMsgID : int {
  OMSGID_NONE = 0,
  MsgID_BEGIN = 20000,
  MsgID_ServiceCmd = 20001,
  MsgID_ServiceHttpRequest = 20002,
  MsgID_ServiceHttpResponse = 20003,
  MsgID_MessageTransmit = 20007,
  MsgID_ServiceReady = 20010,
  MsgID_ServiceRegister = 20011,
  MsgID_SocketConnect = 20012,
  MsgID_SocketClose = 20013,
  MsgID_SocketChangeDest = 20014,
  MsgID_SocketAuth = 20015,
  MsgID_SocketStartAccept = 20016,
  MsgID_SocketStopAccept = 20017,
  MsgID_SocketLogin = 20018,
  MsgID_PlayerEnterZone = 20021,
  MsgID_PlayerChangeZone = 20022,
  MsgID_PlayerChangeZone_Data = 20023,
  MsgID_PlayerLogout = 20024,
  MsgID_SystemVarChange = 20030,
  MsgID_SceneCreate = 20031,
  MsgID_PhaseCreate = 20032,
  MsgID_PhaseDestory = 20033,
  MsgID_MonsterGen = 20041,
  MsgID_MonsterDestory = 20042,
  MsgID_ActiveGen = 20043,
  MsgID_KillGen = 20044,
  MsgID_MonsterGenOnce = 20045,
  MsgID_MonsterGenMulti = 20046,
  MsgID_ActorCreate = 20100,
  MsgID_ActorDestory = 20101,
  MsgID_ActorMove = 20102,
  MsgID_ActorCastSkill = 20103,
  MsgID_ActorCastSkill_Fail = 20104,
  MsgID_ActorSetHide = 20105,
  MsgID_SyncTaskPhase = 20106,
  MsgID_AddTaskPhase = 20107,
  MsgID_RemoveTaskPhase = 20108,
  MsgID_ActorFlyTo = 20109,
  MsgID_TeamCreate = 20110,
  MsgID_TeamDestory = 20111,
  MsgID_TeamQuit = 20112,
  MsgID_TeamKickMember = 20113,
  MsgID_TeamInviteMember = 20114,
  MsgID_TeamAcceptInvite = 20115,
  MsgID_TeamApplyMember = 20116,
  MsgID_TeamAcceptApply = 20117,
  MsgID_TeamNewLeader = 20118,
  MsgID_TeamMemberInfoList = 20119,
  MsgID_TeamAddMember = 20120,
  MsgID_TeamDelMember = 20121,
  MsgID_GuildCreate = 20140,
  MsgID_GuildDestory = 20141,
  MsgID_GuildQuit = 20142,
  MsgID_GuildKickMember = 20143,
  MsgID_GuildInviteMember = 20144,
  MsgID_GuildAcceptInvite = 20145,
  MsgID_GuildApplyMember = 20146,
  MsgID_GuildAcceptApply = 20147,
  MsgID_GuildNewLeader = 20148,
  MsgID_GuildMemberInfoList = 20149,
  MsgID_GuildAddMember = 20150,
  MsgID_GuildDelMember = 20151,
  MsgID_END = 30000,
  OMsgID_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  OMsgID_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool OMsgID_IsValid(int value);
constexpr OMsgID OMsgID_MIN = OMSGID_NONE;
constexpr OMsgID OMsgID_MAX = MsgID_END;
constexpr int OMsgID_ARRAYSIZE = OMsgID_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* OMsgID_descriptor();
template<typename T>
inline const std::string& OMsgID_Name(T enum_t_value) {
  static_assert(::std::is_same<T, OMsgID>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function OMsgID_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    OMsgID_descriptor(), enum_t_value);
}
inline bool OMsgID_Parse(
    const std::string& name, OMsgID* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<OMsgID>(
    OMsgID_descriptor(), name, value);
}
// ===================================================================

class ServerSideMessageOptions :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.ServerSideMessageOptions) */ {
 public:
  ServerSideMessageOptions();
  virtual ~ServerSideMessageOptions();

  ServerSideMessageOptions(const ServerSideMessageOptions& from);
  ServerSideMessageOptions(ServerSideMessageOptions&& from) noexcept
    : ServerSideMessageOptions() {
    *this = ::std::move(from);
  }

  inline ServerSideMessageOptions& operator=(const ServerSideMessageOptions& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerSideMessageOptions& operator=(ServerSideMessageOptions&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ServerSideMessageOptions& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ServerSideMessageOptions* internal_default_instance() {
    return reinterpret_cast<const ServerSideMessageOptions*>(
               &_ServerSideMessageOptions_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ServerSideMessageOptions& a, ServerSideMessageOptions& b) {
    a.Swap(&b);
  }
  inline void Swap(ServerSideMessageOptions* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ServerSideMessageOptions* New() const final {
    return CreateMaybeMessage<ServerSideMessageOptions>(nullptr);
  }

  ServerSideMessageOptions* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ServerSideMessageOptions>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ServerSideMessageOptions& from);
  void MergeFrom(const ServerSideMessageOptions& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerSideMessageOptions* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.ServerSideMessageOptions";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // .ServerMSG.OMsgID id = 1;
  void clear_id();
  ::ServerMSG::OMsgID id() const;
  void set_id(::ServerMSG::OMsgID value);
  private:
  ::ServerMSG::OMsgID _internal_id() const;
  void _internal_set_id(::ServerMSG::OMsgID value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.ServerSideMessageOptions)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  int id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class ServiceCmd :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.ServiceCmd) */ {
 public:
  ServiceCmd();
  virtual ~ServiceCmd();

  ServiceCmd(const ServiceCmd& from);
  ServiceCmd(ServiceCmd&& from) noexcept
    : ServiceCmd() {
    *this = ::std::move(from);
  }

  inline ServiceCmd& operator=(const ServiceCmd& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServiceCmd& operator=(ServiceCmd&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ServiceCmd& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ServiceCmd* internal_default_instance() {
    return reinterpret_cast<const ServiceCmd*>(
               &_ServiceCmd_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ServiceCmd& a, ServiceCmd& b) {
    a.Swap(&b);
  }
  inline void Swap(ServiceCmd* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ServiceCmd* New() const final {
    return CreateMaybeMessage<ServiceCmd>(nullptr);
  }

  ServiceCmd* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ServiceCmd>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ServiceCmd& from);
  void MergeFrom(const ServiceCmd& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServiceCmd* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.ServiceCmd";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCmdsFieldNumber = 1,
  };
  // repeated string cmds = 1;
  int cmds_size() const;
  private:
  int _internal_cmds_size() const;
  public:
  void clear_cmds();
  const std::string& cmds(int index) const;
  std::string* mutable_cmds(int index);
  void set_cmds(int index, const std::string& value);
  void set_cmds(int index, std::string&& value);
  void set_cmds(int index, const char* value);
  void set_cmds(int index, const char* value, size_t size);
  std::string* add_cmds();
  void add_cmds(const std::string& value);
  void add_cmds(std::string&& value);
  void add_cmds(const char* value);
  void add_cmds(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& cmds() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_cmds();
  private:
  const std::string& _internal_cmds(int index) const;
  std::string* _internal_add_cmds();
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.ServiceCmd)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> cmds_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class ServiceHttpRequest_KvmapEntry_DoNotUse : public ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<ServiceHttpRequest_KvmapEntry_DoNotUse, 
    std::string, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::PROTOBUF_NAMESPACE_ID::internal::MapEntry<ServiceHttpRequest_KvmapEntry_DoNotUse, 
    std::string, std::string,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  ServiceHttpRequest_KvmapEntry_DoNotUse();
  ServiceHttpRequest_KvmapEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  void MergeFrom(const ServiceHttpRequest_KvmapEntry_DoNotUse& other);
  static const ServiceHttpRequest_KvmapEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const ServiceHttpRequest_KvmapEntry_DoNotUse*>(&_ServiceHttpRequest_KvmapEntry_DoNotUse_default_instance_); }
  static bool ValidateKey(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "ServerMSG.ServiceHttpRequest.KvmapEntry.key");
 }
  static bool ValidateValue(std::string* s) {
    return ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::PARSE, "ServerMSG.ServiceHttpRequest.KvmapEntry.value");
 }
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& other) final;
  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[2];
  }

  public:
};

// -------------------------------------------------------------------

class ServiceHttpRequest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.ServiceHttpRequest) */ {
 public:
  ServiceHttpRequest();
  virtual ~ServiceHttpRequest();

  ServiceHttpRequest(const ServiceHttpRequest& from);
  ServiceHttpRequest(ServiceHttpRequest&& from) noexcept
    : ServiceHttpRequest() {
    *this = ::std::move(from);
  }

  inline ServiceHttpRequest& operator=(const ServiceHttpRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServiceHttpRequest& operator=(ServiceHttpRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ServiceHttpRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ServiceHttpRequest* internal_default_instance() {
    return reinterpret_cast<const ServiceHttpRequest*>(
               &_ServiceHttpRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ServiceHttpRequest& a, ServiceHttpRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ServiceHttpRequest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ServiceHttpRequest* New() const final {
    return CreateMaybeMessage<ServiceHttpRequest>(nullptr);
  }

  ServiceHttpRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ServiceHttpRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ServiceHttpRequest& from);
  void MergeFrom(const ServiceHttpRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServiceHttpRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.ServiceHttpRequest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kKvmapFieldNumber = 2,
    kUidFieldNumber = 1,
  };
  // map<string, string> kvmap = 2;
  int kvmap_size() const;
  private:
  int _internal_kvmap_size() const;
  public:
  void clear_kvmap();
  private:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
      _internal_kvmap() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
      _internal_mutable_kvmap();
  public:
  const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
      kvmap() const;
  ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
      mutable_kvmap();

  // uint64 uid = 1;
  void clear_uid();
  ::PROTOBUF_NAMESPACE_ID::uint64 uid() const;
  void set_uid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_uid() const;
  void _internal_set_uid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.ServiceHttpRequest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::MapField<
      ServiceHttpRequest_KvmapEntry_DoNotUse,
      std::string, std::string,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_STRING,
      0 > kvmap_;
  ::PROTOBUF_NAMESPACE_ID::uint64 uid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class ServiceHttpResponse :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.ServiceHttpResponse) */ {
 public:
  ServiceHttpResponse();
  virtual ~ServiceHttpResponse();

  ServiceHttpResponse(const ServiceHttpResponse& from);
  ServiceHttpResponse(ServiceHttpResponse&& from) noexcept
    : ServiceHttpResponse() {
    *this = ::std::move(from);
  }

  inline ServiceHttpResponse& operator=(const ServiceHttpResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServiceHttpResponse& operator=(ServiceHttpResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ServiceHttpResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ServiceHttpResponse* internal_default_instance() {
    return reinterpret_cast<const ServiceHttpResponse*>(
               &_ServiceHttpResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ServiceHttpResponse& a, ServiceHttpResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ServiceHttpResponse* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ServiceHttpResponse* New() const final {
    return CreateMaybeMessage<ServiceHttpResponse>(nullptr);
  }

  ServiceHttpResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ServiceHttpResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ServiceHttpResponse& from);
  void MergeFrom(const ServiceHttpResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServiceHttpResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.ServiceHttpResponse";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResponseReasonFieldNumber = 3,
    kResponseTxtFieldNumber = 4,
    kUidFieldNumber = 1,
    kResponseCodeFieldNumber = 2,
  };
  // string response_reason = 3;
  void clear_response_reason();
  const std::string& response_reason() const;
  void set_response_reason(const std::string& value);
  void set_response_reason(std::string&& value);
  void set_response_reason(const char* value);
  void set_response_reason(const char* value, size_t size);
  std::string* mutable_response_reason();
  std::string* release_response_reason();
  void set_allocated_response_reason(std::string* response_reason);
  private:
  const std::string& _internal_response_reason() const;
  void _internal_set_response_reason(const std::string& value);
  std::string* _internal_mutable_response_reason();
  public:

  // bytes response_txt = 4;
  void clear_response_txt();
  const std::string& response_txt() const;
  void set_response_txt(const std::string& value);
  void set_response_txt(std::string&& value);
  void set_response_txt(const char* value);
  void set_response_txt(const void* value, size_t size);
  std::string* mutable_response_txt();
  std::string* release_response_txt();
  void set_allocated_response_txt(std::string* response_txt);
  private:
  const std::string& _internal_response_txt() const;
  void _internal_set_response_txt(const std::string& value);
  std::string* _internal_mutable_response_txt();
  public:

  // uint64 uid = 1;
  void clear_uid();
  ::PROTOBUF_NAMESPACE_ID::uint64 uid() const;
  void set_uid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_uid() const;
  void _internal_set_uid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 response_code = 2;
  void clear_response_code();
  ::PROTOBUF_NAMESPACE_ID::int32 response_code() const;
  void set_response_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_response_code() const;
  void _internal_set_response_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.ServiceHttpResponse)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr response_reason_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr response_txt_;
  ::PROTOBUF_NAMESPACE_ID::uint64 uid_;
  ::PROTOBUF_NAMESPACE_ID::int32 response_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class MessageTransmit :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.MessageTransmit) */ {
 public:
  MessageTransmit();
  virtual ~MessageTransmit();

  MessageTransmit(const MessageTransmit& from);
  MessageTransmit(MessageTransmit&& from) noexcept
    : MessageTransmit() {
    *this = ::std::move(from);
  }

  inline MessageTransmit& operator=(const MessageTransmit& from) {
    CopyFrom(from);
    return *this;
  }
  inline MessageTransmit& operator=(MessageTransmit&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MessageTransmit& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MessageTransmit* internal_default_instance() {
    return reinterpret_cast<const MessageTransmit*>(
               &_MessageTransmit_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(MessageTransmit& a, MessageTransmit& b) {
    a.Swap(&b);
  }
  inline void Swap(MessageTransmit* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MessageTransmit* New() const final {
    return CreateMaybeMessage<MessageTransmit>(nullptr);
  }

  MessageTransmit* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MessageTransmit>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MessageTransmit& from);
  void MergeFrom(const MessageTransmit& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MessageTransmit* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.MessageTransmit";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRawMessageHeadFieldNumber = 3,
    kRawMessageFieldNumber = 4,
  };
  // bytes raw_message_head = 3;
  void clear_raw_message_head();
  const std::string& raw_message_head() const;
  void set_raw_message_head(const std::string& value);
  void set_raw_message_head(std::string&& value);
  void set_raw_message_head(const char* value);
  void set_raw_message_head(const void* value, size_t size);
  std::string* mutable_raw_message_head();
  std::string* release_raw_message_head();
  void set_allocated_raw_message_head(std::string* raw_message_head);
  private:
  const std::string& _internal_raw_message_head() const;
  void _internal_set_raw_message_head(const std::string& value);
  std::string* _internal_mutable_raw_message_head();
  public:

  // bytes raw_message = 4;
  void clear_raw_message();
  const std::string& raw_message() const;
  void set_raw_message(const std::string& value);
  void set_raw_message(std::string&& value);
  void set_raw_message(const char* value);
  void set_raw_message(const void* value, size_t size);
  std::string* mutable_raw_message();
  std::string* release_raw_message();
  void set_allocated_raw_message(std::string* raw_message);
  private:
  const std::string& _internal_raw_message() const;
  void _internal_set_raw_message(const std::string& value);
  std::string* _internal_mutable_raw_message();
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.MessageTransmit)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr raw_message_head_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr raw_message_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class ServiceReady :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.ServiceReady) */ {
 public:
  ServiceReady();
  virtual ~ServiceReady();

  ServiceReady(const ServiceReady& from);
  ServiceReady(ServiceReady&& from) noexcept
    : ServiceReady() {
    *this = ::std::move(from);
  }

  inline ServiceReady& operator=(const ServiceReady& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServiceReady& operator=(ServiceReady&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ServiceReady& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ServiceReady* internal_default_instance() {
    return reinterpret_cast<const ServiceReady*>(
               &_ServiceReady_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(ServiceReady& a, ServiceReady& b) {
    a.Swap(&b);
  }
  inline void Swap(ServiceReady* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ServiceReady* New() const final {
    return CreateMaybeMessage<ServiceReady>(nullptr);
  }

  ServiceReady* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ServiceReady>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ServiceReady& from);
  void MergeFrom(const ServiceReady& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServiceReady* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.ServiceReady";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kServerportFieldNumber = 1,
    kReadyFieldNumber = 2,
  };
  // uint32 serverport = 1;
  void clear_serverport();
  ::PROTOBUF_NAMESPACE_ID::uint32 serverport() const;
  void set_serverport(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_serverport() const;
  void _internal_set_serverport(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // bool ready = 2;
  void clear_ready();
  bool ready() const;
  void set_ready(bool value);
  private:
  bool _internal_ready() const;
  void _internal_set_ready(bool value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.ServiceReady)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 serverport_;
  bool ready_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class ServiceRegister :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.ServiceRegister) */ {
 public:
  ServiceRegister();
  virtual ~ServiceRegister();

  ServiceRegister(const ServiceRegister& from);
  ServiceRegister(ServiceRegister&& from) noexcept
    : ServiceRegister() {
    *this = ::std::move(from);
  }

  inline ServiceRegister& operator=(const ServiceRegister& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServiceRegister& operator=(ServiceRegister&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ServiceRegister& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ServiceRegister* internal_default_instance() {
    return reinterpret_cast<const ServiceRegister*>(
               &_ServiceRegister_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(ServiceRegister& a, ServiceRegister& b) {
    a.Swap(&b);
  }
  inline void Swap(ServiceRegister* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ServiceRegister* New() const final {
    return CreateMaybeMessage<ServiceRegister>(nullptr);
  }

  ServiceRegister* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ServiceRegister>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ServiceRegister& from);
  void MergeFrom(const ServiceRegister& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServiceRegister* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.ServiceRegister";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUpdateTimeFieldNumber = 2,
    kServerportFieldNumber = 1,
  };
  // uint64 update_time = 2;
  void clear_update_time();
  ::PROTOBUF_NAMESPACE_ID::uint64 update_time() const;
  void set_update_time(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_update_time() const;
  void _internal_set_update_time(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 serverport = 1;
  void clear_serverport();
  ::PROTOBUF_NAMESPACE_ID::uint32 serverport() const;
  void set_serverport(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_serverport() const;
  void _internal_set_serverport(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.ServiceRegister)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 update_time_;
  ::PROTOBUF_NAMESPACE_ID::uint32 serverport_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class SocketConnect :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.SocketConnect) */ {
 public:
  SocketConnect();
  virtual ~SocketConnect();

  SocketConnect(const SocketConnect& from);
  SocketConnect(SocketConnect&& from) noexcept
    : SocketConnect() {
    *this = ::std::move(from);
  }

  inline SocketConnect& operator=(const SocketConnect& from) {
    CopyFrom(from);
    return *this;
  }
  inline SocketConnect& operator=(SocketConnect&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SocketConnect& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SocketConnect* internal_default_instance() {
    return reinterpret_cast<const SocketConnect*>(
               &_SocketConnect_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(SocketConnect& a, SocketConnect& b) {
    a.Swap(&b);
  }
  inline void Swap(SocketConnect* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SocketConnect* New() const final {
    return CreateMaybeMessage<SocketConnect>(nullptr);
  }

  SocketConnect* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SocketConnect>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SocketConnect& from);
  void MergeFrom(const SocketConnect& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SocketConnect* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.SocketConnect";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVsFieldNumber = 1,
  };
  // uint64 vs = 1;
  void clear_vs();
  ::PROTOBUF_NAMESPACE_ID::uint64 vs() const;
  void set_vs(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_vs() const;
  void _internal_set_vs(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.SocketConnect)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 vs_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class SocketClose :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.SocketClose) */ {
 public:
  SocketClose();
  virtual ~SocketClose();

  SocketClose(const SocketClose& from);
  SocketClose(SocketClose&& from) noexcept
    : SocketClose() {
    *this = ::std::move(from);
  }

  inline SocketClose& operator=(const SocketClose& from) {
    CopyFrom(from);
    return *this;
  }
  inline SocketClose& operator=(SocketClose&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SocketClose& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SocketClose* internal_default_instance() {
    return reinterpret_cast<const SocketClose*>(
               &_SocketClose_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(SocketClose& a, SocketClose& b) {
    a.Swap(&b);
  }
  inline void Swap(SocketClose* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SocketClose* New() const final {
    return CreateMaybeMessage<SocketClose>(nullptr);
  }

  SocketClose* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SocketClose>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SocketClose& from);
  void MergeFrom(const SocketClose& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SocketClose* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.SocketClose";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVsFieldNumber = 1,
  };
  // uint64 vs = 1;
  void clear_vs();
  ::PROTOBUF_NAMESPACE_ID::uint64 vs() const;
  void set_vs(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_vs() const;
  void _internal_set_vs(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.SocketClose)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 vs_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class SocketChangeDest :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.SocketChangeDest) */ {
 public:
  SocketChangeDest();
  virtual ~SocketChangeDest();

  SocketChangeDest(const SocketChangeDest& from);
  SocketChangeDest(SocketChangeDest&& from) noexcept
    : SocketChangeDest() {
    *this = ::std::move(from);
  }

  inline SocketChangeDest& operator=(const SocketChangeDest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SocketChangeDest& operator=(SocketChangeDest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SocketChangeDest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SocketChangeDest* internal_default_instance() {
    return reinterpret_cast<const SocketChangeDest*>(
               &_SocketChangeDest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(SocketChangeDest& a, SocketChangeDest& b) {
    a.Swap(&b);
  }
  inline void Swap(SocketChangeDest* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SocketChangeDest* New() const final {
    return CreateMaybeMessage<SocketChangeDest>(nullptr);
  }

  SocketChangeDest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SocketChangeDest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SocketChangeDest& from);
  void MergeFrom(const SocketChangeDest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SocketChangeDest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.SocketChangeDest";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVsFieldNumber = 1,
    kDestportFieldNumber = 2,
  };
  // uint64 vs = 1;
  void clear_vs();
  ::PROTOBUF_NAMESPACE_ID::uint64 vs() const;
  void set_vs(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_vs() const;
  void _internal_set_vs(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 destport = 2;
  void clear_destport();
  ::PROTOBUF_NAMESPACE_ID::uint32 destport() const;
  void set_destport(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_destport() const;
  void _internal_set_destport(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.SocketChangeDest)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 vs_;
  ::PROTOBUF_NAMESPACE_ID::uint32 destport_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class SocketAuth :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.SocketAuth) */ {
 public:
  SocketAuth();
  virtual ~SocketAuth();

  SocketAuth(const SocketAuth& from);
  SocketAuth(SocketAuth&& from) noexcept
    : SocketAuth() {
    *this = ::std::move(from);
  }

  inline SocketAuth& operator=(const SocketAuth& from) {
    CopyFrom(from);
    return *this;
  }
  inline SocketAuth& operator=(SocketAuth&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SocketAuth& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SocketAuth* internal_default_instance() {
    return reinterpret_cast<const SocketAuth*>(
               &_SocketAuth_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(SocketAuth& a, SocketAuth& b) {
    a.Swap(&b);
  }
  inline void Swap(SocketAuth* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SocketAuth* New() const final {
    return CreateMaybeMessage<SocketAuth>(nullptr);
  }

  SocketAuth* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SocketAuth>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SocketAuth& from);
  void MergeFrom(const SocketAuth& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SocketAuth* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.SocketAuth";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOpenIdFieldNumber = 2,
    kVsFieldNumber = 1,
  };
  // bytes open_id = 2;
  void clear_open_id();
  const std::string& open_id() const;
  void set_open_id(const std::string& value);
  void set_open_id(std::string&& value);
  void set_open_id(const char* value);
  void set_open_id(const void* value, size_t size);
  std::string* mutable_open_id();
  std::string* release_open_id();
  void set_allocated_open_id(std::string* open_id);
  private:
  const std::string& _internal_open_id() const;
  void _internal_set_open_id(const std::string& value);
  std::string* _internal_mutable_open_id();
  public:

  // uint64 vs = 1;
  void clear_vs();
  ::PROTOBUF_NAMESPACE_ID::uint64 vs() const;
  void set_vs(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_vs() const;
  void _internal_set_vs(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.SocketAuth)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr open_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 vs_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class SocketLogin :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.SocketLogin) */ {
 public:
  SocketLogin();
  virtual ~SocketLogin();

  SocketLogin(const SocketLogin& from);
  SocketLogin(SocketLogin&& from) noexcept
    : SocketLogin() {
    *this = ::std::move(from);
  }

  inline SocketLogin& operator=(const SocketLogin& from) {
    CopyFrom(from);
    return *this;
  }
  inline SocketLogin& operator=(SocketLogin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SocketLogin& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SocketLogin* internal_default_instance() {
    return reinterpret_cast<const SocketLogin*>(
               &_SocketLogin_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(SocketLogin& a, SocketLogin& b) {
    a.Swap(&b);
  }
  inline void Swap(SocketLogin* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SocketLogin* New() const final {
    return CreateMaybeMessage<SocketLogin>(nullptr);
  }

  SocketLogin* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SocketLogin>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SocketLogin& from);
  void MergeFrom(const SocketLogin& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SocketLogin* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.SocketLogin";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOpenIdFieldNumber = 2,
    kVsFieldNumber = 1,
  };
  // bytes open_id = 2;
  void clear_open_id();
  const std::string& open_id() const;
  void set_open_id(const std::string& value);
  void set_open_id(std::string&& value);
  void set_open_id(const char* value);
  void set_open_id(const void* value, size_t size);
  std::string* mutable_open_id();
  std::string* release_open_id();
  void set_allocated_open_id(std::string* open_id);
  private:
  const std::string& _internal_open_id() const;
  void _internal_set_open_id(const std::string& value);
  std::string* _internal_mutable_open_id();
  public:

  // uint64 vs = 1;
  void clear_vs();
  ::PROTOBUF_NAMESPACE_ID::uint64 vs() const;
  void set_vs(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_vs() const;
  void _internal_set_vs(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.SocketLogin)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr open_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 vs_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class SocketStartAccept :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.SocketStartAccept) */ {
 public:
  SocketStartAccept();
  virtual ~SocketStartAccept();

  SocketStartAccept(const SocketStartAccept& from);
  SocketStartAccept(SocketStartAccept&& from) noexcept
    : SocketStartAccept() {
    *this = ::std::move(from);
  }

  inline SocketStartAccept& operator=(const SocketStartAccept& from) {
    CopyFrom(from);
    return *this;
  }
  inline SocketStartAccept& operator=(SocketStartAccept&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SocketStartAccept& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SocketStartAccept* internal_default_instance() {
    return reinterpret_cast<const SocketStartAccept*>(
               &_SocketStartAccept_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(SocketStartAccept& a, SocketStartAccept& b) {
    a.Swap(&b);
  }
  inline void Swap(SocketStartAccept* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SocketStartAccept* New() const final {
    return CreateMaybeMessage<SocketStartAccept>(nullptr);
  }

  SocketStartAccept* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SocketStartAccept>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SocketStartAccept& from);
  void MergeFrom(const SocketStartAccept& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SocketStartAccept* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.SocketStartAccept";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ServerMSG.SocketStartAccept)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class SocketStopAccept :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.SocketStopAccept) */ {
 public:
  SocketStopAccept();
  virtual ~SocketStopAccept();

  SocketStopAccept(const SocketStopAccept& from);
  SocketStopAccept(SocketStopAccept&& from) noexcept
    : SocketStopAccept() {
    *this = ::std::move(from);
  }

  inline SocketStopAccept& operator=(const SocketStopAccept& from) {
    CopyFrom(from);
    return *this;
  }
  inline SocketStopAccept& operator=(SocketStopAccept&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SocketStopAccept& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SocketStopAccept* internal_default_instance() {
    return reinterpret_cast<const SocketStopAccept*>(
               &_SocketStopAccept_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(SocketStopAccept& a, SocketStopAccept& b) {
    a.Swap(&b);
  }
  inline void Swap(SocketStopAccept* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SocketStopAccept* New() const final {
    return CreateMaybeMessage<SocketStopAccept>(nullptr);
  }

  SocketStopAccept* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SocketStopAccept>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SocketStopAccept& from);
  void MergeFrom(const SocketStopAccept& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SocketStopAccept* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.SocketStopAccept";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ServerMSG.SocketStopAccept)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class PlayerEnterZone :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.PlayerEnterZone) */ {
 public:
  PlayerEnterZone();
  virtual ~PlayerEnterZone();

  PlayerEnterZone(const PlayerEnterZone& from);
  PlayerEnterZone(PlayerEnterZone&& from) noexcept
    : PlayerEnterZone() {
    *this = ::std::move(from);
  }

  inline PlayerEnterZone& operator=(const PlayerEnterZone& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayerEnterZone& operator=(PlayerEnterZone&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PlayerEnterZone& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerEnterZone* internal_default_instance() {
    return reinterpret_cast<const PlayerEnterZone*>(
               &_PlayerEnterZone_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(PlayerEnterZone& a, PlayerEnterZone& b) {
    a.Swap(&b);
  }
  inline void Swap(PlayerEnterZone* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PlayerEnterZone* New() const final {
    return CreateMaybeMessage<PlayerEnterZone>(nullptr);
  }

  PlayerEnterZone* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PlayerEnterZone>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PlayerEnterZone& from);
  void MergeFrom(const PlayerEnterZone& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerEnterZone* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.PlayerEnterZone";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdplayerFieldNumber = 1,
    kSocketFieldNumber = 2,
    kTargetSceneIdxFieldNumber = 4,
    kPosxFieldNumber = 5,
    kPosyFieldNumber = 6,
    kFaceFieldNumber = 7,
  };
  // uint64 idplayer = 1;
  void clear_idplayer();
  ::PROTOBUF_NAMESPACE_ID::uint64 idplayer() const;
  void set_idplayer(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_idplayer() const;
  void _internal_set_idplayer(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 socket = 2;
  void clear_socket();
  ::PROTOBUF_NAMESPACE_ID::uint64 socket() const;
  void set_socket(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_socket() const;
  void _internal_set_socket(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 target_scene_idx = 4;
  void clear_target_scene_idx();
  ::PROTOBUF_NAMESPACE_ID::uint64 target_scene_idx() const;
  void set_target_scene_idx(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_target_scene_idx() const;
  void _internal_set_target_scene_idx(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // float posx = 5;
  void clear_posx();
  float posx() const;
  void set_posx(float value);
  private:
  float _internal_posx() const;
  void _internal_set_posx(float value);
  public:

  // float posy = 6;
  void clear_posy();
  float posy() const;
  void set_posy(float value);
  private:
  float _internal_posy() const;
  void _internal_set_posy(float value);
  public:

  // float face = 7;
  void clear_face();
  float face() const;
  void set_face(float value);
  private:
  float _internal_face() const;
  void _internal_set_face(float value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.PlayerEnterZone)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 idplayer_;
  ::PROTOBUF_NAMESPACE_ID::uint64 socket_;
  ::PROTOBUF_NAMESPACE_ID::uint64 target_scene_idx_;
  float posx_;
  float posy_;
  float face_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class PlayerChangeZone :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.PlayerChangeZone) */ {
 public:
  PlayerChangeZone();
  virtual ~PlayerChangeZone();

  PlayerChangeZone(const PlayerChangeZone& from);
  PlayerChangeZone(PlayerChangeZone&& from) noexcept
    : PlayerChangeZone() {
    *this = ::std::move(from);
  }

  inline PlayerChangeZone& operator=(const PlayerChangeZone& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayerChangeZone& operator=(PlayerChangeZone&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PlayerChangeZone& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerChangeZone* internal_default_instance() {
    return reinterpret_cast<const PlayerChangeZone*>(
               &_PlayerChangeZone_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(PlayerChangeZone& a, PlayerChangeZone& b) {
    a.Swap(&b);
  }
  inline void Swap(PlayerChangeZone* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PlayerChangeZone* New() const final {
    return CreateMaybeMessage<PlayerChangeZone>(nullptr);
  }

  PlayerChangeZone* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PlayerChangeZone>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PlayerChangeZone& from);
  void MergeFrom(const PlayerChangeZone& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerChangeZone* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.PlayerChangeZone";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdplayerFieldNumber = 1,
    kSocketFieldNumber = 2,
    kTargetSceneFieldNumber = 4,
    kIdzoneFieldNumber = 3,
    kPosxFieldNumber = 6,
    kPosyFieldNumber = 7,
    kRangeFieldNumber = 8,
    kFaceFieldNumber = 9,
  };
  // uint64 idplayer = 1;
  void clear_idplayer();
  ::PROTOBUF_NAMESPACE_ID::uint64 idplayer() const;
  void set_idplayer(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_idplayer() const;
  void _internal_set_idplayer(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 socket = 2;
  void clear_socket();
  ::PROTOBUF_NAMESPACE_ID::uint64 socket() const;
  void set_socket(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_socket() const;
  void _internal_set_socket(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 target_scene = 4;
  void clear_target_scene();
  ::PROTOBUF_NAMESPACE_ID::uint64 target_scene() const;
  void set_target_scene(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_target_scene() const;
  void _internal_set_target_scene(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 idzone = 3;
  void clear_idzone();
  ::PROTOBUF_NAMESPACE_ID::uint32 idzone() const;
  void set_idzone(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_idzone() const;
  void _internal_set_idzone(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // float posx = 6;
  void clear_posx();
  float posx() const;
  void set_posx(float value);
  private:
  float _internal_posx() const;
  void _internal_set_posx(float value);
  public:

  // float posy = 7;
  void clear_posy();
  float posy() const;
  void set_posy(float value);
  private:
  float _internal_posy() const;
  void _internal_set_posy(float value);
  public:

  // float range = 8;
  void clear_range();
  float range() const;
  void set_range(float value);
  private:
  float _internal_range() const;
  void _internal_set_range(float value);
  public:

  // float face = 9;
  void clear_face();
  float face() const;
  void set_face(float value);
  private:
  float _internal_face() const;
  void _internal_set_face(float value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.PlayerChangeZone)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 idplayer_;
  ::PROTOBUF_NAMESPACE_ID::uint64 socket_;
  ::PROTOBUF_NAMESPACE_ID::uint64 target_scene_;
  ::PROTOBUF_NAMESPACE_ID::uint32 idzone_;
  float posx_;
  float posy_;
  float range_;
  float face_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class PlayerChangeZone_Data :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.PlayerChangeZone_Data) */ {
 public:
  PlayerChangeZone_Data();
  virtual ~PlayerChangeZone_Data();

  PlayerChangeZone_Data(const PlayerChangeZone_Data& from);
  PlayerChangeZone_Data(PlayerChangeZone_Data&& from) noexcept
    : PlayerChangeZone_Data() {
    *this = ::std::move(from);
  }

  inline PlayerChangeZone_Data& operator=(const PlayerChangeZone_Data& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayerChangeZone_Data& operator=(PlayerChangeZone_Data&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PlayerChangeZone_Data& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerChangeZone_Data* internal_default_instance() {
    return reinterpret_cast<const PlayerChangeZone_Data*>(
               &_PlayerChangeZone_Data_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(PlayerChangeZone_Data& a, PlayerChangeZone_Data& b) {
    a.Swap(&b);
  }
  inline void Swap(PlayerChangeZone_Data* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PlayerChangeZone_Data* New() const final {
    return CreateMaybeMessage<PlayerChangeZone_Data>(nullptr);
  }

  PlayerChangeZone_Data* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PlayerChangeZone_Data>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PlayerChangeZone_Data& from);
  void MergeFrom(const PlayerChangeZone_Data& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerChangeZone_Data* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.PlayerChangeZone_Data";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdplayerFieldNumber = 1,
    kSocketFieldNumber = 2,
  };
  // uint64 idplayer = 1;
  void clear_idplayer();
  ::PROTOBUF_NAMESPACE_ID::uint64 idplayer() const;
  void set_idplayer(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_idplayer() const;
  void _internal_set_idplayer(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 socket = 2;
  void clear_socket();
  ::PROTOBUF_NAMESPACE_ID::uint64 socket() const;
  void set_socket(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_socket() const;
  void _internal_set_socket(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.PlayerChangeZone_Data)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 idplayer_;
  ::PROTOBUF_NAMESPACE_ID::uint64 socket_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class PlayerLogout :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.PlayerLogout) */ {
 public:
  PlayerLogout();
  virtual ~PlayerLogout();

  PlayerLogout(const PlayerLogout& from);
  PlayerLogout(PlayerLogout&& from) noexcept
    : PlayerLogout() {
    *this = ::std::move(from);
  }

  inline PlayerLogout& operator=(const PlayerLogout& from) {
    CopyFrom(from);
    return *this;
  }
  inline PlayerLogout& operator=(PlayerLogout&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PlayerLogout& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlayerLogout* internal_default_instance() {
    return reinterpret_cast<const PlayerLogout*>(
               &_PlayerLogout_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(PlayerLogout& a, PlayerLogout& b) {
    a.Swap(&b);
  }
  inline void Swap(PlayerLogout* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PlayerLogout* New() const final {
    return CreateMaybeMessage<PlayerLogout>(nullptr);
  }

  PlayerLogout* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PlayerLogout>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PlayerLogout& from);
  void MergeFrom(const PlayerLogout& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PlayerLogout* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.PlayerLogout";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdplayerFieldNumber = 1,
    kSocketFieldNumber = 2,
  };
  // uint64 idplayer = 1;
  void clear_idplayer();
  ::PROTOBUF_NAMESPACE_ID::uint64 idplayer() const;
  void set_idplayer(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_idplayer() const;
  void _internal_set_idplayer(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 socket = 2;
  void clear_socket();
  ::PROTOBUF_NAMESPACE_ID::uint64 socket() const;
  void set_socket(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_socket() const;
  void _internal_set_socket(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.PlayerLogout)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 idplayer_;
  ::PROTOBUF_NAMESPACE_ID::uint64 socket_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class SystemVarChange :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.SystemVarChange) */ {
 public:
  SystemVarChange();
  virtual ~SystemVarChange();

  SystemVarChange(const SystemVarChange& from);
  SystemVarChange(SystemVarChange&& from) noexcept
    : SystemVarChange() {
    *this = ::std::move(from);
  }

  inline SystemVarChange& operator=(const SystemVarChange& from) {
    CopyFrom(from);
    return *this;
  }
  inline SystemVarChange& operator=(SystemVarChange&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SystemVarChange& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SystemVarChange* internal_default_instance() {
    return reinterpret_cast<const SystemVarChange*>(
               &_SystemVarChange_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(SystemVarChange& a, SystemVarChange& b) {
    a.Swap(&b);
  }
  inline void Swap(SystemVarChange* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SystemVarChange* New() const final {
    return CreateMaybeMessage<SystemVarChange>(nullptr);
  }

  SystemVarChange* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SystemVarChange>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SystemVarChange& from);
  void MergeFrom(const SystemVarChange& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SystemVarChange* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.SystemVarChange";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef SystemVarChange_SystemVarChangeType SystemVarChangeType;
  static constexpr SystemVarChangeType SVCT_CREATE =
    SystemVarChange_SystemVarChangeType_SVCT_CREATE;
  static constexpr SystemVarChangeType SVCT_SET_DATA =
    SystemVarChange_SystemVarChangeType_SVCT_SET_DATA;
  static constexpr SystemVarChangeType SVCT_ADD_DATA =
    SystemVarChange_SystemVarChangeType_SVCT_ADD_DATA;
  static constexpr SystemVarChangeType SVCT_SET_STR =
    SystemVarChange_SystemVarChangeType_SVCT_SET_STR;
  static inline bool SystemVarChangeType_IsValid(int value) {
    return SystemVarChange_SystemVarChangeType_IsValid(value);
  }
  static constexpr SystemVarChangeType SystemVarChangeType_MIN =
    SystemVarChange_SystemVarChangeType_SystemVarChangeType_MIN;
  static constexpr SystemVarChangeType SystemVarChangeType_MAX =
    SystemVarChange_SystemVarChangeType_SystemVarChangeType_MAX;
  static constexpr int SystemVarChangeType_ARRAYSIZE =
    SystemVarChange_SystemVarChangeType_SystemVarChangeType_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  SystemVarChangeType_descriptor() {
    return SystemVarChange_SystemVarChangeType_descriptor();
  }
  template<typename T>
  static inline const std::string& SystemVarChangeType_Name(T enum_t_value) {
    static_assert(::std::is_same<T, SystemVarChangeType>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function SystemVarChangeType_Name.");
    return SystemVarChange_SystemVarChangeType_Name(enum_t_value);
  }
  static inline bool SystemVarChangeType_Parse(const std::string& name,
      SystemVarChangeType* value) {
    return SystemVarChange_SystemVarChangeType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kStrFieldNumber = 4,
    kKeyidxFieldNumber = 1,
    kIdxFieldNumber = 2,
    kValFieldNumber = 3,
    kTypeFieldNumber = 5,
  };
  // string str = 4;
  void clear_str();
  const std::string& str() const;
  void set_str(const std::string& value);
  void set_str(std::string&& value);
  void set_str(const char* value);
  void set_str(const char* value, size_t size);
  std::string* mutable_str();
  std::string* release_str();
  void set_allocated_str(std::string* str);
  private:
  const std::string& _internal_str() const;
  void _internal_set_str(const std::string& value);
  std::string* _internal_mutable_str();
  public:

  // uint32 keyidx = 1;
  void clear_keyidx();
  ::PROTOBUF_NAMESPACE_ID::uint32 keyidx() const;
  void set_keyidx(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_keyidx() const;
  void _internal_set_keyidx(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 idx = 2;
  void clear_idx();
  ::PROTOBUF_NAMESPACE_ID::uint32 idx() const;
  void set_idx(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_idx() const;
  void _internal_set_idx(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 val = 3;
  void clear_val();
  ::PROTOBUF_NAMESPACE_ID::uint32 val() const;
  void set_val(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_val() const;
  void _internal_set_val(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // .ServerMSG.SystemVarChange.SystemVarChangeType type = 5;
  void clear_type();
  ::ServerMSG::SystemVarChange_SystemVarChangeType type() const;
  void set_type(::ServerMSG::SystemVarChange_SystemVarChangeType value);
  private:
  ::ServerMSG::SystemVarChange_SystemVarChangeType _internal_type() const;
  void _internal_set_type(::ServerMSG::SystemVarChange_SystemVarChangeType value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.SystemVarChange)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr str_;
  ::PROTOBUF_NAMESPACE_ID::uint32 keyidx_;
  ::PROTOBUF_NAMESPACE_ID::uint32 idx_;
  ::PROTOBUF_NAMESPACE_ID::uint32 val_;
  int type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class SceneCreate :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.SceneCreate) */ {
 public:
  SceneCreate();
  virtual ~SceneCreate();

  SceneCreate(const SceneCreate& from);
  SceneCreate(SceneCreate&& from) noexcept
    : SceneCreate() {
    *this = ::std::move(from);
  }

  inline SceneCreate& operator=(const SceneCreate& from) {
    CopyFrom(from);
    return *this;
  }
  inline SceneCreate& operator=(SceneCreate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SceneCreate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SceneCreate* internal_default_instance() {
    return reinterpret_cast<const SceneCreate*>(
               &_SceneCreate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(SceneCreate& a, SceneCreate& b) {
    a.Swap(&b);
  }
  inline void Swap(SceneCreate* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SceneCreate* New() const final {
    return CreateMaybeMessage<SceneCreate>(nullptr);
  }

  SceneCreate* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SceneCreate>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SceneCreate& from);
  void MergeFrom(const SceneCreate& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SceneCreate* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.SceneCreate";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSceneIdFieldNumber = 1,
  };
  // uint64 scene_id = 1;
  void clear_scene_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 scene_id() const;
  void set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_scene_id() const;
  void _internal_set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.SceneCreate)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 scene_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class PhaseCreate :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.PhaseCreate) */ {
 public:
  PhaseCreate();
  virtual ~PhaseCreate();

  PhaseCreate(const PhaseCreate& from);
  PhaseCreate(PhaseCreate&& from) noexcept
    : PhaseCreate() {
    *this = ::std::move(from);
  }

  inline PhaseCreate& operator=(const PhaseCreate& from) {
    CopyFrom(from);
    return *this;
  }
  inline PhaseCreate& operator=(PhaseCreate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PhaseCreate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PhaseCreate* internal_default_instance() {
    return reinterpret_cast<const PhaseCreate*>(
               &_PhaseCreate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(PhaseCreate& a, PhaseCreate& b) {
    a.Swap(&b);
  }
  inline void Swap(PhaseCreate* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PhaseCreate* New() const final {
    return CreateMaybeMessage<PhaseCreate>(nullptr);
  }

  PhaseCreate* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PhaseCreate>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PhaseCreate& from);
  void MergeFrom(const PhaseCreate& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PhaseCreate* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.PhaseCreate";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSceneIdFieldNumber = 1,
    kPhaseIdFieldNumber = 2,
  };
  // uint64 scene_id = 1;
  void clear_scene_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 scene_id() const;
  void set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_scene_id() const;
  void _internal_set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 phase_id = 2;
  void clear_phase_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 phase_id() const;
  void set_phase_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_phase_id() const;
  void _internal_set_phase_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.PhaseCreate)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 scene_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 phase_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class PhaseDestory :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.PhaseDestory) */ {
 public:
  PhaseDestory();
  virtual ~PhaseDestory();

  PhaseDestory(const PhaseDestory& from);
  PhaseDestory(PhaseDestory&& from) noexcept
    : PhaseDestory() {
    *this = ::std::move(from);
  }

  inline PhaseDestory& operator=(const PhaseDestory& from) {
    CopyFrom(from);
    return *this;
  }
  inline PhaseDestory& operator=(PhaseDestory&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PhaseDestory& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PhaseDestory* internal_default_instance() {
    return reinterpret_cast<const PhaseDestory*>(
               &_PhaseDestory_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(PhaseDestory& a, PhaseDestory& b) {
    a.Swap(&b);
  }
  inline void Swap(PhaseDestory* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PhaseDestory* New() const final {
    return CreateMaybeMessage<PhaseDestory>(nullptr);
  }

  PhaseDestory* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PhaseDestory>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PhaseDestory& from);
  void MergeFrom(const PhaseDestory& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PhaseDestory* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.PhaseDestory";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSceneIdFieldNumber = 1,
    kPhaseIdFieldNumber = 2,
  };
  // uint64 scene_id = 1;
  void clear_scene_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 scene_id() const;
  void set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_scene_id() const;
  void _internal_set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 phase_id = 2;
  void clear_phase_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 phase_id() const;
  void set_phase_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_phase_id() const;
  void _internal_set_phase_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.PhaseDestory)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 scene_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 phase_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class MonsterGen :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.MonsterGen) */ {
 public:
  MonsterGen();
  virtual ~MonsterGen();

  MonsterGen(const MonsterGen& from);
  MonsterGen(MonsterGen&& from) noexcept
    : MonsterGen() {
    *this = ::std::move(from);
  }

  inline MonsterGen& operator=(const MonsterGen& from) {
    CopyFrom(from);
    return *this;
  }
  inline MonsterGen& operator=(MonsterGen&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MonsterGen& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MonsterGen* internal_default_instance() {
    return reinterpret_cast<const MonsterGen*>(
               &_MonsterGen_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(MonsterGen& a, MonsterGen& b) {
    a.Swap(&b);
  }
  inline void Swap(MonsterGen* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MonsterGen* New() const final {
    return CreateMaybeMessage<MonsterGen>(nullptr);
  }

  MonsterGen* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MonsterGen>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MonsterGen& from);
  void MergeFrom(const MonsterGen& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MonsterGen* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.MonsterGen";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSceneIdFieldNumber = 1,
    kPhaseIdFieldNumber = 2,
    kGenIdFieldNumber = 3,
    kMonsterTypeFieldNumber = 4,
    kPosxFieldNumber = 5,
    kPosyFieldNumber = 6,
    kCampIdFieldNumber = 7,
    kMonsterIdFieldNumber = 8,
  };
  // uint64 scene_id = 1;
  void clear_scene_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 scene_id() const;
  void set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_scene_id() const;
  void _internal_set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 phase_id = 2;
  void clear_phase_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 phase_id() const;
  void set_phase_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_phase_id() const;
  void _internal_set_phase_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 gen_id = 3;
  void clear_gen_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 gen_id() const;
  void set_gen_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_gen_id() const;
  void _internal_set_gen_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 monster_type = 4;
  void clear_monster_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 monster_type() const;
  void set_monster_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_monster_type() const;
  void _internal_set_monster_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // float posx = 5;
  void clear_posx();
  float posx() const;
  void set_posx(float value);
  private:
  float _internal_posx() const;
  void _internal_set_posx(float value);
  public:

  // float posy = 6;
  void clear_posy();
  float posy() const;
  void set_posy(float value);
  private:
  float _internal_posy() const;
  void _internal_set_posy(float value);
  public:

  // uint32 camp_id = 7;
  void clear_camp_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 camp_id() const;
  void set_camp_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_camp_id() const;
  void _internal_set_camp_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 monster_id = 8;
  void clear_monster_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 monster_id() const;
  void set_monster_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_monster_id() const;
  void _internal_set_monster_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.MonsterGen)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 scene_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 phase_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 gen_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 monster_type_;
  float posx_;
  float posy_;
  ::PROTOBUF_NAMESPACE_ID::uint32 camp_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 monster_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class MonsterGenMulti :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.MonsterGenMulti) */ {
 public:
  MonsterGenMulti();
  virtual ~MonsterGenMulti();

  MonsterGenMulti(const MonsterGenMulti& from);
  MonsterGenMulti(MonsterGenMulti&& from) noexcept
    : MonsterGenMulti() {
    *this = ::std::move(from);
  }

  inline MonsterGenMulti& operator=(const MonsterGenMulti& from) {
    CopyFrom(from);
    return *this;
  }
  inline MonsterGenMulti& operator=(MonsterGenMulti&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MonsterGenMulti& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MonsterGenMulti* internal_default_instance() {
    return reinterpret_cast<const MonsterGenMulti*>(
               &_MonsterGenMulti_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(MonsterGenMulti& a, MonsterGenMulti& b) {
    a.Swap(&b);
  }
  inline void Swap(MonsterGenMulti* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MonsterGenMulti* New() const final {
    return CreateMaybeMessage<MonsterGenMulti>(nullptr);
  }

  MonsterGenMulti* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MonsterGenMulti>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MonsterGenMulti& from);
  void MergeFrom(const MonsterGenMulti& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MonsterGenMulti* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.MonsterGenMulti";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSceneIdFieldNumber = 1,
    kPhaseIdFieldNumber = 2,
    kGenIdFieldNumber = 3,
    kMonsterTypeFieldNumber = 4,
    kPosxFieldNumber = 5,
    kPosyFieldNumber = 6,
    kCampIdFieldNumber = 7,
    kMonsterIdFieldNumber = 8,
    kNumFieldNumber = 9,
    kRangeFieldNumber = 10,
  };
  // uint64 scene_id = 1;
  void clear_scene_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 scene_id() const;
  void set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_scene_id() const;
  void _internal_set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 phase_id = 2;
  void clear_phase_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 phase_id() const;
  void set_phase_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_phase_id() const;
  void _internal_set_phase_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 gen_id = 3;
  void clear_gen_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 gen_id() const;
  void set_gen_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_gen_id() const;
  void _internal_set_gen_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 monster_type = 4;
  void clear_monster_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 monster_type() const;
  void set_monster_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_monster_type() const;
  void _internal_set_monster_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // float posx = 5;
  void clear_posx();
  float posx() const;
  void set_posx(float value);
  private:
  float _internal_posx() const;
  void _internal_set_posx(float value);
  public:

  // float posy = 6;
  void clear_posy();
  float posy() const;
  void set_posy(float value);
  private:
  float _internal_posy() const;
  void _internal_set_posy(float value);
  public:

  // uint32 camp_id = 7;
  void clear_camp_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 camp_id() const;
  void set_camp_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_camp_id() const;
  void _internal_set_camp_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 monster_id = 8;
  void clear_monster_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 monster_id() const;
  void set_monster_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_monster_id() const;
  void _internal_set_monster_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 num = 9;
  void clear_num();
  ::PROTOBUF_NAMESPACE_ID::uint32 num() const;
  void set_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_num() const;
  void _internal_set_num(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // float range = 10;
  void clear_range();
  float range() const;
  void set_range(float value);
  private:
  float _internal_range() const;
  void _internal_set_range(float value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.MonsterGenMulti)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 scene_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 phase_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 gen_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 monster_type_;
  float posx_;
  float posy_;
  ::PROTOBUF_NAMESPACE_ID::uint32 camp_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 monster_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 num_;
  float range_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class MonsterDestory :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.MonsterDestory) */ {
 public:
  MonsterDestory();
  virtual ~MonsterDestory();

  MonsterDestory(const MonsterDestory& from);
  MonsterDestory(MonsterDestory&& from) noexcept
    : MonsterDestory() {
    *this = ::std::move(from);
  }

  inline MonsterDestory& operator=(const MonsterDestory& from) {
    CopyFrom(from);
    return *this;
  }
  inline MonsterDestory& operator=(MonsterDestory&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MonsterDestory& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MonsterDestory* internal_default_instance() {
    return reinterpret_cast<const MonsterDestory*>(
               &_MonsterDestory_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(MonsterDestory& a, MonsterDestory& b) {
    a.Swap(&b);
  }
  inline void Swap(MonsterDestory* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MonsterDestory* New() const final {
    return CreateMaybeMessage<MonsterDestory>(nullptr);
  }

  MonsterDestory* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MonsterDestory>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MonsterDestory& from);
  void MergeFrom(const MonsterDestory& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MonsterDestory* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.MonsterDestory";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMonsterIdFieldNumber = 1,
  };
  // repeated uint64 monster_id = 1;
  int monster_id_size() const;
  private:
  int _internal_monster_id_size() const;
  public:
  void clear_monster_id();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_monster_id(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_monster_id() const;
  void _internal_add_monster_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_monster_id();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 monster_id(int index) const;
  void set_monster_id(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_monster_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      monster_id() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_monster_id();

  // @@protoc_insertion_point(class_scope:ServerMSG.MonsterDestory)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > monster_id_;
  mutable std::atomic<int> _monster_id_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class MonsterGenOnce :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.MonsterGenOnce) */ {
 public:
  MonsterGenOnce();
  virtual ~MonsterGenOnce();

  MonsterGenOnce(const MonsterGenOnce& from);
  MonsterGenOnce(MonsterGenOnce&& from) noexcept
    : MonsterGenOnce() {
    *this = ::std::move(from);
  }

  inline MonsterGenOnce& operator=(const MonsterGenOnce& from) {
    CopyFrom(from);
    return *this;
  }
  inline MonsterGenOnce& operator=(MonsterGenOnce&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MonsterGenOnce& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MonsterGenOnce* internal_default_instance() {
    return reinterpret_cast<const MonsterGenOnce*>(
               &_MonsterGenOnce_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(MonsterGenOnce& a, MonsterGenOnce& b) {
    a.Swap(&b);
  }
  inline void Swap(MonsterGenOnce* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MonsterGenOnce* New() const final {
    return CreateMaybeMessage<MonsterGenOnce>(nullptr);
  }

  MonsterGenOnce* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MonsterGenOnce>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MonsterGenOnce& from);
  void MergeFrom(const MonsterGenOnce& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MonsterGenOnce* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.MonsterGenOnce";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSceneIdFieldNumber = 1,
    kPhaseIdFieldNumber = 3,
    kGenIdFieldNumber = 2,
  };
  // uint64 scene_id = 1;
  void clear_scene_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 scene_id() const;
  void set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_scene_id() const;
  void _internal_set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 phase_id = 3;
  void clear_phase_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 phase_id() const;
  void set_phase_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_phase_id() const;
  void _internal_set_phase_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 gen_id = 2;
  void clear_gen_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 gen_id() const;
  void set_gen_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_gen_id() const;
  void _internal_set_gen_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.MonsterGenOnce)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 scene_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 phase_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 gen_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class ActiveGen :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.ActiveGen) */ {
 public:
  ActiveGen();
  virtual ~ActiveGen();

  ActiveGen(const ActiveGen& from);
  ActiveGen(ActiveGen&& from) noexcept
    : ActiveGen() {
    *this = ::std::move(from);
  }

  inline ActiveGen& operator=(const ActiveGen& from) {
    CopyFrom(from);
    return *this;
  }
  inline ActiveGen& operator=(ActiveGen&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ActiveGen& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ActiveGen* internal_default_instance() {
    return reinterpret_cast<const ActiveGen*>(
               &_ActiveGen_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(ActiveGen& a, ActiveGen& b) {
    a.Swap(&b);
  }
  inline void Swap(ActiveGen* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ActiveGen* New() const final {
    return CreateMaybeMessage<ActiveGen>(nullptr);
  }

  ActiveGen* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ActiveGen>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ActiveGen& from);
  void MergeFrom(const ActiveGen& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActiveGen* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.ActiveGen";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSceneIdFieldNumber = 1,
    kGenIdFieldNumber = 2,
    kActiveFieldNumber = 3,
  };
  // uint64 scene_id = 1;
  void clear_scene_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 scene_id() const;
  void set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_scene_id() const;
  void _internal_set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 gen_id = 2;
  void clear_gen_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 gen_id() const;
  void set_gen_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_gen_id() const;
  void _internal_set_gen_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // bool active = 3;
  void clear_active();
  bool active() const;
  void set_active(bool value);
  private:
  bool _internal_active() const;
  void _internal_set_active(bool value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.ActiveGen)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 scene_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 gen_id_;
  bool active_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class KillGen :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.KillGen) */ {
 public:
  KillGen();
  virtual ~KillGen();

  KillGen(const KillGen& from);
  KillGen(KillGen&& from) noexcept
    : KillGen() {
    *this = ::std::move(from);
  }

  inline KillGen& operator=(const KillGen& from) {
    CopyFrom(from);
    return *this;
  }
  inline KillGen& operator=(KillGen&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const KillGen& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const KillGen* internal_default_instance() {
    return reinterpret_cast<const KillGen*>(
               &_KillGen_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(KillGen& a, KillGen& b) {
    a.Swap(&b);
  }
  inline void Swap(KillGen* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline KillGen* New() const final {
    return CreateMaybeMessage<KillGen>(nullptr);
  }

  KillGen* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<KillGen>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const KillGen& from);
  void MergeFrom(const KillGen& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(KillGen* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.KillGen";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSceneIdFieldNumber = 1,
    kGenIdFieldNumber = 2,
  };
  // uint64 scene_id = 1;
  void clear_scene_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 scene_id() const;
  void set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_scene_id() const;
  void _internal_set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 gen_id = 2;
  void clear_gen_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 gen_id() const;
  void set_gen_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_gen_id() const;
  void _internal_set_gen_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.KillGen)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 scene_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 gen_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class ActorCreate :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.ActorCreate) */ {
 public:
  ActorCreate();
  virtual ~ActorCreate();

  ActorCreate(const ActorCreate& from);
  ActorCreate(ActorCreate&& from) noexcept
    : ActorCreate() {
    *this = ::std::move(from);
  }

  inline ActorCreate& operator=(const ActorCreate& from) {
    CopyFrom(from);
    return *this;
  }
  inline ActorCreate& operator=(ActorCreate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ActorCreate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ActorCreate* internal_default_instance() {
    return reinterpret_cast<const ActorCreate*>(
               &_ActorCreate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(ActorCreate& a, ActorCreate& b) {
    a.Swap(&b);
  }
  inline void Swap(ActorCreate* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ActorCreate* New() const final {
    return CreateMaybeMessage<ActorCreate>(nullptr);
  }

  ActorCreate* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ActorCreate>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ActorCreate& from);
  void MergeFrom(const ActorCreate& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActorCreate* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.ActorCreate";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 4,
    kActorIdFieldNumber = 1,
    kSceneIdFieldNumber = 2,
    kActortypeFieldNumber = 5,
    kBaselookFieldNumber = 6,
    kProfFieldNumber = 7,
    kLevFieldNumber = 8,
    kCampidFieldNumber = 9,
    kHpFieldNumber = 10,
    kHpmaxFieldNumber = 11,
    kMpFieldNumber = 12,
    kMpmaxFieldNumber = 13,
    kMovespdFieldNumber = 14,
    kOwneridFieldNumber = 15,
    kPosxFieldNumber = 16,
    kPosyFieldNumber = 17,
    kFaceFieldNumber = 18,
    kMonsterGenIdFieldNumber = 20,
    kPhaseIdFieldNumber = 21,
  };
  // string name = 4;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // uint64 actor_id = 1;
  void clear_actor_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 actor_id() const;
  void set_actor_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_actor_id() const;
  void _internal_set_actor_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 scene_id = 2;
  void clear_scene_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 scene_id() const;
  void set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_scene_id() const;
  void _internal_set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 actortype = 5;
  void clear_actortype();
  ::PROTOBUF_NAMESPACE_ID::uint32 actortype() const;
  void set_actortype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_actortype() const;
  void _internal_set_actortype(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 baselook = 6;
  void clear_baselook();
  ::PROTOBUF_NAMESPACE_ID::uint32 baselook() const;
  void set_baselook(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_baselook() const;
  void _internal_set_baselook(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 prof = 7;
  void clear_prof();
  ::PROTOBUF_NAMESPACE_ID::uint32 prof() const;
  void set_prof(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_prof() const;
  void _internal_set_prof(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 lev = 8;
  void clear_lev();
  ::PROTOBUF_NAMESPACE_ID::uint32 lev() const;
  void set_lev(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_lev() const;
  void _internal_set_lev(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 campid = 9;
  void clear_campid();
  ::PROTOBUF_NAMESPACE_ID::uint32 campid() const;
  void set_campid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_campid() const;
  void _internal_set_campid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 hp = 10;
  void clear_hp();
  ::PROTOBUF_NAMESPACE_ID::uint32 hp() const;
  void set_hp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hp() const;
  void _internal_set_hp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 hpmax = 11;
  void clear_hpmax();
  ::PROTOBUF_NAMESPACE_ID::uint32 hpmax() const;
  void set_hpmax(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_hpmax() const;
  void _internal_set_hpmax(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 mp = 12;
  void clear_mp();
  ::PROTOBUF_NAMESPACE_ID::uint32 mp() const;
  void set_mp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_mp() const;
  void _internal_set_mp(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 mpmax = 13;
  void clear_mpmax();
  ::PROTOBUF_NAMESPACE_ID::uint32 mpmax() const;
  void set_mpmax(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_mpmax() const;
  void _internal_set_mpmax(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 movespd = 14;
  void clear_movespd();
  ::PROTOBUF_NAMESPACE_ID::uint32 movespd() const;
  void set_movespd(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_movespd() const;
  void _internal_set_movespd(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 ownerid = 15;
  void clear_ownerid();
  ::PROTOBUF_NAMESPACE_ID::uint64 ownerid() const;
  void set_ownerid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_ownerid() const;
  void _internal_set_ownerid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // float posx = 16;
  void clear_posx();
  float posx() const;
  void set_posx(float value);
  private:
  float _internal_posx() const;
  void _internal_set_posx(float value);
  public:

  // float posy = 17;
  void clear_posy();
  float posy() const;
  void set_posy(float value);
  private:
  float _internal_posy() const;
  void _internal_set_posy(float value);
  public:

  // float face = 18;
  void clear_face();
  float face() const;
  void set_face(float value);
  private:
  float _internal_face() const;
  void _internal_set_face(float value);
  public:

  // uint32 monster_gen_id = 20;
  void clear_monster_gen_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 monster_gen_id() const;
  void set_monster_gen_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_monster_gen_id() const;
  void _internal_set_monster_gen_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 phase_id = 21;
  void clear_phase_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 phase_id() const;
  void set_phase_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_phase_id() const;
  void _internal_set_phase_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.ActorCreate)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::uint64 actor_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 scene_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 actortype_;
  ::PROTOBUF_NAMESPACE_ID::uint32 baselook_;
  ::PROTOBUF_NAMESPACE_ID::uint32 prof_;
  ::PROTOBUF_NAMESPACE_ID::uint32 lev_;
  ::PROTOBUF_NAMESPACE_ID::uint32 campid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 hpmax_;
  ::PROTOBUF_NAMESPACE_ID::uint32 mp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 mpmax_;
  ::PROTOBUF_NAMESPACE_ID::uint32 movespd_;
  ::PROTOBUF_NAMESPACE_ID::uint64 ownerid_;
  float posx_;
  float posy_;
  float face_;
  ::PROTOBUF_NAMESPACE_ID::uint32 monster_gen_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 phase_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class ActorDestory :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.ActorDestory) */ {
 public:
  ActorDestory();
  virtual ~ActorDestory();

  ActorDestory(const ActorDestory& from);
  ActorDestory(ActorDestory&& from) noexcept
    : ActorDestory() {
    *this = ::std::move(from);
  }

  inline ActorDestory& operator=(const ActorDestory& from) {
    CopyFrom(from);
    return *this;
  }
  inline ActorDestory& operator=(ActorDestory&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ActorDestory& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ActorDestory* internal_default_instance() {
    return reinterpret_cast<const ActorDestory*>(
               &_ActorDestory_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(ActorDestory& a, ActorDestory& b) {
    a.Swap(&b);
  }
  inline void Swap(ActorDestory* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ActorDestory* New() const final {
    return CreateMaybeMessage<ActorDestory>(nullptr);
  }

  ActorDestory* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ActorDestory>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ActorDestory& from);
  void MergeFrom(const ActorDestory& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActorDestory* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.ActorDestory";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActorIdFieldNumber = 1,
    kDeadFieldNumber = 2,
  };
  // uint64 actor_id = 1;
  void clear_actor_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 actor_id() const;
  void set_actor_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_actor_id() const;
  void _internal_set_actor_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // bool dead = 2;
  void clear_dead();
  bool dead() const;
  void set_dead(bool value);
  private:
  bool _internal_dead() const;
  void _internal_set_dead(bool value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.ActorDestory)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 actor_id_;
  bool dead_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class ActorMove :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.ActorMove) */ {
 public:
  ActorMove();
  virtual ~ActorMove();

  ActorMove(const ActorMove& from);
  ActorMove(ActorMove&& from) noexcept
    : ActorMove() {
    *this = ::std::move(from);
  }

  inline ActorMove& operator=(const ActorMove& from) {
    CopyFrom(from);
    return *this;
  }
  inline ActorMove& operator=(ActorMove&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ActorMove& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ActorMove* internal_default_instance() {
    return reinterpret_cast<const ActorMove*>(
               &_ActorMove_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(ActorMove& a, ActorMove& b) {
    a.Swap(&b);
  }
  inline void Swap(ActorMove* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ActorMove* New() const final {
    return CreateMaybeMessage<ActorMove>(nullptr);
  }

  ActorMove* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ActorMove>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ActorMove& from);
  void MergeFrom(const ActorMove& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActorMove* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.ActorMove";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActorIdFieldNumber = 1,
    kXFieldNumber = 2,
    kYFieldNumber = 3,
  };
  // uint64 actor_id = 1;
  void clear_actor_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 actor_id() const;
  void set_actor_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_actor_id() const;
  void _internal_set_actor_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // float x = 2;
  void clear_x();
  float x() const;
  void set_x(float value);
  private:
  float _internal_x() const;
  void _internal_set_x(float value);
  public:

  // float y = 3;
  void clear_y();
  float y() const;
  void set_y(float value);
  private:
  float _internal_y() const;
  void _internal_set_y(float value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.ActorMove)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 actor_id_;
  float x_;
  float y_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class ActorFlyTo :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.ActorFlyTo) */ {
 public:
  ActorFlyTo();
  virtual ~ActorFlyTo();

  ActorFlyTo(const ActorFlyTo& from);
  ActorFlyTo(ActorFlyTo&& from) noexcept
    : ActorFlyTo() {
    *this = ::std::move(from);
  }

  inline ActorFlyTo& operator=(const ActorFlyTo& from) {
    CopyFrom(from);
    return *this;
  }
  inline ActorFlyTo& operator=(ActorFlyTo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ActorFlyTo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ActorFlyTo* internal_default_instance() {
    return reinterpret_cast<const ActorFlyTo*>(
               &_ActorFlyTo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(ActorFlyTo& a, ActorFlyTo& b) {
    a.Swap(&b);
  }
  inline void Swap(ActorFlyTo* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ActorFlyTo* New() const final {
    return CreateMaybeMessage<ActorFlyTo>(nullptr);
  }

  ActorFlyTo* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ActorFlyTo>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ActorFlyTo& from);
  void MergeFrom(const ActorFlyTo& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActorFlyTo* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.ActorFlyTo";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActorIdFieldNumber = 1,
    kXFieldNumber = 2,
    kYFieldNumber = 3,
  };
  // uint64 actor_id = 1;
  void clear_actor_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 actor_id() const;
  void set_actor_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_actor_id() const;
  void _internal_set_actor_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // float x = 2;
  void clear_x();
  float x() const;
  void set_x(float value);
  private:
  float _internal_x() const;
  void _internal_set_x(float value);
  public:

  // float y = 3;
  void clear_y();
  float y() const;
  void set_y(float value);
  private:
  float _internal_y() const;
  void _internal_set_y(float value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.ActorFlyTo)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 actor_id_;
  float x_;
  float y_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class ActorCastSkill :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.ActorCastSkill) */ {
 public:
  ActorCastSkill();
  virtual ~ActorCastSkill();

  ActorCastSkill(const ActorCastSkill& from);
  ActorCastSkill(ActorCastSkill&& from) noexcept
    : ActorCastSkill() {
    *this = ::std::move(from);
  }

  inline ActorCastSkill& operator=(const ActorCastSkill& from) {
    CopyFrom(from);
    return *this;
  }
  inline ActorCastSkill& operator=(ActorCastSkill&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ActorCastSkill& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ActorCastSkill* internal_default_instance() {
    return reinterpret_cast<const ActorCastSkill*>(
               &_ActorCastSkill_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(ActorCastSkill& a, ActorCastSkill& b) {
    a.Swap(&b);
  }
  inline void Swap(ActorCastSkill* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ActorCastSkill* New() const final {
    return CreateMaybeMessage<ActorCastSkill>(nullptr);
  }

  ActorCastSkill* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ActorCastSkill>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ActorCastSkill& from);
  void MergeFrom(const ActorCastSkill& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActorCastSkill* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.ActorCastSkill";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActorIdFieldNumber = 1,
    kTargetIdFieldNumber = 2,
    kSkillIdFieldNumber = 3,
  };
  // uint64 actor_id = 1;
  void clear_actor_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 actor_id() const;
  void set_actor_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_actor_id() const;
  void _internal_set_actor_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 target_id = 2;
  void clear_target_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 target_id() const;
  void set_target_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_target_id() const;
  void _internal_set_target_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 skill_id = 3;
  void clear_skill_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 skill_id() const;
  void set_skill_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_skill_id() const;
  void _internal_set_skill_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.ActorCastSkill)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 actor_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 target_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 skill_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class ActorCastSkill_Fail :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.ActorCastSkill_Fail) */ {
 public:
  ActorCastSkill_Fail();
  virtual ~ActorCastSkill_Fail();

  ActorCastSkill_Fail(const ActorCastSkill_Fail& from);
  ActorCastSkill_Fail(ActorCastSkill_Fail&& from) noexcept
    : ActorCastSkill_Fail() {
    *this = ::std::move(from);
  }

  inline ActorCastSkill_Fail& operator=(const ActorCastSkill_Fail& from) {
    CopyFrom(from);
    return *this;
  }
  inline ActorCastSkill_Fail& operator=(ActorCastSkill_Fail&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ActorCastSkill_Fail& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ActorCastSkill_Fail* internal_default_instance() {
    return reinterpret_cast<const ActorCastSkill_Fail*>(
               &_ActorCastSkill_Fail_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(ActorCastSkill_Fail& a, ActorCastSkill_Fail& b) {
    a.Swap(&b);
  }
  inline void Swap(ActorCastSkill_Fail* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ActorCastSkill_Fail* New() const final {
    return CreateMaybeMessage<ActorCastSkill_Fail>(nullptr);
  }

  ActorCastSkill_Fail* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ActorCastSkill_Fail>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ActorCastSkill_Fail& from);
  void MergeFrom(const ActorCastSkill_Fail& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActorCastSkill_Fail* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.ActorCastSkill_Fail";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActorIdFieldNumber = 1,
  };
  // uint64 actor_id = 1;
  void clear_actor_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 actor_id() const;
  void set_actor_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_actor_id() const;
  void _internal_set_actor_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.ActorCastSkill_Fail)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 actor_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class ActorSetHide :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.ActorSetHide) */ {
 public:
  ActorSetHide();
  virtual ~ActorSetHide();

  ActorSetHide(const ActorSetHide& from);
  ActorSetHide(ActorSetHide&& from) noexcept
    : ActorSetHide() {
    *this = ::std::move(from);
  }

  inline ActorSetHide& operator=(const ActorSetHide& from) {
    CopyFrom(from);
    return *this;
  }
  inline ActorSetHide& operator=(ActorSetHide&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ActorSetHide& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ActorSetHide* internal_default_instance() {
    return reinterpret_cast<const ActorSetHide*>(
               &_ActorSetHide_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(ActorSetHide& a, ActorSetHide& b) {
    a.Swap(&b);
  }
  inline void Swap(ActorSetHide* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ActorSetHide* New() const final {
    return CreateMaybeMessage<ActorSetHide>(nullptr);
  }

  ActorSetHide* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ActorSetHide>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ActorSetHide& from);
  void MergeFrom(const ActorSetHide& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ActorSetHide* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.ActorSetHide";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kActorIdFieldNumber = 1,
    kHideCountFieldNumber = 2,
  };
  // uint64 actor_id = 1;
  void clear_actor_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 actor_id() const;
  void set_actor_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_actor_id() const;
  void _internal_set_actor_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 hide_count = 2;
  void clear_hide_count();
  ::PROTOBUF_NAMESPACE_ID::int32 hide_count() const;
  void set_hide_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_hide_count() const;
  void _internal_set_hide_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.ActorSetHide)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 actor_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 hide_count_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class TeamCreate :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.TeamCreate) */ {
 public:
  TeamCreate();
  virtual ~TeamCreate();

  TeamCreate(const TeamCreate& from);
  TeamCreate(TeamCreate&& from) noexcept
    : TeamCreate() {
    *this = ::std::move(from);
  }

  inline TeamCreate& operator=(const TeamCreate& from) {
    CopyFrom(from);
    return *this;
  }
  inline TeamCreate& operator=(TeamCreate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TeamCreate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TeamCreate* internal_default_instance() {
    return reinterpret_cast<const TeamCreate*>(
               &_TeamCreate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(TeamCreate& a, TeamCreate& b) {
    a.Swap(&b);
  }
  inline void Swap(TeamCreate* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TeamCreate* New() const final {
    return CreateMaybeMessage<TeamCreate>(nullptr);
  }

  TeamCreate* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TeamCreate>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TeamCreate& from);
  void MergeFrom(const TeamCreate& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TeamCreate* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.TeamCreate";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTeamIdFieldNumber = 1,
    kLeaderIdFieldNumber = 2,
  };
  // uint64 team_id = 1;
  void clear_team_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 team_id() const;
  void set_team_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_team_id() const;
  void _internal_set_team_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 leader_id = 2;
  void clear_leader_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 leader_id() const;
  void set_leader_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_leader_id() const;
  void _internal_set_leader_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.TeamCreate)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 team_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 leader_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class TeamDestory :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.TeamDestory) */ {
 public:
  TeamDestory();
  virtual ~TeamDestory();

  TeamDestory(const TeamDestory& from);
  TeamDestory(TeamDestory&& from) noexcept
    : TeamDestory() {
    *this = ::std::move(from);
  }

  inline TeamDestory& operator=(const TeamDestory& from) {
    CopyFrom(from);
    return *this;
  }
  inline TeamDestory& operator=(TeamDestory&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TeamDestory& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TeamDestory* internal_default_instance() {
    return reinterpret_cast<const TeamDestory*>(
               &_TeamDestory_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(TeamDestory& a, TeamDestory& b) {
    a.Swap(&b);
  }
  inline void Swap(TeamDestory* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TeamDestory* New() const final {
    return CreateMaybeMessage<TeamDestory>(nullptr);
  }

  TeamDestory* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TeamDestory>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TeamDestory& from);
  void MergeFrom(const TeamDestory& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TeamDestory* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.TeamDestory";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTeamIdFieldNumber = 1,
  };
  // uint64 team_id = 1;
  void clear_team_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 team_id() const;
  void set_team_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_team_id() const;
  void _internal_set_team_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.TeamDestory)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 team_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class TeamQuit :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.TeamQuit) */ {
 public:
  TeamQuit();
  virtual ~TeamQuit();

  TeamQuit(const TeamQuit& from);
  TeamQuit(TeamQuit&& from) noexcept
    : TeamQuit() {
    *this = ::std::move(from);
  }

  inline TeamQuit& operator=(const TeamQuit& from) {
    CopyFrom(from);
    return *this;
  }
  inline TeamQuit& operator=(TeamQuit&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TeamQuit& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TeamQuit* internal_default_instance() {
    return reinterpret_cast<const TeamQuit*>(
               &_TeamQuit_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(TeamQuit& a, TeamQuit& b) {
    a.Swap(&b);
  }
  inline void Swap(TeamQuit* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TeamQuit* New() const final {
    return CreateMaybeMessage<TeamQuit>(nullptr);
  }

  TeamQuit* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TeamQuit>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TeamQuit& from);
  void MergeFrom(const TeamQuit& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TeamQuit* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.TeamQuit";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTeamIdFieldNumber = 1,
    kOperatorIdFieldNumber = 2,
  };
  // uint64 team_id = 1;
  void clear_team_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 team_id() const;
  void set_team_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_team_id() const;
  void _internal_set_team_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 operator_id = 2;
  void clear_operator_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 operator_id() const;
  void set_operator_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_operator_id() const;
  void _internal_set_operator_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.TeamQuit)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 team_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 operator_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class TeamKickMember :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.TeamKickMember) */ {
 public:
  TeamKickMember();
  virtual ~TeamKickMember();

  TeamKickMember(const TeamKickMember& from);
  TeamKickMember(TeamKickMember&& from) noexcept
    : TeamKickMember() {
    *this = ::std::move(from);
  }

  inline TeamKickMember& operator=(const TeamKickMember& from) {
    CopyFrom(from);
    return *this;
  }
  inline TeamKickMember& operator=(TeamKickMember&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TeamKickMember& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TeamKickMember* internal_default_instance() {
    return reinterpret_cast<const TeamKickMember*>(
               &_TeamKickMember_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  friend void swap(TeamKickMember& a, TeamKickMember& b) {
    a.Swap(&b);
  }
  inline void Swap(TeamKickMember* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TeamKickMember* New() const final {
    return CreateMaybeMessage<TeamKickMember>(nullptr);
  }

  TeamKickMember* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TeamKickMember>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TeamKickMember& from);
  void MergeFrom(const TeamKickMember& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TeamKickMember* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.TeamKickMember";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTeamIdFieldNumber = 1,
    kOperatorIdFieldNumber = 2,
    kKickIdFieldNumber = 3,
  };
  // uint64 team_id = 1;
  void clear_team_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 team_id() const;
  void set_team_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_team_id() const;
  void _internal_set_team_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 operator_id = 2;
  void clear_operator_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 operator_id() const;
  void set_operator_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_operator_id() const;
  void _internal_set_operator_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 kick_id = 3;
  void clear_kick_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 kick_id() const;
  void set_kick_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_kick_id() const;
  void _internal_set_kick_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.TeamKickMember)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 team_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 operator_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 kick_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class TeamInviteMember :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.TeamInviteMember) */ {
 public:
  TeamInviteMember();
  virtual ~TeamInviteMember();

  TeamInviteMember(const TeamInviteMember& from);
  TeamInviteMember(TeamInviteMember&& from) noexcept
    : TeamInviteMember() {
    *this = ::std::move(from);
  }

  inline TeamInviteMember& operator=(const TeamInviteMember& from) {
    CopyFrom(from);
    return *this;
  }
  inline TeamInviteMember& operator=(TeamInviteMember&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TeamInviteMember& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TeamInviteMember* internal_default_instance() {
    return reinterpret_cast<const TeamInviteMember*>(
               &_TeamInviteMember_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  friend void swap(TeamInviteMember& a, TeamInviteMember& b) {
    a.Swap(&b);
  }
  inline void Swap(TeamInviteMember* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TeamInviteMember* New() const final {
    return CreateMaybeMessage<TeamInviteMember>(nullptr);
  }

  TeamInviteMember* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TeamInviteMember>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TeamInviteMember& from);
  void MergeFrom(const TeamInviteMember& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TeamInviteMember* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.TeamInviteMember";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTeamIdFieldNumber = 1,
    kOperatorIdFieldNumber = 2,
    kInviteeIdFieldNumber = 3,
  };
  // uint64 team_id = 1;
  void clear_team_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 team_id() const;
  void set_team_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_team_id() const;
  void _internal_set_team_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 operator_id = 2;
  void clear_operator_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 operator_id() const;
  void set_operator_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_operator_id() const;
  void _internal_set_operator_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 invitee_id = 3;
  void clear_invitee_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 invitee_id() const;
  void set_invitee_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_invitee_id() const;
  void _internal_set_invitee_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.TeamInviteMember)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 team_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 operator_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 invitee_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class TeamAcceptInvite :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.TeamAcceptInvite) */ {
 public:
  TeamAcceptInvite();
  virtual ~TeamAcceptInvite();

  TeamAcceptInvite(const TeamAcceptInvite& from);
  TeamAcceptInvite(TeamAcceptInvite&& from) noexcept
    : TeamAcceptInvite() {
    *this = ::std::move(from);
  }

  inline TeamAcceptInvite& operator=(const TeamAcceptInvite& from) {
    CopyFrom(from);
    return *this;
  }
  inline TeamAcceptInvite& operator=(TeamAcceptInvite&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TeamAcceptInvite& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TeamAcceptInvite* internal_default_instance() {
    return reinterpret_cast<const TeamAcceptInvite*>(
               &_TeamAcceptInvite_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  friend void swap(TeamAcceptInvite& a, TeamAcceptInvite& b) {
    a.Swap(&b);
  }
  inline void Swap(TeamAcceptInvite* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TeamAcceptInvite* New() const final {
    return CreateMaybeMessage<TeamAcceptInvite>(nullptr);
  }

  TeamAcceptInvite* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TeamAcceptInvite>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TeamAcceptInvite& from);
  void MergeFrom(const TeamAcceptInvite& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TeamAcceptInvite* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.TeamAcceptInvite";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTeamIdFieldNumber = 1,
    kInviterIdFieldNumber = 2,
    kInviteeIdFieldNumber = 3,
    kResultFieldNumber = 4,
  };
  // uint64 team_id = 1;
  void clear_team_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 team_id() const;
  void set_team_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_team_id() const;
  void _internal_set_team_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 inviter_id = 2;
  void clear_inviter_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 inviter_id() const;
  void set_inviter_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_inviter_id() const;
  void _internal_set_inviter_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 invitee_id = 3;
  void clear_invitee_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 invitee_id() const;
  void set_invitee_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_invitee_id() const;
  void _internal_set_invitee_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // bool result = 4;
  void clear_result();
  bool result() const;
  void set_result(bool value);
  private:
  bool _internal_result() const;
  void _internal_set_result(bool value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.TeamAcceptInvite)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 team_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 inviter_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 invitee_id_;
  bool result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class TeamApplyMember :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.TeamApplyMember) */ {
 public:
  TeamApplyMember();
  virtual ~TeamApplyMember();

  TeamApplyMember(const TeamApplyMember& from);
  TeamApplyMember(TeamApplyMember&& from) noexcept
    : TeamApplyMember() {
    *this = ::std::move(from);
  }

  inline TeamApplyMember& operator=(const TeamApplyMember& from) {
    CopyFrom(from);
    return *this;
  }
  inline TeamApplyMember& operator=(TeamApplyMember&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TeamApplyMember& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TeamApplyMember* internal_default_instance() {
    return reinterpret_cast<const TeamApplyMember*>(
               &_TeamApplyMember_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  friend void swap(TeamApplyMember& a, TeamApplyMember& b) {
    a.Swap(&b);
  }
  inline void Swap(TeamApplyMember* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TeamApplyMember* New() const final {
    return CreateMaybeMessage<TeamApplyMember>(nullptr);
  }

  TeamApplyMember* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TeamApplyMember>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TeamApplyMember& from);
  void MergeFrom(const TeamApplyMember& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TeamApplyMember* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.TeamApplyMember";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kApplicantIdFieldNumber = 1,
    kRespondentIdFieldNumber = 2,
  };
  // uint64 applicant_id = 1;
  void clear_applicant_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 applicant_id() const;
  void set_applicant_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_applicant_id() const;
  void _internal_set_applicant_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 respondent_id = 2;
  void clear_respondent_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 respondent_id() const;
  void set_respondent_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_respondent_id() const;
  void _internal_set_respondent_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.TeamApplyMember)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 applicant_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 respondent_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class TeamAcceptApply :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.TeamAcceptApply) */ {
 public:
  TeamAcceptApply();
  virtual ~TeamAcceptApply();

  TeamAcceptApply(const TeamAcceptApply& from);
  TeamAcceptApply(TeamAcceptApply&& from) noexcept
    : TeamAcceptApply() {
    *this = ::std::move(from);
  }

  inline TeamAcceptApply& operator=(const TeamAcceptApply& from) {
    CopyFrom(from);
    return *this;
  }
  inline TeamAcceptApply& operator=(TeamAcceptApply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TeamAcceptApply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TeamAcceptApply* internal_default_instance() {
    return reinterpret_cast<const TeamAcceptApply*>(
               &_TeamAcceptApply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  friend void swap(TeamAcceptApply& a, TeamAcceptApply& b) {
    a.Swap(&b);
  }
  inline void Swap(TeamAcceptApply* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TeamAcceptApply* New() const final {
    return CreateMaybeMessage<TeamAcceptApply>(nullptr);
  }

  TeamAcceptApply* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TeamAcceptApply>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TeamAcceptApply& from);
  void MergeFrom(const TeamAcceptApply& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TeamAcceptApply* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.TeamAcceptApply";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kApplicantIdFieldNumber = 1,
    kRespondentIdFieldNumber = 2,
    kResultFieldNumber = 3,
  };
  // uint64 applicant_id = 1;
  void clear_applicant_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 applicant_id() const;
  void set_applicant_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_applicant_id() const;
  void _internal_set_applicant_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 respondent_id = 2;
  void clear_respondent_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 respondent_id() const;
  void set_respondent_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_respondent_id() const;
  void _internal_set_respondent_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // bool result = 3;
  void clear_result();
  bool result() const;
  void set_result(bool value);
  private:
  bool _internal_result() const;
  void _internal_set_result(bool value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.TeamAcceptApply)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 applicant_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 respondent_id_;
  bool result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class TeamNewLeader :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.TeamNewLeader) */ {
 public:
  TeamNewLeader();
  virtual ~TeamNewLeader();

  TeamNewLeader(const TeamNewLeader& from);
  TeamNewLeader(TeamNewLeader&& from) noexcept
    : TeamNewLeader() {
    *this = ::std::move(from);
  }

  inline TeamNewLeader& operator=(const TeamNewLeader& from) {
    CopyFrom(from);
    return *this;
  }
  inline TeamNewLeader& operator=(TeamNewLeader&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TeamNewLeader& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TeamNewLeader* internal_default_instance() {
    return reinterpret_cast<const TeamNewLeader*>(
               &_TeamNewLeader_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  friend void swap(TeamNewLeader& a, TeamNewLeader& b) {
    a.Swap(&b);
  }
  inline void Swap(TeamNewLeader* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TeamNewLeader* New() const final {
    return CreateMaybeMessage<TeamNewLeader>(nullptr);
  }

  TeamNewLeader* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TeamNewLeader>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TeamNewLeader& from);
  void MergeFrom(const TeamNewLeader& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TeamNewLeader* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.TeamNewLeader";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTeamIdFieldNumber = 1,
    kOperatorIdFieldNumber = 2,
    kNewLeaderIdFieldNumber = 3,
  };
  // uint64 team_id = 1;
  void clear_team_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 team_id() const;
  void set_team_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_team_id() const;
  void _internal_set_team_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 operator_id = 2;
  void clear_operator_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 operator_id() const;
  void set_operator_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_operator_id() const;
  void _internal_set_operator_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 new_leader_id = 3;
  void clear_new_leader_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 new_leader_id() const;
  void set_new_leader_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_new_leader_id() const;
  void _internal_set_new_leader_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.TeamNewLeader)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 team_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 operator_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 new_leader_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class TeamAddMember :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.TeamAddMember) */ {
 public:
  TeamAddMember();
  virtual ~TeamAddMember();

  TeamAddMember(const TeamAddMember& from);
  TeamAddMember(TeamAddMember&& from) noexcept
    : TeamAddMember() {
    *this = ::std::move(from);
  }

  inline TeamAddMember& operator=(const TeamAddMember& from) {
    CopyFrom(from);
    return *this;
  }
  inline TeamAddMember& operator=(TeamAddMember&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TeamAddMember& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TeamAddMember* internal_default_instance() {
    return reinterpret_cast<const TeamAddMember*>(
               &_TeamAddMember_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  friend void swap(TeamAddMember& a, TeamAddMember& b) {
    a.Swap(&b);
  }
  inline void Swap(TeamAddMember* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TeamAddMember* New() const final {
    return CreateMaybeMessage<TeamAddMember>(nullptr);
  }

  TeamAddMember* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TeamAddMember>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TeamAddMember& from);
  void MergeFrom(const TeamAddMember& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TeamAddMember* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.TeamAddMember";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTeamIdFieldNumber = 1,
    kMemberIdFieldNumber = 2,
  };
  // uint64 team_id = 1;
  void clear_team_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 team_id() const;
  void set_team_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_team_id() const;
  void _internal_set_team_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 member_id = 2;
  void clear_member_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 member_id() const;
  void set_member_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_member_id() const;
  void _internal_set_member_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.TeamAddMember)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 team_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 member_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class TeamDelMember :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.TeamDelMember) */ {
 public:
  TeamDelMember();
  virtual ~TeamDelMember();

  TeamDelMember(const TeamDelMember& from);
  TeamDelMember(TeamDelMember&& from) noexcept
    : TeamDelMember() {
    *this = ::std::move(from);
  }

  inline TeamDelMember& operator=(const TeamDelMember& from) {
    CopyFrom(from);
    return *this;
  }
  inline TeamDelMember& operator=(TeamDelMember&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TeamDelMember& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TeamDelMember* internal_default_instance() {
    return reinterpret_cast<const TeamDelMember*>(
               &_TeamDelMember_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  friend void swap(TeamDelMember& a, TeamDelMember& b) {
    a.Swap(&b);
  }
  inline void Swap(TeamDelMember* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TeamDelMember* New() const final {
    return CreateMaybeMessage<TeamDelMember>(nullptr);
  }

  TeamDelMember* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TeamDelMember>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TeamDelMember& from);
  void MergeFrom(const TeamDelMember& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TeamDelMember* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.TeamDelMember";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTeamIdFieldNumber = 1,
    kMemberIdFieldNumber = 2,
  };
  // uint64 team_id = 1;
  void clear_team_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 team_id() const;
  void set_team_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_team_id() const;
  void _internal_set_team_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 member_id = 2;
  void clear_member_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 member_id() const;
  void set_member_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_member_id() const;
  void _internal_set_member_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.TeamDelMember)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 team_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 member_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class TeamMemberInfoList :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.TeamMemberInfoList) */ {
 public:
  TeamMemberInfoList();
  virtual ~TeamMemberInfoList();

  TeamMemberInfoList(const TeamMemberInfoList& from);
  TeamMemberInfoList(TeamMemberInfoList&& from) noexcept
    : TeamMemberInfoList() {
    *this = ::std::move(from);
  }

  inline TeamMemberInfoList& operator=(const TeamMemberInfoList& from) {
    CopyFrom(from);
    return *this;
  }
  inline TeamMemberInfoList& operator=(TeamMemberInfoList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TeamMemberInfoList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TeamMemberInfoList* internal_default_instance() {
    return reinterpret_cast<const TeamMemberInfoList*>(
               &_TeamMemberInfoList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  friend void swap(TeamMemberInfoList& a, TeamMemberInfoList& b) {
    a.Swap(&b);
  }
  inline void Swap(TeamMemberInfoList* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TeamMemberInfoList* New() const final {
    return CreateMaybeMessage<TeamMemberInfoList>(nullptr);
  }

  TeamMemberInfoList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TeamMemberInfoList>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TeamMemberInfoList& from);
  void MergeFrom(const TeamMemberInfoList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TeamMemberInfoList* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.TeamMemberInfoList";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMemberListFieldNumber = 1,
  };
  // repeated .TeamMemberInfo member_list = 1;
  int member_list_size() const;
  private:
  int _internal_member_list_size() const;
  public:
  void clear_member_list();
  ::TeamMemberInfo* mutable_member_list(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TeamMemberInfo >*
      mutable_member_list();
  private:
  const ::TeamMemberInfo& _internal_member_list(int index) const;
  ::TeamMemberInfo* _internal_add_member_list();
  public:
  const ::TeamMemberInfo& member_list(int index) const;
  ::TeamMemberInfo* add_member_list();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TeamMemberInfo >&
      member_list() const;

  // @@protoc_insertion_point(class_scope:ServerMSG.TeamMemberInfoList)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TeamMemberInfo > member_list_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class GuildCreate :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.GuildCreate) */ {
 public:
  GuildCreate();
  virtual ~GuildCreate();

  GuildCreate(const GuildCreate& from);
  GuildCreate(GuildCreate&& from) noexcept
    : GuildCreate() {
    *this = ::std::move(from);
  }

  inline GuildCreate& operator=(const GuildCreate& from) {
    CopyFrom(from);
    return *this;
  }
  inline GuildCreate& operator=(GuildCreate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GuildCreate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GuildCreate* internal_default_instance() {
    return reinterpret_cast<const GuildCreate*>(
               &_GuildCreate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  friend void swap(GuildCreate& a, GuildCreate& b) {
    a.Swap(&b);
  }
  inline void Swap(GuildCreate* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GuildCreate* New() const final {
    return CreateMaybeMessage<GuildCreate>(nullptr);
  }

  GuildCreate* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GuildCreate>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GuildCreate& from);
  void MergeFrom(const GuildCreate& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GuildCreate* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.GuildCreate";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildNameFieldNumber = 3,
    kLeaderNameFieldNumber = 4,
    kGuildIdFieldNumber = 1,
    kLeaderIdFieldNumber = 2,
    kCreateTimeFieldNumber = 5,
  };
  // string guild_name = 3;
  void clear_guild_name();
  const std::string& guild_name() const;
  void set_guild_name(const std::string& value);
  void set_guild_name(std::string&& value);
  void set_guild_name(const char* value);
  void set_guild_name(const char* value, size_t size);
  std::string* mutable_guild_name();
  std::string* release_guild_name();
  void set_allocated_guild_name(std::string* guild_name);
  private:
  const std::string& _internal_guild_name() const;
  void _internal_set_guild_name(const std::string& value);
  std::string* _internal_mutable_guild_name();
  public:

  // string leader_name = 4;
  void clear_leader_name();
  const std::string& leader_name() const;
  void set_leader_name(const std::string& value);
  void set_leader_name(std::string&& value);
  void set_leader_name(const char* value);
  void set_leader_name(const char* value, size_t size);
  std::string* mutable_leader_name();
  std::string* release_leader_name();
  void set_allocated_leader_name(std::string* leader_name);
  private:
  const std::string& _internal_leader_name() const;
  void _internal_set_leader_name(const std::string& value);
  std::string* _internal_mutable_leader_name();
  public:

  // uint64 guild_id = 1;
  void clear_guild_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 guild_id() const;
  void set_guild_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_guild_id() const;
  void _internal_set_guild_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 leader_id = 2;
  void clear_leader_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 leader_id() const;
  void set_leader_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_leader_id() const;
  void _internal_set_leader_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 create_time = 5;
  void clear_create_time();
  ::PROTOBUF_NAMESPACE_ID::uint32 create_time() const;
  void set_create_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_create_time() const;
  void _internal_set_create_time(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.GuildCreate)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr guild_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr leader_name_;
  ::PROTOBUF_NAMESPACE_ID::uint64 guild_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 leader_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 create_time_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class GuildDestory :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.GuildDestory) */ {
 public:
  GuildDestory();
  virtual ~GuildDestory();

  GuildDestory(const GuildDestory& from);
  GuildDestory(GuildDestory&& from) noexcept
    : GuildDestory() {
    *this = ::std::move(from);
  }

  inline GuildDestory& operator=(const GuildDestory& from) {
    CopyFrom(from);
    return *this;
  }
  inline GuildDestory& operator=(GuildDestory&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GuildDestory& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GuildDestory* internal_default_instance() {
    return reinterpret_cast<const GuildDestory*>(
               &_GuildDestory_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  friend void swap(GuildDestory& a, GuildDestory& b) {
    a.Swap(&b);
  }
  inline void Swap(GuildDestory* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GuildDestory* New() const final {
    return CreateMaybeMessage<GuildDestory>(nullptr);
  }

  GuildDestory* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GuildDestory>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GuildDestory& from);
  void MergeFrom(const GuildDestory& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GuildDestory* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.GuildDestory";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildIdFieldNumber = 1,
  };
  // uint64 guild_id = 1;
  void clear_guild_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 guild_id() const;
  void set_guild_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_guild_id() const;
  void _internal_set_guild_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.GuildDestory)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 guild_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class GuildQuit :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.GuildQuit) */ {
 public:
  GuildQuit();
  virtual ~GuildQuit();

  GuildQuit(const GuildQuit& from);
  GuildQuit(GuildQuit&& from) noexcept
    : GuildQuit() {
    *this = ::std::move(from);
  }

  inline GuildQuit& operator=(const GuildQuit& from) {
    CopyFrom(from);
    return *this;
  }
  inline GuildQuit& operator=(GuildQuit&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GuildQuit& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GuildQuit* internal_default_instance() {
    return reinterpret_cast<const GuildQuit*>(
               &_GuildQuit_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  friend void swap(GuildQuit& a, GuildQuit& b) {
    a.Swap(&b);
  }
  inline void Swap(GuildQuit* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GuildQuit* New() const final {
    return CreateMaybeMessage<GuildQuit>(nullptr);
  }

  GuildQuit* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GuildQuit>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GuildQuit& from);
  void MergeFrom(const GuildQuit& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GuildQuit* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.GuildQuit";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildIdFieldNumber = 1,
    kOperatorIdFieldNumber = 2,
  };
  // uint64 guild_id = 1;
  void clear_guild_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 guild_id() const;
  void set_guild_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_guild_id() const;
  void _internal_set_guild_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 operator_id = 2;
  void clear_operator_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 operator_id() const;
  void set_operator_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_operator_id() const;
  void _internal_set_operator_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.GuildQuit)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 guild_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 operator_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class GuildKickMember :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.GuildKickMember) */ {
 public:
  GuildKickMember();
  virtual ~GuildKickMember();

  GuildKickMember(const GuildKickMember& from);
  GuildKickMember(GuildKickMember&& from) noexcept
    : GuildKickMember() {
    *this = ::std::move(from);
  }

  inline GuildKickMember& operator=(const GuildKickMember& from) {
    CopyFrom(from);
    return *this;
  }
  inline GuildKickMember& operator=(GuildKickMember&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GuildKickMember& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GuildKickMember* internal_default_instance() {
    return reinterpret_cast<const GuildKickMember*>(
               &_GuildKickMember_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  friend void swap(GuildKickMember& a, GuildKickMember& b) {
    a.Swap(&b);
  }
  inline void Swap(GuildKickMember* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GuildKickMember* New() const final {
    return CreateMaybeMessage<GuildKickMember>(nullptr);
  }

  GuildKickMember* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GuildKickMember>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GuildKickMember& from);
  void MergeFrom(const GuildKickMember& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GuildKickMember* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.GuildKickMember";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildIdFieldNumber = 1,
    kOperatorIdFieldNumber = 2,
    kKickIdFieldNumber = 3,
  };
  // uint64 guild_id = 1;
  void clear_guild_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 guild_id() const;
  void set_guild_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_guild_id() const;
  void _internal_set_guild_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 operator_id = 2;
  void clear_operator_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 operator_id() const;
  void set_operator_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_operator_id() const;
  void _internal_set_operator_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 kick_id = 3;
  void clear_kick_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 kick_id() const;
  void set_kick_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_kick_id() const;
  void _internal_set_kick_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.GuildKickMember)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 guild_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 operator_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 kick_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class GuildInviteMember :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.GuildInviteMember) */ {
 public:
  GuildInviteMember();
  virtual ~GuildInviteMember();

  GuildInviteMember(const GuildInviteMember& from);
  GuildInviteMember(GuildInviteMember&& from) noexcept
    : GuildInviteMember() {
    *this = ::std::move(from);
  }

  inline GuildInviteMember& operator=(const GuildInviteMember& from) {
    CopyFrom(from);
    return *this;
  }
  inline GuildInviteMember& operator=(GuildInviteMember&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GuildInviteMember& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GuildInviteMember* internal_default_instance() {
    return reinterpret_cast<const GuildInviteMember*>(
               &_GuildInviteMember_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  friend void swap(GuildInviteMember& a, GuildInviteMember& b) {
    a.Swap(&b);
  }
  inline void Swap(GuildInviteMember* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GuildInviteMember* New() const final {
    return CreateMaybeMessage<GuildInviteMember>(nullptr);
  }

  GuildInviteMember* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GuildInviteMember>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GuildInviteMember& from);
  void MergeFrom(const GuildInviteMember& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GuildInviteMember* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.GuildInviteMember";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildIdFieldNumber = 1,
    kOperatorIdFieldNumber = 2,
    kInviteeIdFieldNumber = 3,
  };
  // uint64 guild_id = 1;
  void clear_guild_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 guild_id() const;
  void set_guild_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_guild_id() const;
  void _internal_set_guild_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 operator_id = 2;
  void clear_operator_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 operator_id() const;
  void set_operator_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_operator_id() const;
  void _internal_set_operator_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 invitee_id = 3;
  void clear_invitee_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 invitee_id() const;
  void set_invitee_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_invitee_id() const;
  void _internal_set_invitee_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.GuildInviteMember)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 guild_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 operator_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 invitee_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class GuildAcceptInvite :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.GuildAcceptInvite) */ {
 public:
  GuildAcceptInvite();
  virtual ~GuildAcceptInvite();

  GuildAcceptInvite(const GuildAcceptInvite& from);
  GuildAcceptInvite(GuildAcceptInvite&& from) noexcept
    : GuildAcceptInvite() {
    *this = ::std::move(from);
  }

  inline GuildAcceptInvite& operator=(const GuildAcceptInvite& from) {
    CopyFrom(from);
    return *this;
  }
  inline GuildAcceptInvite& operator=(GuildAcceptInvite&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GuildAcceptInvite& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GuildAcceptInvite* internal_default_instance() {
    return reinterpret_cast<const GuildAcceptInvite*>(
               &_GuildAcceptInvite_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  friend void swap(GuildAcceptInvite& a, GuildAcceptInvite& b) {
    a.Swap(&b);
  }
  inline void Swap(GuildAcceptInvite* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GuildAcceptInvite* New() const final {
    return CreateMaybeMessage<GuildAcceptInvite>(nullptr);
  }

  GuildAcceptInvite* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GuildAcceptInvite>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GuildAcceptInvite& from);
  void MergeFrom(const GuildAcceptInvite& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GuildAcceptInvite* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.GuildAcceptInvite";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildIdFieldNumber = 1,
    kInviterIdFieldNumber = 2,
    kInviteeIdFieldNumber = 3,
    kResultFieldNumber = 4,
  };
  // uint64 guild_id = 1;
  void clear_guild_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 guild_id() const;
  void set_guild_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_guild_id() const;
  void _internal_set_guild_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 inviter_id = 2;
  void clear_inviter_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 inviter_id() const;
  void set_inviter_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_inviter_id() const;
  void _internal_set_inviter_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 invitee_id = 3;
  void clear_invitee_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 invitee_id() const;
  void set_invitee_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_invitee_id() const;
  void _internal_set_invitee_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // bool result = 4;
  void clear_result();
  bool result() const;
  void set_result(bool value);
  private:
  bool _internal_result() const;
  void _internal_set_result(bool value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.GuildAcceptInvite)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 guild_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 inviter_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 invitee_id_;
  bool result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class GuildApplyMember :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.GuildApplyMember) */ {
 public:
  GuildApplyMember();
  virtual ~GuildApplyMember();

  GuildApplyMember(const GuildApplyMember& from);
  GuildApplyMember(GuildApplyMember&& from) noexcept
    : GuildApplyMember() {
    *this = ::std::move(from);
  }

  inline GuildApplyMember& operator=(const GuildApplyMember& from) {
    CopyFrom(from);
    return *this;
  }
  inline GuildApplyMember& operator=(GuildApplyMember&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GuildApplyMember& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GuildApplyMember* internal_default_instance() {
    return reinterpret_cast<const GuildApplyMember*>(
               &_GuildApplyMember_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  friend void swap(GuildApplyMember& a, GuildApplyMember& b) {
    a.Swap(&b);
  }
  inline void Swap(GuildApplyMember* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GuildApplyMember* New() const final {
    return CreateMaybeMessage<GuildApplyMember>(nullptr);
  }

  GuildApplyMember* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GuildApplyMember>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GuildApplyMember& from);
  void MergeFrom(const GuildApplyMember& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GuildApplyMember* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.GuildApplyMember";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kApplicantIdFieldNumber = 1,
    kRespondentIdFieldNumber = 2,
  };
  // uint64 applicant_id = 1;
  void clear_applicant_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 applicant_id() const;
  void set_applicant_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_applicant_id() const;
  void _internal_set_applicant_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 respondent_id = 2;
  void clear_respondent_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 respondent_id() const;
  void set_respondent_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_respondent_id() const;
  void _internal_set_respondent_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.GuildApplyMember)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 applicant_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 respondent_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class GuildAcceptApply :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.GuildAcceptApply) */ {
 public:
  GuildAcceptApply();
  virtual ~GuildAcceptApply();

  GuildAcceptApply(const GuildAcceptApply& from);
  GuildAcceptApply(GuildAcceptApply&& from) noexcept
    : GuildAcceptApply() {
    *this = ::std::move(from);
  }

  inline GuildAcceptApply& operator=(const GuildAcceptApply& from) {
    CopyFrom(from);
    return *this;
  }
  inline GuildAcceptApply& operator=(GuildAcceptApply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GuildAcceptApply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GuildAcceptApply* internal_default_instance() {
    return reinterpret_cast<const GuildAcceptApply*>(
               &_GuildAcceptApply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  friend void swap(GuildAcceptApply& a, GuildAcceptApply& b) {
    a.Swap(&b);
  }
  inline void Swap(GuildAcceptApply* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GuildAcceptApply* New() const final {
    return CreateMaybeMessage<GuildAcceptApply>(nullptr);
  }

  GuildAcceptApply* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GuildAcceptApply>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GuildAcceptApply& from);
  void MergeFrom(const GuildAcceptApply& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GuildAcceptApply* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.GuildAcceptApply";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kApplicantIdFieldNumber = 1,
    kRespondentIdFieldNumber = 2,
    kResultFieldNumber = 3,
  };
  // uint64 applicant_id = 1;
  void clear_applicant_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 applicant_id() const;
  void set_applicant_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_applicant_id() const;
  void _internal_set_applicant_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 respondent_id = 2;
  void clear_respondent_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 respondent_id() const;
  void set_respondent_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_respondent_id() const;
  void _internal_set_respondent_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // bool result = 3;
  void clear_result();
  bool result() const;
  void set_result(bool value);
  private:
  bool _internal_result() const;
  void _internal_set_result(bool value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.GuildAcceptApply)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 applicant_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 respondent_id_;
  bool result_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class GuildNewLeader :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.GuildNewLeader) */ {
 public:
  GuildNewLeader();
  virtual ~GuildNewLeader();

  GuildNewLeader(const GuildNewLeader& from);
  GuildNewLeader(GuildNewLeader&& from) noexcept
    : GuildNewLeader() {
    *this = ::std::move(from);
  }

  inline GuildNewLeader& operator=(const GuildNewLeader& from) {
    CopyFrom(from);
    return *this;
  }
  inline GuildNewLeader& operator=(GuildNewLeader&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GuildNewLeader& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GuildNewLeader* internal_default_instance() {
    return reinterpret_cast<const GuildNewLeader*>(
               &_GuildNewLeader_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  friend void swap(GuildNewLeader& a, GuildNewLeader& b) {
    a.Swap(&b);
  }
  inline void Swap(GuildNewLeader* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GuildNewLeader* New() const final {
    return CreateMaybeMessage<GuildNewLeader>(nullptr);
  }

  GuildNewLeader* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GuildNewLeader>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GuildNewLeader& from);
  void MergeFrom(const GuildNewLeader& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GuildNewLeader* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.GuildNewLeader";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNewLeaderNameFieldNumber = 4,
    kGuildIdFieldNumber = 1,
    kOperatorIdFieldNumber = 2,
    kNewLeaderIdFieldNumber = 3,
  };
  // string new_leader_name = 4;
  void clear_new_leader_name();
  const std::string& new_leader_name() const;
  void set_new_leader_name(const std::string& value);
  void set_new_leader_name(std::string&& value);
  void set_new_leader_name(const char* value);
  void set_new_leader_name(const char* value, size_t size);
  std::string* mutable_new_leader_name();
  std::string* release_new_leader_name();
  void set_allocated_new_leader_name(std::string* new_leader_name);
  private:
  const std::string& _internal_new_leader_name() const;
  void _internal_set_new_leader_name(const std::string& value);
  std::string* _internal_mutable_new_leader_name();
  public:

  // uint64 guild_id = 1;
  void clear_guild_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 guild_id() const;
  void set_guild_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_guild_id() const;
  void _internal_set_guild_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 operator_id = 2;
  void clear_operator_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 operator_id() const;
  void set_operator_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_operator_id() const;
  void _internal_set_operator_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 new_leader_id = 3;
  void clear_new_leader_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 new_leader_id() const;
  void set_new_leader_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_new_leader_id() const;
  void _internal_set_new_leader_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.GuildNewLeader)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr new_leader_name_;
  ::PROTOBUF_NAMESPACE_ID::uint64 guild_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 operator_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 new_leader_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class GuildAddMember :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.GuildAddMember) */ {
 public:
  GuildAddMember();
  virtual ~GuildAddMember();

  GuildAddMember(const GuildAddMember& from);
  GuildAddMember(GuildAddMember&& from) noexcept
    : GuildAddMember() {
    *this = ::std::move(from);
  }

  inline GuildAddMember& operator=(const GuildAddMember& from) {
    CopyFrom(from);
    return *this;
  }
  inline GuildAddMember& operator=(GuildAddMember&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GuildAddMember& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GuildAddMember* internal_default_instance() {
    return reinterpret_cast<const GuildAddMember*>(
               &_GuildAddMember_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    57;

  friend void swap(GuildAddMember& a, GuildAddMember& b) {
    a.Swap(&b);
  }
  inline void Swap(GuildAddMember* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GuildAddMember* New() const final {
    return CreateMaybeMessage<GuildAddMember>(nullptr);
  }

  GuildAddMember* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GuildAddMember>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GuildAddMember& from);
  void MergeFrom(const GuildAddMember& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GuildAddMember* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.GuildAddMember";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildIdFieldNumber = 1,
    kMemberIdFieldNumber = 2,
  };
  // uint64 guild_id = 1;
  void clear_guild_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 guild_id() const;
  void set_guild_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_guild_id() const;
  void _internal_set_guild_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 member_id = 2;
  void clear_member_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 member_id() const;
  void set_member_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_member_id() const;
  void _internal_set_member_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.GuildAddMember)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 guild_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 member_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class GuildDelMember :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.GuildDelMember) */ {
 public:
  GuildDelMember();
  virtual ~GuildDelMember();

  GuildDelMember(const GuildDelMember& from);
  GuildDelMember(GuildDelMember&& from) noexcept
    : GuildDelMember() {
    *this = ::std::move(from);
  }

  inline GuildDelMember& operator=(const GuildDelMember& from) {
    CopyFrom(from);
    return *this;
  }
  inline GuildDelMember& operator=(GuildDelMember&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GuildDelMember& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GuildDelMember* internal_default_instance() {
    return reinterpret_cast<const GuildDelMember*>(
               &_GuildDelMember_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    58;

  friend void swap(GuildDelMember& a, GuildDelMember& b) {
    a.Swap(&b);
  }
  inline void Swap(GuildDelMember* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GuildDelMember* New() const final {
    return CreateMaybeMessage<GuildDelMember>(nullptr);
  }

  GuildDelMember* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GuildDelMember>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GuildDelMember& from);
  void MergeFrom(const GuildDelMember& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GuildDelMember* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.GuildDelMember";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kGuildIdFieldNumber = 1,
    kMemberIdFieldNumber = 2,
  };
  // uint64 guild_id = 1;
  void clear_guild_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 guild_id() const;
  void set_guild_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_guild_id() const;
  void _internal_set_guild_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 member_id = 2;
  void clear_member_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 member_id() const;
  void set_member_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_member_id() const;
  void _internal_set_member_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.GuildDelMember)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 guild_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 member_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class GuildMemberInfoList :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.GuildMemberInfoList) */ {
 public:
  GuildMemberInfoList();
  virtual ~GuildMemberInfoList();

  GuildMemberInfoList(const GuildMemberInfoList& from);
  GuildMemberInfoList(GuildMemberInfoList&& from) noexcept
    : GuildMemberInfoList() {
    *this = ::std::move(from);
  }

  inline GuildMemberInfoList& operator=(const GuildMemberInfoList& from) {
    CopyFrom(from);
    return *this;
  }
  inline GuildMemberInfoList& operator=(GuildMemberInfoList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GuildMemberInfoList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GuildMemberInfoList* internal_default_instance() {
    return reinterpret_cast<const GuildMemberInfoList*>(
               &_GuildMemberInfoList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    59;

  friend void swap(GuildMemberInfoList& a, GuildMemberInfoList& b) {
    a.Swap(&b);
  }
  inline void Swap(GuildMemberInfoList* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GuildMemberInfoList* New() const final {
    return CreateMaybeMessage<GuildMemberInfoList>(nullptr);
  }

  GuildMemberInfoList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GuildMemberInfoList>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GuildMemberInfoList& from);
  void MergeFrom(const GuildMemberInfoList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GuildMemberInfoList* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.GuildMemberInfoList";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMemberListFieldNumber = 1,
  };
  // repeated .GuildMemberInfo member_list = 1;
  int member_list_size() const;
  private:
  int _internal_member_list_size() const;
  public:
  void clear_member_list();
  ::GuildMemberInfo* mutable_member_list(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::GuildMemberInfo >*
      mutable_member_list();
  private:
  const ::GuildMemberInfo& _internal_member_list(int index) const;
  ::GuildMemberInfo* _internal_add_member_list();
  public:
  const ::GuildMemberInfo& member_list(int index) const;
  ::GuildMemberInfo* add_member_list();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::GuildMemberInfo >&
      member_list() const;

  // @@protoc_insertion_point(class_scope:ServerMSG.GuildMemberInfoList)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::GuildMemberInfo > member_list_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class SyncTaskPhase :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.SyncTaskPhase) */ {
 public:
  SyncTaskPhase();
  virtual ~SyncTaskPhase();

  SyncTaskPhase(const SyncTaskPhase& from);
  SyncTaskPhase(SyncTaskPhase&& from) noexcept
    : SyncTaskPhase() {
    *this = ::std::move(from);
  }

  inline SyncTaskPhase& operator=(const SyncTaskPhase& from) {
    CopyFrom(from);
    return *this;
  }
  inline SyncTaskPhase& operator=(SyncTaskPhase&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SyncTaskPhase& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SyncTaskPhase* internal_default_instance() {
    return reinterpret_cast<const SyncTaskPhase*>(
               &_SyncTaskPhase_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    60;

  friend void swap(SyncTaskPhase& a, SyncTaskPhase& b) {
    a.Swap(&b);
  }
  inline void Swap(SyncTaskPhase* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SyncTaskPhase* New() const final {
    return CreateMaybeMessage<SyncTaskPhase>(nullptr);
  }

  SyncTaskPhase* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SyncTaskPhase>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SyncTaskPhase& from);
  void MergeFrom(const SyncTaskPhase& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SyncTaskPhase* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.SyncTaskPhase";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTaskPhaseIdFieldNumber = 2,
    kPlayerIdFieldNumber = 1,
  };
  // repeated uint64 task_phase_id = 2;
  int task_phase_id_size() const;
  private:
  int _internal_task_phase_id_size() const;
  public:
  void clear_task_phase_id();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_task_phase_id(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_task_phase_id() const;
  void _internal_add_task_phase_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_task_phase_id();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 task_phase_id(int index) const;
  void set_task_phase_id(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_task_phase_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      task_phase_id() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_task_phase_id();

  // uint64 player_id = 1;
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.SyncTaskPhase)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > task_phase_id_;
  mutable std::atomic<int> _task_phase_id_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::uint64 player_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class AddTaskPhase :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.AddTaskPhase) */ {
 public:
  AddTaskPhase();
  virtual ~AddTaskPhase();

  AddTaskPhase(const AddTaskPhase& from);
  AddTaskPhase(AddTaskPhase&& from) noexcept
    : AddTaskPhase() {
    *this = ::std::move(from);
  }

  inline AddTaskPhase& operator=(const AddTaskPhase& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddTaskPhase& operator=(AddTaskPhase&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AddTaskPhase& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AddTaskPhase* internal_default_instance() {
    return reinterpret_cast<const AddTaskPhase*>(
               &_AddTaskPhase_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    61;

  friend void swap(AddTaskPhase& a, AddTaskPhase& b) {
    a.Swap(&b);
  }
  inline void Swap(AddTaskPhase* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AddTaskPhase* New() const final {
    return CreateMaybeMessage<AddTaskPhase>(nullptr);
  }

  AddTaskPhase* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AddTaskPhase>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AddTaskPhase& from);
  void MergeFrom(const AddTaskPhase& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AddTaskPhase* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.AddTaskPhase";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
    kTaskPhaseIdFieldNumber = 2,
  };
  // uint64 player_id = 1;
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 task_phase_id = 2;
  void clear_task_phase_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 task_phase_id() const;
  void set_task_phase_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_task_phase_id() const;
  void _internal_set_task_phase_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.AddTaskPhase)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 player_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 task_phase_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// -------------------------------------------------------------------

class RemoveTaskPhase :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ServerMSG.RemoveTaskPhase) */ {
 public:
  RemoveTaskPhase();
  virtual ~RemoveTaskPhase();

  RemoveTaskPhase(const RemoveTaskPhase& from);
  RemoveTaskPhase(RemoveTaskPhase&& from) noexcept
    : RemoveTaskPhase() {
    *this = ::std::move(from);
  }

  inline RemoveTaskPhase& operator=(const RemoveTaskPhase& from) {
    CopyFrom(from);
    return *this;
  }
  inline RemoveTaskPhase& operator=(RemoveTaskPhase&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RemoveTaskPhase& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RemoveTaskPhase* internal_default_instance() {
    return reinterpret_cast<const RemoveTaskPhase*>(
               &_RemoveTaskPhase_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    62;

  friend void swap(RemoveTaskPhase& a, RemoveTaskPhase& b) {
    a.Swap(&b);
  }
  inline void Swap(RemoveTaskPhase* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RemoveTaskPhase* New() const final {
    return CreateMaybeMessage<RemoveTaskPhase>(nullptr);
  }

  RemoveTaskPhase* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RemoveTaskPhase>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RemoveTaskPhase& from);
  void MergeFrom(const RemoveTaskPhase& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RemoveTaskPhase* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ServerMSG.RemoveTaskPhase";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_server_5fmsg_2fserver_5fside_2eproto);
    return ::descriptor_table_server_5fmsg_2fserver_5fside_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlayerIdFieldNumber = 1,
    kTaskPhaseIdFieldNumber = 2,
  };
  // uint64 player_id = 1;
  void clear_player_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 player_id() const;
  void set_player_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_player_id() const;
  void _internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 task_phase_id = 2;
  void clear_task_phase_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 task_phase_id() const;
  void set_task_phase_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_task_phase_id() const;
  void _internal_set_task_phase_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:ServerMSG.RemoveTaskPhase)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 player_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 task_phase_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_server_5fmsg_2fserver_5fside_2eproto;
};
// ===================================================================

static const int kServerCmdFieldNumber = 1012;
extern ::PROTOBUF_NAMESPACE_ID::internal::ExtensionIdentifier< ::google::protobuf::MessageOptions,
    ::PROTOBUF_NAMESPACE_ID::internal::MessageTypeTraits< ::ServerMSG::ServerSideMessageOptions >, 11, false >
  server_cmd;

// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ServerSideMessageOptions

// .ServerMSG.OMsgID id = 1;
inline void ServerSideMessageOptions::clear_id() {
  id_ = 0;
}
inline ::ServerMSG::OMsgID ServerSideMessageOptions::_internal_id() const {
  return static_cast< ::ServerMSG::OMsgID >(id_);
}
inline ::ServerMSG::OMsgID ServerSideMessageOptions::id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ServerSideMessageOptions.id)
  return _internal_id();
}
inline void ServerSideMessageOptions::_internal_set_id(::ServerMSG::OMsgID value) {
  
  id_ = value;
}
inline void ServerSideMessageOptions::set_id(::ServerMSG::OMsgID value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.ServerSideMessageOptions.id)
}

// -------------------------------------------------------------------

// ServiceCmd

// repeated string cmds = 1;
inline int ServiceCmd::_internal_cmds_size() const {
  return cmds_.size();
}
inline int ServiceCmd::cmds_size() const {
  return _internal_cmds_size();
}
inline void ServiceCmd::clear_cmds() {
  cmds_.Clear();
}
inline std::string* ServiceCmd::add_cmds() {
  // @@protoc_insertion_point(field_add_mutable:ServerMSG.ServiceCmd.cmds)
  return _internal_add_cmds();
}
inline const std::string& ServiceCmd::_internal_cmds(int index) const {
  return cmds_.Get(index);
}
inline const std::string& ServiceCmd::cmds(int index) const {
  // @@protoc_insertion_point(field_get:ServerMSG.ServiceCmd.cmds)
  return _internal_cmds(index);
}
inline std::string* ServiceCmd::mutable_cmds(int index) {
  // @@protoc_insertion_point(field_mutable:ServerMSG.ServiceCmd.cmds)
  return cmds_.Mutable(index);
}
inline void ServiceCmd::set_cmds(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:ServerMSG.ServiceCmd.cmds)
  cmds_.Mutable(index)->assign(value);
}
inline void ServiceCmd::set_cmds(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:ServerMSG.ServiceCmd.cmds)
  cmds_.Mutable(index)->assign(std::move(value));
}
inline void ServiceCmd::set_cmds(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  cmds_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ServerMSG.ServiceCmd.cmds)
}
inline void ServiceCmd::set_cmds(int index, const char* value, size_t size) {
  cmds_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ServerMSG.ServiceCmd.cmds)
}
inline std::string* ServiceCmd::_internal_add_cmds() {
  return cmds_.Add();
}
inline void ServiceCmd::add_cmds(const std::string& value) {
  cmds_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ServerMSG.ServiceCmd.cmds)
}
inline void ServiceCmd::add_cmds(std::string&& value) {
  cmds_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:ServerMSG.ServiceCmd.cmds)
}
inline void ServiceCmd::add_cmds(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  cmds_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ServerMSG.ServiceCmd.cmds)
}
inline void ServiceCmd::add_cmds(const char* value, size_t size) {
  cmds_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ServerMSG.ServiceCmd.cmds)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
ServiceCmd::cmds() const {
  // @@protoc_insertion_point(field_list:ServerMSG.ServiceCmd.cmds)
  return cmds_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
ServiceCmd::mutable_cmds() {
  // @@protoc_insertion_point(field_mutable_list:ServerMSG.ServiceCmd.cmds)
  return &cmds_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ServiceHttpRequest

// uint64 uid = 1;
inline void ServiceHttpRequest::clear_uid() {
  uid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ServiceHttpRequest::_internal_uid() const {
  return uid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ServiceHttpRequest::uid() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ServiceHttpRequest.uid)
  return _internal_uid();
}
inline void ServiceHttpRequest::_internal_set_uid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  uid_ = value;
}
inline void ServiceHttpRequest::set_uid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_uid(value);
  // @@protoc_insertion_point(field_set:ServerMSG.ServiceHttpRequest.uid)
}

// map<string, string> kvmap = 2;
inline int ServiceHttpRequest::_internal_kvmap_size() const {
  return kvmap_.size();
}
inline int ServiceHttpRequest::kvmap_size() const {
  return _internal_kvmap_size();
}
inline void ServiceHttpRequest::clear_kvmap() {
  kvmap_.Clear();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
ServiceHttpRequest::_internal_kvmap() const {
  return kvmap_.GetMap();
}
inline const ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >&
ServiceHttpRequest::kvmap() const {
  // @@protoc_insertion_point(field_map:ServerMSG.ServiceHttpRequest.kvmap)
  return _internal_kvmap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
ServiceHttpRequest::_internal_mutable_kvmap() {
  return kvmap_.MutableMap();
}
inline ::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >*
ServiceHttpRequest::mutable_kvmap() {
  // @@protoc_insertion_point(field_mutable_map:ServerMSG.ServiceHttpRequest.kvmap)
  return _internal_mutable_kvmap();
}

// -------------------------------------------------------------------

// ServiceHttpResponse

// uint64 uid = 1;
inline void ServiceHttpResponse::clear_uid() {
  uid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ServiceHttpResponse::_internal_uid() const {
  return uid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ServiceHttpResponse::uid() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ServiceHttpResponse.uid)
  return _internal_uid();
}
inline void ServiceHttpResponse::_internal_set_uid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  uid_ = value;
}
inline void ServiceHttpResponse::set_uid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_uid(value);
  // @@protoc_insertion_point(field_set:ServerMSG.ServiceHttpResponse.uid)
}

// int32 response_code = 2;
inline void ServiceHttpResponse::clear_response_code() {
  response_code_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ServiceHttpResponse::_internal_response_code() const {
  return response_code_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ServiceHttpResponse::response_code() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ServiceHttpResponse.response_code)
  return _internal_response_code();
}
inline void ServiceHttpResponse::_internal_set_response_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  response_code_ = value;
}
inline void ServiceHttpResponse::set_response_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_response_code(value);
  // @@protoc_insertion_point(field_set:ServerMSG.ServiceHttpResponse.response_code)
}

// string response_reason = 3;
inline void ServiceHttpResponse::clear_response_reason() {
  response_reason_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ServiceHttpResponse::response_reason() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ServiceHttpResponse.response_reason)
  return _internal_response_reason();
}
inline void ServiceHttpResponse::set_response_reason(const std::string& value) {
  _internal_set_response_reason(value);
  // @@protoc_insertion_point(field_set:ServerMSG.ServiceHttpResponse.response_reason)
}
inline std::string* ServiceHttpResponse::mutable_response_reason() {
  // @@protoc_insertion_point(field_mutable:ServerMSG.ServiceHttpResponse.response_reason)
  return _internal_mutable_response_reason();
}
inline const std::string& ServiceHttpResponse::_internal_response_reason() const {
  return response_reason_.GetNoArena();
}
inline void ServiceHttpResponse::_internal_set_response_reason(const std::string& value) {
  
  response_reason_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ServiceHttpResponse::set_response_reason(std::string&& value) {
  
  response_reason_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ServerMSG.ServiceHttpResponse.response_reason)
}
inline void ServiceHttpResponse::set_response_reason(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  response_reason_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ServerMSG.ServiceHttpResponse.response_reason)
}
inline void ServiceHttpResponse::set_response_reason(const char* value, size_t size) {
  
  response_reason_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ServerMSG.ServiceHttpResponse.response_reason)
}
inline std::string* ServiceHttpResponse::_internal_mutable_response_reason() {
  
  return response_reason_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ServiceHttpResponse::release_response_reason() {
  // @@protoc_insertion_point(field_release:ServerMSG.ServiceHttpResponse.response_reason)
  
  return response_reason_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ServiceHttpResponse::set_allocated_response_reason(std::string* response_reason) {
  if (response_reason != nullptr) {
    
  } else {
    
  }
  response_reason_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), response_reason);
  // @@protoc_insertion_point(field_set_allocated:ServerMSG.ServiceHttpResponse.response_reason)
}

// bytes response_txt = 4;
inline void ServiceHttpResponse::clear_response_txt() {
  response_txt_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ServiceHttpResponse::response_txt() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ServiceHttpResponse.response_txt)
  return _internal_response_txt();
}
inline void ServiceHttpResponse::set_response_txt(const std::string& value) {
  _internal_set_response_txt(value);
  // @@protoc_insertion_point(field_set:ServerMSG.ServiceHttpResponse.response_txt)
}
inline std::string* ServiceHttpResponse::mutable_response_txt() {
  // @@protoc_insertion_point(field_mutable:ServerMSG.ServiceHttpResponse.response_txt)
  return _internal_mutable_response_txt();
}
inline const std::string& ServiceHttpResponse::_internal_response_txt() const {
  return response_txt_.GetNoArena();
}
inline void ServiceHttpResponse::_internal_set_response_txt(const std::string& value) {
  
  response_txt_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ServiceHttpResponse::set_response_txt(std::string&& value) {
  
  response_txt_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ServerMSG.ServiceHttpResponse.response_txt)
}
inline void ServiceHttpResponse::set_response_txt(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  response_txt_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ServerMSG.ServiceHttpResponse.response_txt)
}
inline void ServiceHttpResponse::set_response_txt(const void* value, size_t size) {
  
  response_txt_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ServerMSG.ServiceHttpResponse.response_txt)
}
inline std::string* ServiceHttpResponse::_internal_mutable_response_txt() {
  
  return response_txt_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ServiceHttpResponse::release_response_txt() {
  // @@protoc_insertion_point(field_release:ServerMSG.ServiceHttpResponse.response_txt)
  
  return response_txt_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ServiceHttpResponse::set_allocated_response_txt(std::string* response_txt) {
  if (response_txt != nullptr) {
    
  } else {
    
  }
  response_txt_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), response_txt);
  // @@protoc_insertion_point(field_set_allocated:ServerMSG.ServiceHttpResponse.response_txt)
}

// -------------------------------------------------------------------

// MessageTransmit

// bytes raw_message_head = 3;
inline void MessageTransmit::clear_raw_message_head() {
  raw_message_head_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& MessageTransmit::raw_message_head() const {
  // @@protoc_insertion_point(field_get:ServerMSG.MessageTransmit.raw_message_head)
  return _internal_raw_message_head();
}
inline void MessageTransmit::set_raw_message_head(const std::string& value) {
  _internal_set_raw_message_head(value);
  // @@protoc_insertion_point(field_set:ServerMSG.MessageTransmit.raw_message_head)
}
inline std::string* MessageTransmit::mutable_raw_message_head() {
  // @@protoc_insertion_point(field_mutable:ServerMSG.MessageTransmit.raw_message_head)
  return _internal_mutable_raw_message_head();
}
inline const std::string& MessageTransmit::_internal_raw_message_head() const {
  return raw_message_head_.GetNoArena();
}
inline void MessageTransmit::_internal_set_raw_message_head(const std::string& value) {
  
  raw_message_head_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MessageTransmit::set_raw_message_head(std::string&& value) {
  
  raw_message_head_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ServerMSG.MessageTransmit.raw_message_head)
}
inline void MessageTransmit::set_raw_message_head(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  raw_message_head_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ServerMSG.MessageTransmit.raw_message_head)
}
inline void MessageTransmit::set_raw_message_head(const void* value, size_t size) {
  
  raw_message_head_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ServerMSG.MessageTransmit.raw_message_head)
}
inline std::string* MessageTransmit::_internal_mutable_raw_message_head() {
  
  return raw_message_head_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MessageTransmit::release_raw_message_head() {
  // @@protoc_insertion_point(field_release:ServerMSG.MessageTransmit.raw_message_head)
  
  return raw_message_head_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MessageTransmit::set_allocated_raw_message_head(std::string* raw_message_head) {
  if (raw_message_head != nullptr) {
    
  } else {
    
  }
  raw_message_head_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), raw_message_head);
  // @@protoc_insertion_point(field_set_allocated:ServerMSG.MessageTransmit.raw_message_head)
}

// bytes raw_message = 4;
inline void MessageTransmit::clear_raw_message() {
  raw_message_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& MessageTransmit::raw_message() const {
  // @@protoc_insertion_point(field_get:ServerMSG.MessageTransmit.raw_message)
  return _internal_raw_message();
}
inline void MessageTransmit::set_raw_message(const std::string& value) {
  _internal_set_raw_message(value);
  // @@protoc_insertion_point(field_set:ServerMSG.MessageTransmit.raw_message)
}
inline std::string* MessageTransmit::mutable_raw_message() {
  // @@protoc_insertion_point(field_mutable:ServerMSG.MessageTransmit.raw_message)
  return _internal_mutable_raw_message();
}
inline const std::string& MessageTransmit::_internal_raw_message() const {
  return raw_message_.GetNoArena();
}
inline void MessageTransmit::_internal_set_raw_message(const std::string& value) {
  
  raw_message_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void MessageTransmit::set_raw_message(std::string&& value) {
  
  raw_message_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ServerMSG.MessageTransmit.raw_message)
}
inline void MessageTransmit::set_raw_message(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  raw_message_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ServerMSG.MessageTransmit.raw_message)
}
inline void MessageTransmit::set_raw_message(const void* value, size_t size) {
  
  raw_message_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ServerMSG.MessageTransmit.raw_message)
}
inline std::string* MessageTransmit::_internal_mutable_raw_message() {
  
  return raw_message_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* MessageTransmit::release_raw_message() {
  // @@protoc_insertion_point(field_release:ServerMSG.MessageTransmit.raw_message)
  
  return raw_message_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void MessageTransmit::set_allocated_raw_message(std::string* raw_message) {
  if (raw_message != nullptr) {
    
  } else {
    
  }
  raw_message_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), raw_message);
  // @@protoc_insertion_point(field_set_allocated:ServerMSG.MessageTransmit.raw_message)
}

// -------------------------------------------------------------------

// ServiceReady

// uint32 serverport = 1;
inline void ServiceReady::clear_serverport() {
  serverport_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ServiceReady::_internal_serverport() const {
  return serverport_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ServiceReady::serverport() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ServiceReady.serverport)
  return _internal_serverport();
}
inline void ServiceReady::_internal_set_serverport(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  serverport_ = value;
}
inline void ServiceReady::set_serverport(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_serverport(value);
  // @@protoc_insertion_point(field_set:ServerMSG.ServiceReady.serverport)
}

// bool ready = 2;
inline void ServiceReady::clear_ready() {
  ready_ = false;
}
inline bool ServiceReady::_internal_ready() const {
  return ready_;
}
inline bool ServiceReady::ready() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ServiceReady.ready)
  return _internal_ready();
}
inline void ServiceReady::_internal_set_ready(bool value) {
  
  ready_ = value;
}
inline void ServiceReady::set_ready(bool value) {
  _internal_set_ready(value);
  // @@protoc_insertion_point(field_set:ServerMSG.ServiceReady.ready)
}

// -------------------------------------------------------------------

// ServiceRegister

// uint32 serverport = 1;
inline void ServiceRegister::clear_serverport() {
  serverport_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ServiceRegister::_internal_serverport() const {
  return serverport_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ServiceRegister::serverport() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ServiceRegister.serverport)
  return _internal_serverport();
}
inline void ServiceRegister::_internal_set_serverport(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  serverport_ = value;
}
inline void ServiceRegister::set_serverport(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_serverport(value);
  // @@protoc_insertion_point(field_set:ServerMSG.ServiceRegister.serverport)
}

// uint64 update_time = 2;
inline void ServiceRegister::clear_update_time() {
  update_time_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ServiceRegister::_internal_update_time() const {
  return update_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ServiceRegister::update_time() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ServiceRegister.update_time)
  return _internal_update_time();
}
inline void ServiceRegister::_internal_set_update_time(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  update_time_ = value;
}
inline void ServiceRegister::set_update_time(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_update_time(value);
  // @@protoc_insertion_point(field_set:ServerMSG.ServiceRegister.update_time)
}

// -------------------------------------------------------------------

// SocketConnect

// uint64 vs = 1;
inline void SocketConnect::clear_vs() {
  vs_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SocketConnect::_internal_vs() const {
  return vs_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SocketConnect::vs() const {
  // @@protoc_insertion_point(field_get:ServerMSG.SocketConnect.vs)
  return _internal_vs();
}
inline void SocketConnect::_internal_set_vs(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  vs_ = value;
}
inline void SocketConnect::set_vs(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_vs(value);
  // @@protoc_insertion_point(field_set:ServerMSG.SocketConnect.vs)
}

// -------------------------------------------------------------------

// SocketClose

// uint64 vs = 1;
inline void SocketClose::clear_vs() {
  vs_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SocketClose::_internal_vs() const {
  return vs_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SocketClose::vs() const {
  // @@protoc_insertion_point(field_get:ServerMSG.SocketClose.vs)
  return _internal_vs();
}
inline void SocketClose::_internal_set_vs(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  vs_ = value;
}
inline void SocketClose::set_vs(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_vs(value);
  // @@protoc_insertion_point(field_set:ServerMSG.SocketClose.vs)
}

// -------------------------------------------------------------------

// SocketChangeDest

// uint64 vs = 1;
inline void SocketChangeDest::clear_vs() {
  vs_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SocketChangeDest::_internal_vs() const {
  return vs_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SocketChangeDest::vs() const {
  // @@protoc_insertion_point(field_get:ServerMSG.SocketChangeDest.vs)
  return _internal_vs();
}
inline void SocketChangeDest::_internal_set_vs(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  vs_ = value;
}
inline void SocketChangeDest::set_vs(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_vs(value);
  // @@protoc_insertion_point(field_set:ServerMSG.SocketChangeDest.vs)
}

// uint32 destport = 2;
inline void SocketChangeDest::clear_destport() {
  destport_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SocketChangeDest::_internal_destport() const {
  return destport_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SocketChangeDest::destport() const {
  // @@protoc_insertion_point(field_get:ServerMSG.SocketChangeDest.destport)
  return _internal_destport();
}
inline void SocketChangeDest::_internal_set_destport(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  destport_ = value;
}
inline void SocketChangeDest::set_destport(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_destport(value);
  // @@protoc_insertion_point(field_set:ServerMSG.SocketChangeDest.destport)
}

// -------------------------------------------------------------------

// SocketAuth

// uint64 vs = 1;
inline void SocketAuth::clear_vs() {
  vs_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SocketAuth::_internal_vs() const {
  return vs_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SocketAuth::vs() const {
  // @@protoc_insertion_point(field_get:ServerMSG.SocketAuth.vs)
  return _internal_vs();
}
inline void SocketAuth::_internal_set_vs(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  vs_ = value;
}
inline void SocketAuth::set_vs(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_vs(value);
  // @@protoc_insertion_point(field_set:ServerMSG.SocketAuth.vs)
}

// bytes open_id = 2;
inline void SocketAuth::clear_open_id() {
  open_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SocketAuth::open_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.SocketAuth.open_id)
  return _internal_open_id();
}
inline void SocketAuth::set_open_id(const std::string& value) {
  _internal_set_open_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.SocketAuth.open_id)
}
inline std::string* SocketAuth::mutable_open_id() {
  // @@protoc_insertion_point(field_mutable:ServerMSG.SocketAuth.open_id)
  return _internal_mutable_open_id();
}
inline const std::string& SocketAuth::_internal_open_id() const {
  return open_id_.GetNoArena();
}
inline void SocketAuth::_internal_set_open_id(const std::string& value) {
  
  open_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SocketAuth::set_open_id(std::string&& value) {
  
  open_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ServerMSG.SocketAuth.open_id)
}
inline void SocketAuth::set_open_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  open_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ServerMSG.SocketAuth.open_id)
}
inline void SocketAuth::set_open_id(const void* value, size_t size) {
  
  open_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ServerMSG.SocketAuth.open_id)
}
inline std::string* SocketAuth::_internal_mutable_open_id() {
  
  return open_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SocketAuth::release_open_id() {
  // @@protoc_insertion_point(field_release:ServerMSG.SocketAuth.open_id)
  
  return open_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SocketAuth::set_allocated_open_id(std::string* open_id) {
  if (open_id != nullptr) {
    
  } else {
    
  }
  open_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), open_id);
  // @@protoc_insertion_point(field_set_allocated:ServerMSG.SocketAuth.open_id)
}

// -------------------------------------------------------------------

// SocketLogin

// uint64 vs = 1;
inline void SocketLogin::clear_vs() {
  vs_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SocketLogin::_internal_vs() const {
  return vs_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SocketLogin::vs() const {
  // @@protoc_insertion_point(field_get:ServerMSG.SocketLogin.vs)
  return _internal_vs();
}
inline void SocketLogin::_internal_set_vs(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  vs_ = value;
}
inline void SocketLogin::set_vs(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_vs(value);
  // @@protoc_insertion_point(field_set:ServerMSG.SocketLogin.vs)
}

// bytes open_id = 2;
inline void SocketLogin::clear_open_id() {
  open_id_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SocketLogin::open_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.SocketLogin.open_id)
  return _internal_open_id();
}
inline void SocketLogin::set_open_id(const std::string& value) {
  _internal_set_open_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.SocketLogin.open_id)
}
inline std::string* SocketLogin::mutable_open_id() {
  // @@protoc_insertion_point(field_mutable:ServerMSG.SocketLogin.open_id)
  return _internal_mutable_open_id();
}
inline const std::string& SocketLogin::_internal_open_id() const {
  return open_id_.GetNoArena();
}
inline void SocketLogin::_internal_set_open_id(const std::string& value) {
  
  open_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SocketLogin::set_open_id(std::string&& value) {
  
  open_id_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ServerMSG.SocketLogin.open_id)
}
inline void SocketLogin::set_open_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  open_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ServerMSG.SocketLogin.open_id)
}
inline void SocketLogin::set_open_id(const void* value, size_t size) {
  
  open_id_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ServerMSG.SocketLogin.open_id)
}
inline std::string* SocketLogin::_internal_mutable_open_id() {
  
  return open_id_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SocketLogin::release_open_id() {
  // @@protoc_insertion_point(field_release:ServerMSG.SocketLogin.open_id)
  
  return open_id_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SocketLogin::set_allocated_open_id(std::string* open_id) {
  if (open_id != nullptr) {
    
  } else {
    
  }
  open_id_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), open_id);
  // @@protoc_insertion_point(field_set_allocated:ServerMSG.SocketLogin.open_id)
}

// -------------------------------------------------------------------

// SocketStartAccept

// -------------------------------------------------------------------

// SocketStopAccept

// -------------------------------------------------------------------

// PlayerEnterZone

// uint64 idplayer = 1;
inline void PlayerEnterZone::clear_idplayer() {
  idplayer_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PlayerEnterZone::_internal_idplayer() const {
  return idplayer_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PlayerEnterZone::idplayer() const {
  // @@protoc_insertion_point(field_get:ServerMSG.PlayerEnterZone.idplayer)
  return _internal_idplayer();
}
inline void PlayerEnterZone::_internal_set_idplayer(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  idplayer_ = value;
}
inline void PlayerEnterZone::set_idplayer(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_idplayer(value);
  // @@protoc_insertion_point(field_set:ServerMSG.PlayerEnterZone.idplayer)
}

// uint64 socket = 2;
inline void PlayerEnterZone::clear_socket() {
  socket_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PlayerEnterZone::_internal_socket() const {
  return socket_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PlayerEnterZone::socket() const {
  // @@protoc_insertion_point(field_get:ServerMSG.PlayerEnterZone.socket)
  return _internal_socket();
}
inline void PlayerEnterZone::_internal_set_socket(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  socket_ = value;
}
inline void PlayerEnterZone::set_socket(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_socket(value);
  // @@protoc_insertion_point(field_set:ServerMSG.PlayerEnterZone.socket)
}

// uint64 target_scene_idx = 4;
inline void PlayerEnterZone::clear_target_scene_idx() {
  target_scene_idx_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PlayerEnterZone::_internal_target_scene_idx() const {
  return target_scene_idx_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PlayerEnterZone::target_scene_idx() const {
  // @@protoc_insertion_point(field_get:ServerMSG.PlayerEnterZone.target_scene_idx)
  return _internal_target_scene_idx();
}
inline void PlayerEnterZone::_internal_set_target_scene_idx(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  target_scene_idx_ = value;
}
inline void PlayerEnterZone::set_target_scene_idx(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_target_scene_idx(value);
  // @@protoc_insertion_point(field_set:ServerMSG.PlayerEnterZone.target_scene_idx)
}

// float posx = 5;
inline void PlayerEnterZone::clear_posx() {
  posx_ = 0;
}
inline float PlayerEnterZone::_internal_posx() const {
  return posx_;
}
inline float PlayerEnterZone::posx() const {
  // @@protoc_insertion_point(field_get:ServerMSG.PlayerEnterZone.posx)
  return _internal_posx();
}
inline void PlayerEnterZone::_internal_set_posx(float value) {
  
  posx_ = value;
}
inline void PlayerEnterZone::set_posx(float value) {
  _internal_set_posx(value);
  // @@protoc_insertion_point(field_set:ServerMSG.PlayerEnterZone.posx)
}

// float posy = 6;
inline void PlayerEnterZone::clear_posy() {
  posy_ = 0;
}
inline float PlayerEnterZone::_internal_posy() const {
  return posy_;
}
inline float PlayerEnterZone::posy() const {
  // @@protoc_insertion_point(field_get:ServerMSG.PlayerEnterZone.posy)
  return _internal_posy();
}
inline void PlayerEnterZone::_internal_set_posy(float value) {
  
  posy_ = value;
}
inline void PlayerEnterZone::set_posy(float value) {
  _internal_set_posy(value);
  // @@protoc_insertion_point(field_set:ServerMSG.PlayerEnterZone.posy)
}

// float face = 7;
inline void PlayerEnterZone::clear_face() {
  face_ = 0;
}
inline float PlayerEnterZone::_internal_face() const {
  return face_;
}
inline float PlayerEnterZone::face() const {
  // @@protoc_insertion_point(field_get:ServerMSG.PlayerEnterZone.face)
  return _internal_face();
}
inline void PlayerEnterZone::_internal_set_face(float value) {
  
  face_ = value;
}
inline void PlayerEnterZone::set_face(float value) {
  _internal_set_face(value);
  // @@protoc_insertion_point(field_set:ServerMSG.PlayerEnterZone.face)
}

// -------------------------------------------------------------------

// PlayerChangeZone

// uint64 idplayer = 1;
inline void PlayerChangeZone::clear_idplayer() {
  idplayer_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PlayerChangeZone::_internal_idplayer() const {
  return idplayer_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PlayerChangeZone::idplayer() const {
  // @@protoc_insertion_point(field_get:ServerMSG.PlayerChangeZone.idplayer)
  return _internal_idplayer();
}
inline void PlayerChangeZone::_internal_set_idplayer(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  idplayer_ = value;
}
inline void PlayerChangeZone::set_idplayer(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_idplayer(value);
  // @@protoc_insertion_point(field_set:ServerMSG.PlayerChangeZone.idplayer)
}

// uint64 socket = 2;
inline void PlayerChangeZone::clear_socket() {
  socket_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PlayerChangeZone::_internal_socket() const {
  return socket_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PlayerChangeZone::socket() const {
  // @@protoc_insertion_point(field_get:ServerMSG.PlayerChangeZone.socket)
  return _internal_socket();
}
inline void PlayerChangeZone::_internal_set_socket(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  socket_ = value;
}
inline void PlayerChangeZone::set_socket(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_socket(value);
  // @@protoc_insertion_point(field_set:ServerMSG.PlayerChangeZone.socket)
}

// uint32 idzone = 3;
inline void PlayerChangeZone::clear_idzone() {
  idzone_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PlayerChangeZone::_internal_idzone() const {
  return idzone_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PlayerChangeZone::idzone() const {
  // @@protoc_insertion_point(field_get:ServerMSG.PlayerChangeZone.idzone)
  return _internal_idzone();
}
inline void PlayerChangeZone::_internal_set_idzone(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  idzone_ = value;
}
inline void PlayerChangeZone::set_idzone(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_idzone(value);
  // @@protoc_insertion_point(field_set:ServerMSG.PlayerChangeZone.idzone)
}

// uint64 target_scene = 4;
inline void PlayerChangeZone::clear_target_scene() {
  target_scene_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PlayerChangeZone::_internal_target_scene() const {
  return target_scene_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PlayerChangeZone::target_scene() const {
  // @@protoc_insertion_point(field_get:ServerMSG.PlayerChangeZone.target_scene)
  return _internal_target_scene();
}
inline void PlayerChangeZone::_internal_set_target_scene(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  target_scene_ = value;
}
inline void PlayerChangeZone::set_target_scene(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_target_scene(value);
  // @@protoc_insertion_point(field_set:ServerMSG.PlayerChangeZone.target_scene)
}

// float posx = 6;
inline void PlayerChangeZone::clear_posx() {
  posx_ = 0;
}
inline float PlayerChangeZone::_internal_posx() const {
  return posx_;
}
inline float PlayerChangeZone::posx() const {
  // @@protoc_insertion_point(field_get:ServerMSG.PlayerChangeZone.posx)
  return _internal_posx();
}
inline void PlayerChangeZone::_internal_set_posx(float value) {
  
  posx_ = value;
}
inline void PlayerChangeZone::set_posx(float value) {
  _internal_set_posx(value);
  // @@protoc_insertion_point(field_set:ServerMSG.PlayerChangeZone.posx)
}

// float posy = 7;
inline void PlayerChangeZone::clear_posy() {
  posy_ = 0;
}
inline float PlayerChangeZone::_internal_posy() const {
  return posy_;
}
inline float PlayerChangeZone::posy() const {
  // @@protoc_insertion_point(field_get:ServerMSG.PlayerChangeZone.posy)
  return _internal_posy();
}
inline void PlayerChangeZone::_internal_set_posy(float value) {
  
  posy_ = value;
}
inline void PlayerChangeZone::set_posy(float value) {
  _internal_set_posy(value);
  // @@protoc_insertion_point(field_set:ServerMSG.PlayerChangeZone.posy)
}

// float range = 8;
inline void PlayerChangeZone::clear_range() {
  range_ = 0;
}
inline float PlayerChangeZone::_internal_range() const {
  return range_;
}
inline float PlayerChangeZone::range() const {
  // @@protoc_insertion_point(field_get:ServerMSG.PlayerChangeZone.range)
  return _internal_range();
}
inline void PlayerChangeZone::_internal_set_range(float value) {
  
  range_ = value;
}
inline void PlayerChangeZone::set_range(float value) {
  _internal_set_range(value);
  // @@protoc_insertion_point(field_set:ServerMSG.PlayerChangeZone.range)
}

// float face = 9;
inline void PlayerChangeZone::clear_face() {
  face_ = 0;
}
inline float PlayerChangeZone::_internal_face() const {
  return face_;
}
inline float PlayerChangeZone::face() const {
  // @@protoc_insertion_point(field_get:ServerMSG.PlayerChangeZone.face)
  return _internal_face();
}
inline void PlayerChangeZone::_internal_set_face(float value) {
  
  face_ = value;
}
inline void PlayerChangeZone::set_face(float value) {
  _internal_set_face(value);
  // @@protoc_insertion_point(field_set:ServerMSG.PlayerChangeZone.face)
}

// -------------------------------------------------------------------

// PlayerChangeZone_Data

// uint64 idplayer = 1;
inline void PlayerChangeZone_Data::clear_idplayer() {
  idplayer_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PlayerChangeZone_Data::_internal_idplayer() const {
  return idplayer_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PlayerChangeZone_Data::idplayer() const {
  // @@protoc_insertion_point(field_get:ServerMSG.PlayerChangeZone_Data.idplayer)
  return _internal_idplayer();
}
inline void PlayerChangeZone_Data::_internal_set_idplayer(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  idplayer_ = value;
}
inline void PlayerChangeZone_Data::set_idplayer(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_idplayer(value);
  // @@protoc_insertion_point(field_set:ServerMSG.PlayerChangeZone_Data.idplayer)
}

// uint64 socket = 2;
inline void PlayerChangeZone_Data::clear_socket() {
  socket_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PlayerChangeZone_Data::_internal_socket() const {
  return socket_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PlayerChangeZone_Data::socket() const {
  // @@protoc_insertion_point(field_get:ServerMSG.PlayerChangeZone_Data.socket)
  return _internal_socket();
}
inline void PlayerChangeZone_Data::_internal_set_socket(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  socket_ = value;
}
inline void PlayerChangeZone_Data::set_socket(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_socket(value);
  // @@protoc_insertion_point(field_set:ServerMSG.PlayerChangeZone_Data.socket)
}

// -------------------------------------------------------------------

// PlayerLogout

// uint64 idplayer = 1;
inline void PlayerLogout::clear_idplayer() {
  idplayer_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PlayerLogout::_internal_idplayer() const {
  return idplayer_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PlayerLogout::idplayer() const {
  // @@protoc_insertion_point(field_get:ServerMSG.PlayerLogout.idplayer)
  return _internal_idplayer();
}
inline void PlayerLogout::_internal_set_idplayer(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  idplayer_ = value;
}
inline void PlayerLogout::set_idplayer(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_idplayer(value);
  // @@protoc_insertion_point(field_set:ServerMSG.PlayerLogout.idplayer)
}

// uint64 socket = 2;
inline void PlayerLogout::clear_socket() {
  socket_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PlayerLogout::_internal_socket() const {
  return socket_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PlayerLogout::socket() const {
  // @@protoc_insertion_point(field_get:ServerMSG.PlayerLogout.socket)
  return _internal_socket();
}
inline void PlayerLogout::_internal_set_socket(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  socket_ = value;
}
inline void PlayerLogout::set_socket(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_socket(value);
  // @@protoc_insertion_point(field_set:ServerMSG.PlayerLogout.socket)
}

// -------------------------------------------------------------------

// SystemVarChange

// uint32 keyidx = 1;
inline void SystemVarChange::clear_keyidx() {
  keyidx_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SystemVarChange::_internal_keyidx() const {
  return keyidx_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SystemVarChange::keyidx() const {
  // @@protoc_insertion_point(field_get:ServerMSG.SystemVarChange.keyidx)
  return _internal_keyidx();
}
inline void SystemVarChange::_internal_set_keyidx(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  keyidx_ = value;
}
inline void SystemVarChange::set_keyidx(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_keyidx(value);
  // @@protoc_insertion_point(field_set:ServerMSG.SystemVarChange.keyidx)
}

// uint32 idx = 2;
inline void SystemVarChange::clear_idx() {
  idx_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SystemVarChange::_internal_idx() const {
  return idx_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SystemVarChange::idx() const {
  // @@protoc_insertion_point(field_get:ServerMSG.SystemVarChange.idx)
  return _internal_idx();
}
inline void SystemVarChange::_internal_set_idx(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  idx_ = value;
}
inline void SystemVarChange::set_idx(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_idx(value);
  // @@protoc_insertion_point(field_set:ServerMSG.SystemVarChange.idx)
}

// uint32 val = 3;
inline void SystemVarChange::clear_val() {
  val_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SystemVarChange::_internal_val() const {
  return val_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 SystemVarChange::val() const {
  // @@protoc_insertion_point(field_get:ServerMSG.SystemVarChange.val)
  return _internal_val();
}
inline void SystemVarChange::_internal_set_val(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  val_ = value;
}
inline void SystemVarChange::set_val(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_val(value);
  // @@protoc_insertion_point(field_set:ServerMSG.SystemVarChange.val)
}

// string str = 4;
inline void SystemVarChange::clear_str() {
  str_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& SystemVarChange::str() const {
  // @@protoc_insertion_point(field_get:ServerMSG.SystemVarChange.str)
  return _internal_str();
}
inline void SystemVarChange::set_str(const std::string& value) {
  _internal_set_str(value);
  // @@protoc_insertion_point(field_set:ServerMSG.SystemVarChange.str)
}
inline std::string* SystemVarChange::mutable_str() {
  // @@protoc_insertion_point(field_mutable:ServerMSG.SystemVarChange.str)
  return _internal_mutable_str();
}
inline const std::string& SystemVarChange::_internal_str() const {
  return str_.GetNoArena();
}
inline void SystemVarChange::_internal_set_str(const std::string& value) {
  
  str_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void SystemVarChange::set_str(std::string&& value) {
  
  str_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ServerMSG.SystemVarChange.str)
}
inline void SystemVarChange::set_str(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  str_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ServerMSG.SystemVarChange.str)
}
inline void SystemVarChange::set_str(const char* value, size_t size) {
  
  str_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ServerMSG.SystemVarChange.str)
}
inline std::string* SystemVarChange::_internal_mutable_str() {
  
  return str_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* SystemVarChange::release_str() {
  // @@protoc_insertion_point(field_release:ServerMSG.SystemVarChange.str)
  
  return str_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void SystemVarChange::set_allocated_str(std::string* str) {
  if (str != nullptr) {
    
  } else {
    
  }
  str_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), str);
  // @@protoc_insertion_point(field_set_allocated:ServerMSG.SystemVarChange.str)
}

// .ServerMSG.SystemVarChange.SystemVarChangeType type = 5;
inline void SystemVarChange::clear_type() {
  type_ = 0;
}
inline ::ServerMSG::SystemVarChange_SystemVarChangeType SystemVarChange::_internal_type() const {
  return static_cast< ::ServerMSG::SystemVarChange_SystemVarChangeType >(type_);
}
inline ::ServerMSG::SystemVarChange_SystemVarChangeType SystemVarChange::type() const {
  // @@protoc_insertion_point(field_get:ServerMSG.SystemVarChange.type)
  return _internal_type();
}
inline void SystemVarChange::_internal_set_type(::ServerMSG::SystemVarChange_SystemVarChangeType value) {
  
  type_ = value;
}
inline void SystemVarChange::set_type(::ServerMSG::SystemVarChange_SystemVarChangeType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:ServerMSG.SystemVarChange.type)
}

// -------------------------------------------------------------------

// SceneCreate

// uint64 scene_id = 1;
inline void SceneCreate::clear_scene_id() {
  scene_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SceneCreate::_internal_scene_id() const {
  return scene_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SceneCreate::scene_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.SceneCreate.scene_id)
  return _internal_scene_id();
}
inline void SceneCreate::_internal_set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  scene_id_ = value;
}
inline void SceneCreate::set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.SceneCreate.scene_id)
}

// -------------------------------------------------------------------

// PhaseCreate

// uint64 scene_id = 1;
inline void PhaseCreate::clear_scene_id() {
  scene_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PhaseCreate::_internal_scene_id() const {
  return scene_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PhaseCreate::scene_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.PhaseCreate.scene_id)
  return _internal_scene_id();
}
inline void PhaseCreate::_internal_set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  scene_id_ = value;
}
inline void PhaseCreate::set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.PhaseCreate.scene_id)
}

// uint64 phase_id = 2;
inline void PhaseCreate::clear_phase_id() {
  phase_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PhaseCreate::_internal_phase_id() const {
  return phase_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PhaseCreate::phase_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.PhaseCreate.phase_id)
  return _internal_phase_id();
}
inline void PhaseCreate::_internal_set_phase_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  phase_id_ = value;
}
inline void PhaseCreate::set_phase_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_phase_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.PhaseCreate.phase_id)
}

// -------------------------------------------------------------------

// PhaseDestory

// uint64 scene_id = 1;
inline void PhaseDestory::clear_scene_id() {
  scene_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PhaseDestory::_internal_scene_id() const {
  return scene_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PhaseDestory::scene_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.PhaseDestory.scene_id)
  return _internal_scene_id();
}
inline void PhaseDestory::_internal_set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  scene_id_ = value;
}
inline void PhaseDestory::set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.PhaseDestory.scene_id)
}

// uint64 phase_id = 2;
inline void PhaseDestory::clear_phase_id() {
  phase_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PhaseDestory::_internal_phase_id() const {
  return phase_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 PhaseDestory::phase_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.PhaseDestory.phase_id)
  return _internal_phase_id();
}
inline void PhaseDestory::_internal_set_phase_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  phase_id_ = value;
}
inline void PhaseDestory::set_phase_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_phase_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.PhaseDestory.phase_id)
}

// -------------------------------------------------------------------

// MonsterGen

// uint64 scene_id = 1;
inline void MonsterGen::clear_scene_id() {
  scene_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MonsterGen::_internal_scene_id() const {
  return scene_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MonsterGen::scene_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.MonsterGen.scene_id)
  return _internal_scene_id();
}
inline void MonsterGen::_internal_set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  scene_id_ = value;
}
inline void MonsterGen::set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.MonsterGen.scene_id)
}

// uint64 phase_id = 2;
inline void MonsterGen::clear_phase_id() {
  phase_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MonsterGen::_internal_phase_id() const {
  return phase_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MonsterGen::phase_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.MonsterGen.phase_id)
  return _internal_phase_id();
}
inline void MonsterGen::_internal_set_phase_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  phase_id_ = value;
}
inline void MonsterGen::set_phase_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_phase_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.MonsterGen.phase_id)
}

// uint32 gen_id = 3;
inline void MonsterGen::clear_gen_id() {
  gen_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MonsterGen::_internal_gen_id() const {
  return gen_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MonsterGen::gen_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.MonsterGen.gen_id)
  return _internal_gen_id();
}
inline void MonsterGen::_internal_set_gen_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  gen_id_ = value;
}
inline void MonsterGen::set_gen_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_gen_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.MonsterGen.gen_id)
}

// uint32 monster_type = 4;
inline void MonsterGen::clear_monster_type() {
  monster_type_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MonsterGen::_internal_monster_type() const {
  return monster_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MonsterGen::monster_type() const {
  // @@protoc_insertion_point(field_get:ServerMSG.MonsterGen.monster_type)
  return _internal_monster_type();
}
inline void MonsterGen::_internal_set_monster_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  monster_type_ = value;
}
inline void MonsterGen::set_monster_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_monster_type(value);
  // @@protoc_insertion_point(field_set:ServerMSG.MonsterGen.monster_type)
}

// float posx = 5;
inline void MonsterGen::clear_posx() {
  posx_ = 0;
}
inline float MonsterGen::_internal_posx() const {
  return posx_;
}
inline float MonsterGen::posx() const {
  // @@protoc_insertion_point(field_get:ServerMSG.MonsterGen.posx)
  return _internal_posx();
}
inline void MonsterGen::_internal_set_posx(float value) {
  
  posx_ = value;
}
inline void MonsterGen::set_posx(float value) {
  _internal_set_posx(value);
  // @@protoc_insertion_point(field_set:ServerMSG.MonsterGen.posx)
}

// float posy = 6;
inline void MonsterGen::clear_posy() {
  posy_ = 0;
}
inline float MonsterGen::_internal_posy() const {
  return posy_;
}
inline float MonsterGen::posy() const {
  // @@protoc_insertion_point(field_get:ServerMSG.MonsterGen.posy)
  return _internal_posy();
}
inline void MonsterGen::_internal_set_posy(float value) {
  
  posy_ = value;
}
inline void MonsterGen::set_posy(float value) {
  _internal_set_posy(value);
  // @@protoc_insertion_point(field_set:ServerMSG.MonsterGen.posy)
}

// uint32 camp_id = 7;
inline void MonsterGen::clear_camp_id() {
  camp_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MonsterGen::_internal_camp_id() const {
  return camp_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MonsterGen::camp_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.MonsterGen.camp_id)
  return _internal_camp_id();
}
inline void MonsterGen::_internal_set_camp_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  camp_id_ = value;
}
inline void MonsterGen::set_camp_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_camp_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.MonsterGen.camp_id)
}

// uint32 monster_id = 8;
inline void MonsterGen::clear_monster_id() {
  monster_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MonsterGen::_internal_monster_id() const {
  return monster_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MonsterGen::monster_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.MonsterGen.monster_id)
  return _internal_monster_id();
}
inline void MonsterGen::_internal_set_monster_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  monster_id_ = value;
}
inline void MonsterGen::set_monster_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_monster_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.MonsterGen.monster_id)
}

// -------------------------------------------------------------------

// MonsterGenMulti

// uint64 scene_id = 1;
inline void MonsterGenMulti::clear_scene_id() {
  scene_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MonsterGenMulti::_internal_scene_id() const {
  return scene_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MonsterGenMulti::scene_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.MonsterGenMulti.scene_id)
  return _internal_scene_id();
}
inline void MonsterGenMulti::_internal_set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  scene_id_ = value;
}
inline void MonsterGenMulti::set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.MonsterGenMulti.scene_id)
}

// uint64 phase_id = 2;
inline void MonsterGenMulti::clear_phase_id() {
  phase_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MonsterGenMulti::_internal_phase_id() const {
  return phase_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MonsterGenMulti::phase_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.MonsterGenMulti.phase_id)
  return _internal_phase_id();
}
inline void MonsterGenMulti::_internal_set_phase_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  phase_id_ = value;
}
inline void MonsterGenMulti::set_phase_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_phase_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.MonsterGenMulti.phase_id)
}

// uint32 gen_id = 3;
inline void MonsterGenMulti::clear_gen_id() {
  gen_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MonsterGenMulti::_internal_gen_id() const {
  return gen_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MonsterGenMulti::gen_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.MonsterGenMulti.gen_id)
  return _internal_gen_id();
}
inline void MonsterGenMulti::_internal_set_gen_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  gen_id_ = value;
}
inline void MonsterGenMulti::set_gen_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_gen_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.MonsterGenMulti.gen_id)
}

// uint32 monster_type = 4;
inline void MonsterGenMulti::clear_monster_type() {
  monster_type_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MonsterGenMulti::_internal_monster_type() const {
  return monster_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MonsterGenMulti::monster_type() const {
  // @@protoc_insertion_point(field_get:ServerMSG.MonsterGenMulti.monster_type)
  return _internal_monster_type();
}
inline void MonsterGenMulti::_internal_set_monster_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  monster_type_ = value;
}
inline void MonsterGenMulti::set_monster_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_monster_type(value);
  // @@protoc_insertion_point(field_set:ServerMSG.MonsterGenMulti.monster_type)
}

// float posx = 5;
inline void MonsterGenMulti::clear_posx() {
  posx_ = 0;
}
inline float MonsterGenMulti::_internal_posx() const {
  return posx_;
}
inline float MonsterGenMulti::posx() const {
  // @@protoc_insertion_point(field_get:ServerMSG.MonsterGenMulti.posx)
  return _internal_posx();
}
inline void MonsterGenMulti::_internal_set_posx(float value) {
  
  posx_ = value;
}
inline void MonsterGenMulti::set_posx(float value) {
  _internal_set_posx(value);
  // @@protoc_insertion_point(field_set:ServerMSG.MonsterGenMulti.posx)
}

// float posy = 6;
inline void MonsterGenMulti::clear_posy() {
  posy_ = 0;
}
inline float MonsterGenMulti::_internal_posy() const {
  return posy_;
}
inline float MonsterGenMulti::posy() const {
  // @@protoc_insertion_point(field_get:ServerMSG.MonsterGenMulti.posy)
  return _internal_posy();
}
inline void MonsterGenMulti::_internal_set_posy(float value) {
  
  posy_ = value;
}
inline void MonsterGenMulti::set_posy(float value) {
  _internal_set_posy(value);
  // @@protoc_insertion_point(field_set:ServerMSG.MonsterGenMulti.posy)
}

// uint32 camp_id = 7;
inline void MonsterGenMulti::clear_camp_id() {
  camp_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MonsterGenMulti::_internal_camp_id() const {
  return camp_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MonsterGenMulti::camp_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.MonsterGenMulti.camp_id)
  return _internal_camp_id();
}
inline void MonsterGenMulti::_internal_set_camp_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  camp_id_ = value;
}
inline void MonsterGenMulti::set_camp_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_camp_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.MonsterGenMulti.camp_id)
}

// uint32 monster_id = 8;
inline void MonsterGenMulti::clear_monster_id() {
  monster_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MonsterGenMulti::_internal_monster_id() const {
  return monster_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MonsterGenMulti::monster_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.MonsterGenMulti.monster_id)
  return _internal_monster_id();
}
inline void MonsterGenMulti::_internal_set_monster_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  monster_id_ = value;
}
inline void MonsterGenMulti::set_monster_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_monster_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.MonsterGenMulti.monster_id)
}

// uint32 num = 9;
inline void MonsterGenMulti::clear_num() {
  num_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MonsterGenMulti::_internal_num() const {
  return num_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MonsterGenMulti::num() const {
  // @@protoc_insertion_point(field_get:ServerMSG.MonsterGenMulti.num)
  return _internal_num();
}
inline void MonsterGenMulti::_internal_set_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  num_ = value;
}
inline void MonsterGenMulti::set_num(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_num(value);
  // @@protoc_insertion_point(field_set:ServerMSG.MonsterGenMulti.num)
}

// float range = 10;
inline void MonsterGenMulti::clear_range() {
  range_ = 0;
}
inline float MonsterGenMulti::_internal_range() const {
  return range_;
}
inline float MonsterGenMulti::range() const {
  // @@protoc_insertion_point(field_get:ServerMSG.MonsterGenMulti.range)
  return _internal_range();
}
inline void MonsterGenMulti::_internal_set_range(float value) {
  
  range_ = value;
}
inline void MonsterGenMulti::set_range(float value) {
  _internal_set_range(value);
  // @@protoc_insertion_point(field_set:ServerMSG.MonsterGenMulti.range)
}

// -------------------------------------------------------------------

// MonsterDestory

// repeated uint64 monster_id = 1;
inline int MonsterDestory::_internal_monster_id_size() const {
  return monster_id_.size();
}
inline int MonsterDestory::monster_id_size() const {
  return _internal_monster_id_size();
}
inline void MonsterDestory::clear_monster_id() {
  monster_id_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MonsterDestory::_internal_monster_id(int index) const {
  return monster_id_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MonsterDestory::monster_id(int index) const {
  // @@protoc_insertion_point(field_get:ServerMSG.MonsterDestory.monster_id)
  return _internal_monster_id(index);
}
inline void MonsterDestory::set_monster_id(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  monster_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:ServerMSG.MonsterDestory.monster_id)
}
inline void MonsterDestory::_internal_add_monster_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  monster_id_.Add(value);
}
inline void MonsterDestory::add_monster_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_monster_id(value);
  // @@protoc_insertion_point(field_add:ServerMSG.MonsterDestory.monster_id)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
MonsterDestory::_internal_monster_id() const {
  return monster_id_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
MonsterDestory::monster_id() const {
  // @@protoc_insertion_point(field_list:ServerMSG.MonsterDestory.monster_id)
  return _internal_monster_id();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
MonsterDestory::_internal_mutable_monster_id() {
  return &monster_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
MonsterDestory::mutable_monster_id() {
  // @@protoc_insertion_point(field_mutable_list:ServerMSG.MonsterDestory.monster_id)
  return _internal_mutable_monster_id();
}

// -------------------------------------------------------------------

// MonsterGenOnce

// uint64 scene_id = 1;
inline void MonsterGenOnce::clear_scene_id() {
  scene_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MonsterGenOnce::_internal_scene_id() const {
  return scene_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MonsterGenOnce::scene_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.MonsterGenOnce.scene_id)
  return _internal_scene_id();
}
inline void MonsterGenOnce::_internal_set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  scene_id_ = value;
}
inline void MonsterGenOnce::set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.MonsterGenOnce.scene_id)
}

// uint32 gen_id = 2;
inline void MonsterGenOnce::clear_gen_id() {
  gen_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MonsterGenOnce::_internal_gen_id() const {
  return gen_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MonsterGenOnce::gen_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.MonsterGenOnce.gen_id)
  return _internal_gen_id();
}
inline void MonsterGenOnce::_internal_set_gen_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  gen_id_ = value;
}
inline void MonsterGenOnce::set_gen_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_gen_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.MonsterGenOnce.gen_id)
}

// uint64 phase_id = 3;
inline void MonsterGenOnce::clear_phase_id() {
  phase_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MonsterGenOnce::_internal_phase_id() const {
  return phase_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MonsterGenOnce::phase_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.MonsterGenOnce.phase_id)
  return _internal_phase_id();
}
inline void MonsterGenOnce::_internal_set_phase_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  phase_id_ = value;
}
inline void MonsterGenOnce::set_phase_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_phase_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.MonsterGenOnce.phase_id)
}

// -------------------------------------------------------------------

// ActiveGen

// uint64 scene_id = 1;
inline void ActiveGen::clear_scene_id() {
  scene_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ActiveGen::_internal_scene_id() const {
  return scene_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ActiveGen::scene_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActiveGen.scene_id)
  return _internal_scene_id();
}
inline void ActiveGen::_internal_set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  scene_id_ = value;
}
inline void ActiveGen::set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.ActiveGen.scene_id)
}

// uint32 gen_id = 2;
inline void ActiveGen::clear_gen_id() {
  gen_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ActiveGen::_internal_gen_id() const {
  return gen_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ActiveGen::gen_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActiveGen.gen_id)
  return _internal_gen_id();
}
inline void ActiveGen::_internal_set_gen_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  gen_id_ = value;
}
inline void ActiveGen::set_gen_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_gen_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.ActiveGen.gen_id)
}

// bool active = 3;
inline void ActiveGen::clear_active() {
  active_ = false;
}
inline bool ActiveGen::_internal_active() const {
  return active_;
}
inline bool ActiveGen::active() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActiveGen.active)
  return _internal_active();
}
inline void ActiveGen::_internal_set_active(bool value) {
  
  active_ = value;
}
inline void ActiveGen::set_active(bool value) {
  _internal_set_active(value);
  // @@protoc_insertion_point(field_set:ServerMSG.ActiveGen.active)
}

// -------------------------------------------------------------------

// KillGen

// uint64 scene_id = 1;
inline void KillGen::clear_scene_id() {
  scene_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 KillGen::_internal_scene_id() const {
  return scene_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 KillGen::scene_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.KillGen.scene_id)
  return _internal_scene_id();
}
inline void KillGen::_internal_set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  scene_id_ = value;
}
inline void KillGen::set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.KillGen.scene_id)
}

// uint32 gen_id = 2;
inline void KillGen::clear_gen_id() {
  gen_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 KillGen::_internal_gen_id() const {
  return gen_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 KillGen::gen_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.KillGen.gen_id)
  return _internal_gen_id();
}
inline void KillGen::_internal_set_gen_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  gen_id_ = value;
}
inline void KillGen::set_gen_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_gen_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.KillGen.gen_id)
}

// -------------------------------------------------------------------

// ActorCreate

// uint64 actor_id = 1;
inline void ActorCreate::clear_actor_id() {
  actor_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ActorCreate::_internal_actor_id() const {
  return actor_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ActorCreate::actor_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorCreate.actor_id)
  return _internal_actor_id();
}
inline void ActorCreate::_internal_set_actor_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  actor_id_ = value;
}
inline void ActorCreate::set_actor_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_actor_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.ActorCreate.actor_id)
}

// uint64 scene_id = 2;
inline void ActorCreate::clear_scene_id() {
  scene_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ActorCreate::_internal_scene_id() const {
  return scene_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ActorCreate::scene_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorCreate.scene_id)
  return _internal_scene_id();
}
inline void ActorCreate::_internal_set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  scene_id_ = value;
}
inline void ActorCreate::set_scene_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_scene_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.ActorCreate.scene_id)
}

// string name = 4;
inline void ActorCreate::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ActorCreate::name() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorCreate.name)
  return _internal_name();
}
inline void ActorCreate::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:ServerMSG.ActorCreate.name)
}
inline std::string* ActorCreate::mutable_name() {
  // @@protoc_insertion_point(field_mutable:ServerMSG.ActorCreate.name)
  return _internal_mutable_name();
}
inline const std::string& ActorCreate::_internal_name() const {
  return name_.GetNoArena();
}
inline void ActorCreate::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ActorCreate::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ServerMSG.ActorCreate.name)
}
inline void ActorCreate::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ServerMSG.ActorCreate.name)
}
inline void ActorCreate::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ServerMSG.ActorCreate.name)
}
inline std::string* ActorCreate::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ActorCreate::release_name() {
  // @@protoc_insertion_point(field_release:ServerMSG.ActorCreate.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ActorCreate::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ServerMSG.ActorCreate.name)
}

// uint32 actortype = 5;
inline void ActorCreate::clear_actortype() {
  actortype_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ActorCreate::_internal_actortype() const {
  return actortype_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ActorCreate::actortype() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorCreate.actortype)
  return _internal_actortype();
}
inline void ActorCreate::_internal_set_actortype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  actortype_ = value;
}
inline void ActorCreate::set_actortype(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_actortype(value);
  // @@protoc_insertion_point(field_set:ServerMSG.ActorCreate.actortype)
}

// uint32 baselook = 6;
inline void ActorCreate::clear_baselook() {
  baselook_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ActorCreate::_internal_baselook() const {
  return baselook_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ActorCreate::baselook() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorCreate.baselook)
  return _internal_baselook();
}
inline void ActorCreate::_internal_set_baselook(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  baselook_ = value;
}
inline void ActorCreate::set_baselook(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_baselook(value);
  // @@protoc_insertion_point(field_set:ServerMSG.ActorCreate.baselook)
}

// uint32 prof = 7;
inline void ActorCreate::clear_prof() {
  prof_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ActorCreate::_internal_prof() const {
  return prof_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ActorCreate::prof() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorCreate.prof)
  return _internal_prof();
}
inline void ActorCreate::_internal_set_prof(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  prof_ = value;
}
inline void ActorCreate::set_prof(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_prof(value);
  // @@protoc_insertion_point(field_set:ServerMSG.ActorCreate.prof)
}

// uint32 lev = 8;
inline void ActorCreate::clear_lev() {
  lev_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ActorCreate::_internal_lev() const {
  return lev_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ActorCreate::lev() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorCreate.lev)
  return _internal_lev();
}
inline void ActorCreate::_internal_set_lev(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  lev_ = value;
}
inline void ActorCreate::set_lev(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_lev(value);
  // @@protoc_insertion_point(field_set:ServerMSG.ActorCreate.lev)
}

// uint32 campid = 9;
inline void ActorCreate::clear_campid() {
  campid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ActorCreate::_internal_campid() const {
  return campid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ActorCreate::campid() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorCreate.campid)
  return _internal_campid();
}
inline void ActorCreate::_internal_set_campid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  campid_ = value;
}
inline void ActorCreate::set_campid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_campid(value);
  // @@protoc_insertion_point(field_set:ServerMSG.ActorCreate.campid)
}

// uint32 hp = 10;
inline void ActorCreate::clear_hp() {
  hp_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ActorCreate::_internal_hp() const {
  return hp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ActorCreate::hp() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorCreate.hp)
  return _internal_hp();
}
inline void ActorCreate::_internal_set_hp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  hp_ = value;
}
inline void ActorCreate::set_hp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hp(value);
  // @@protoc_insertion_point(field_set:ServerMSG.ActorCreate.hp)
}

// uint32 hpmax = 11;
inline void ActorCreate::clear_hpmax() {
  hpmax_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ActorCreate::_internal_hpmax() const {
  return hpmax_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ActorCreate::hpmax() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorCreate.hpmax)
  return _internal_hpmax();
}
inline void ActorCreate::_internal_set_hpmax(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  hpmax_ = value;
}
inline void ActorCreate::set_hpmax(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_hpmax(value);
  // @@protoc_insertion_point(field_set:ServerMSG.ActorCreate.hpmax)
}

// uint32 mp = 12;
inline void ActorCreate::clear_mp() {
  mp_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ActorCreate::_internal_mp() const {
  return mp_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ActorCreate::mp() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorCreate.mp)
  return _internal_mp();
}
inline void ActorCreate::_internal_set_mp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  mp_ = value;
}
inline void ActorCreate::set_mp(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_mp(value);
  // @@protoc_insertion_point(field_set:ServerMSG.ActorCreate.mp)
}

// uint32 mpmax = 13;
inline void ActorCreate::clear_mpmax() {
  mpmax_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ActorCreate::_internal_mpmax() const {
  return mpmax_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ActorCreate::mpmax() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorCreate.mpmax)
  return _internal_mpmax();
}
inline void ActorCreate::_internal_set_mpmax(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  mpmax_ = value;
}
inline void ActorCreate::set_mpmax(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_mpmax(value);
  // @@protoc_insertion_point(field_set:ServerMSG.ActorCreate.mpmax)
}

// uint32 movespd = 14;
inline void ActorCreate::clear_movespd() {
  movespd_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ActorCreate::_internal_movespd() const {
  return movespd_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ActorCreate::movespd() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorCreate.movespd)
  return _internal_movespd();
}
inline void ActorCreate::_internal_set_movespd(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  movespd_ = value;
}
inline void ActorCreate::set_movespd(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_movespd(value);
  // @@protoc_insertion_point(field_set:ServerMSG.ActorCreate.movespd)
}

// uint64 ownerid = 15;
inline void ActorCreate::clear_ownerid() {
  ownerid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ActorCreate::_internal_ownerid() const {
  return ownerid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ActorCreate::ownerid() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorCreate.ownerid)
  return _internal_ownerid();
}
inline void ActorCreate::_internal_set_ownerid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  ownerid_ = value;
}
inline void ActorCreate::set_ownerid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_ownerid(value);
  // @@protoc_insertion_point(field_set:ServerMSG.ActorCreate.ownerid)
}

// float posx = 16;
inline void ActorCreate::clear_posx() {
  posx_ = 0;
}
inline float ActorCreate::_internal_posx() const {
  return posx_;
}
inline float ActorCreate::posx() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorCreate.posx)
  return _internal_posx();
}
inline void ActorCreate::_internal_set_posx(float value) {
  
  posx_ = value;
}
inline void ActorCreate::set_posx(float value) {
  _internal_set_posx(value);
  // @@protoc_insertion_point(field_set:ServerMSG.ActorCreate.posx)
}

// float posy = 17;
inline void ActorCreate::clear_posy() {
  posy_ = 0;
}
inline float ActorCreate::_internal_posy() const {
  return posy_;
}
inline float ActorCreate::posy() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorCreate.posy)
  return _internal_posy();
}
inline void ActorCreate::_internal_set_posy(float value) {
  
  posy_ = value;
}
inline void ActorCreate::set_posy(float value) {
  _internal_set_posy(value);
  // @@protoc_insertion_point(field_set:ServerMSG.ActorCreate.posy)
}

// float face = 18;
inline void ActorCreate::clear_face() {
  face_ = 0;
}
inline float ActorCreate::_internal_face() const {
  return face_;
}
inline float ActorCreate::face() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorCreate.face)
  return _internal_face();
}
inline void ActorCreate::_internal_set_face(float value) {
  
  face_ = value;
}
inline void ActorCreate::set_face(float value) {
  _internal_set_face(value);
  // @@protoc_insertion_point(field_set:ServerMSG.ActorCreate.face)
}

// uint32 monster_gen_id = 20;
inline void ActorCreate::clear_monster_gen_id() {
  monster_gen_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ActorCreate::_internal_monster_gen_id() const {
  return monster_gen_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ActorCreate::monster_gen_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorCreate.monster_gen_id)
  return _internal_monster_gen_id();
}
inline void ActorCreate::_internal_set_monster_gen_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  monster_gen_id_ = value;
}
inline void ActorCreate::set_monster_gen_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_monster_gen_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.ActorCreate.monster_gen_id)
}

// uint64 phase_id = 21;
inline void ActorCreate::clear_phase_id() {
  phase_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ActorCreate::_internal_phase_id() const {
  return phase_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ActorCreate::phase_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorCreate.phase_id)
  return _internal_phase_id();
}
inline void ActorCreate::_internal_set_phase_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  phase_id_ = value;
}
inline void ActorCreate::set_phase_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_phase_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.ActorCreate.phase_id)
}

// -------------------------------------------------------------------

// ActorDestory

// uint64 actor_id = 1;
inline void ActorDestory::clear_actor_id() {
  actor_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ActorDestory::_internal_actor_id() const {
  return actor_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ActorDestory::actor_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorDestory.actor_id)
  return _internal_actor_id();
}
inline void ActorDestory::_internal_set_actor_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  actor_id_ = value;
}
inline void ActorDestory::set_actor_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_actor_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.ActorDestory.actor_id)
}

// bool dead = 2;
inline void ActorDestory::clear_dead() {
  dead_ = false;
}
inline bool ActorDestory::_internal_dead() const {
  return dead_;
}
inline bool ActorDestory::dead() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorDestory.dead)
  return _internal_dead();
}
inline void ActorDestory::_internal_set_dead(bool value) {
  
  dead_ = value;
}
inline void ActorDestory::set_dead(bool value) {
  _internal_set_dead(value);
  // @@protoc_insertion_point(field_set:ServerMSG.ActorDestory.dead)
}

// -------------------------------------------------------------------

// ActorMove

// uint64 actor_id = 1;
inline void ActorMove::clear_actor_id() {
  actor_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ActorMove::_internal_actor_id() const {
  return actor_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ActorMove::actor_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorMove.actor_id)
  return _internal_actor_id();
}
inline void ActorMove::_internal_set_actor_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  actor_id_ = value;
}
inline void ActorMove::set_actor_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_actor_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.ActorMove.actor_id)
}

// float x = 2;
inline void ActorMove::clear_x() {
  x_ = 0;
}
inline float ActorMove::_internal_x() const {
  return x_;
}
inline float ActorMove::x() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorMove.x)
  return _internal_x();
}
inline void ActorMove::_internal_set_x(float value) {
  
  x_ = value;
}
inline void ActorMove::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:ServerMSG.ActorMove.x)
}

// float y = 3;
inline void ActorMove::clear_y() {
  y_ = 0;
}
inline float ActorMove::_internal_y() const {
  return y_;
}
inline float ActorMove::y() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorMove.y)
  return _internal_y();
}
inline void ActorMove::_internal_set_y(float value) {
  
  y_ = value;
}
inline void ActorMove::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:ServerMSG.ActorMove.y)
}

// -------------------------------------------------------------------

// ActorFlyTo

// uint64 actor_id = 1;
inline void ActorFlyTo::clear_actor_id() {
  actor_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ActorFlyTo::_internal_actor_id() const {
  return actor_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ActorFlyTo::actor_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorFlyTo.actor_id)
  return _internal_actor_id();
}
inline void ActorFlyTo::_internal_set_actor_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  actor_id_ = value;
}
inline void ActorFlyTo::set_actor_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_actor_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.ActorFlyTo.actor_id)
}

// float x = 2;
inline void ActorFlyTo::clear_x() {
  x_ = 0;
}
inline float ActorFlyTo::_internal_x() const {
  return x_;
}
inline float ActorFlyTo::x() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorFlyTo.x)
  return _internal_x();
}
inline void ActorFlyTo::_internal_set_x(float value) {
  
  x_ = value;
}
inline void ActorFlyTo::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:ServerMSG.ActorFlyTo.x)
}

// float y = 3;
inline void ActorFlyTo::clear_y() {
  y_ = 0;
}
inline float ActorFlyTo::_internal_y() const {
  return y_;
}
inline float ActorFlyTo::y() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorFlyTo.y)
  return _internal_y();
}
inline void ActorFlyTo::_internal_set_y(float value) {
  
  y_ = value;
}
inline void ActorFlyTo::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:ServerMSG.ActorFlyTo.y)
}

// -------------------------------------------------------------------

// ActorCastSkill

// uint64 actor_id = 1;
inline void ActorCastSkill::clear_actor_id() {
  actor_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ActorCastSkill::_internal_actor_id() const {
  return actor_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ActorCastSkill::actor_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorCastSkill.actor_id)
  return _internal_actor_id();
}
inline void ActorCastSkill::_internal_set_actor_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  actor_id_ = value;
}
inline void ActorCastSkill::set_actor_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_actor_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.ActorCastSkill.actor_id)
}

// uint64 target_id = 2;
inline void ActorCastSkill::clear_target_id() {
  target_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ActorCastSkill::_internal_target_id() const {
  return target_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ActorCastSkill::target_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorCastSkill.target_id)
  return _internal_target_id();
}
inline void ActorCastSkill::_internal_set_target_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  target_id_ = value;
}
inline void ActorCastSkill::set_target_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_target_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.ActorCastSkill.target_id)
}

// uint32 skill_id = 3;
inline void ActorCastSkill::clear_skill_id() {
  skill_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ActorCastSkill::_internal_skill_id() const {
  return skill_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ActorCastSkill::skill_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorCastSkill.skill_id)
  return _internal_skill_id();
}
inline void ActorCastSkill::_internal_set_skill_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  skill_id_ = value;
}
inline void ActorCastSkill::set_skill_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_skill_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.ActorCastSkill.skill_id)
}

// -------------------------------------------------------------------

// ActorCastSkill_Fail

// uint64 actor_id = 1;
inline void ActorCastSkill_Fail::clear_actor_id() {
  actor_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ActorCastSkill_Fail::_internal_actor_id() const {
  return actor_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ActorCastSkill_Fail::actor_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorCastSkill_Fail.actor_id)
  return _internal_actor_id();
}
inline void ActorCastSkill_Fail::_internal_set_actor_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  actor_id_ = value;
}
inline void ActorCastSkill_Fail::set_actor_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_actor_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.ActorCastSkill_Fail.actor_id)
}

// -------------------------------------------------------------------

// ActorSetHide

// uint64 actor_id = 1;
inline void ActorSetHide::clear_actor_id() {
  actor_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ActorSetHide::_internal_actor_id() const {
  return actor_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ActorSetHide::actor_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorSetHide.actor_id)
  return _internal_actor_id();
}
inline void ActorSetHide::_internal_set_actor_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  actor_id_ = value;
}
inline void ActorSetHide::set_actor_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_actor_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.ActorSetHide.actor_id)
}

// int32 hide_count = 2;
inline void ActorSetHide::clear_hide_count() {
  hide_count_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ActorSetHide::_internal_hide_count() const {
  return hide_count_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ActorSetHide::hide_count() const {
  // @@protoc_insertion_point(field_get:ServerMSG.ActorSetHide.hide_count)
  return _internal_hide_count();
}
inline void ActorSetHide::_internal_set_hide_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  hide_count_ = value;
}
inline void ActorSetHide::set_hide_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_hide_count(value);
  // @@protoc_insertion_point(field_set:ServerMSG.ActorSetHide.hide_count)
}

// -------------------------------------------------------------------

// TeamCreate

// uint64 team_id = 1;
inline void TeamCreate::clear_team_id() {
  team_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamCreate::_internal_team_id() const {
  return team_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamCreate::team_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamCreate.team_id)
  return _internal_team_id();
}
inline void TeamCreate::_internal_set_team_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  team_id_ = value;
}
inline void TeamCreate::set_team_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_team_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.TeamCreate.team_id)
}

// uint64 leader_id = 2;
inline void TeamCreate::clear_leader_id() {
  leader_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamCreate::_internal_leader_id() const {
  return leader_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamCreate::leader_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamCreate.leader_id)
  return _internal_leader_id();
}
inline void TeamCreate::_internal_set_leader_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  leader_id_ = value;
}
inline void TeamCreate::set_leader_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_leader_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.TeamCreate.leader_id)
}

// -------------------------------------------------------------------

// TeamDestory

// uint64 team_id = 1;
inline void TeamDestory::clear_team_id() {
  team_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamDestory::_internal_team_id() const {
  return team_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamDestory::team_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamDestory.team_id)
  return _internal_team_id();
}
inline void TeamDestory::_internal_set_team_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  team_id_ = value;
}
inline void TeamDestory::set_team_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_team_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.TeamDestory.team_id)
}

// -------------------------------------------------------------------

// TeamQuit

// uint64 team_id = 1;
inline void TeamQuit::clear_team_id() {
  team_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamQuit::_internal_team_id() const {
  return team_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamQuit::team_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamQuit.team_id)
  return _internal_team_id();
}
inline void TeamQuit::_internal_set_team_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  team_id_ = value;
}
inline void TeamQuit::set_team_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_team_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.TeamQuit.team_id)
}

// uint64 operator_id = 2;
inline void TeamQuit::clear_operator_id() {
  operator_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamQuit::_internal_operator_id() const {
  return operator_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamQuit::operator_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamQuit.operator_id)
  return _internal_operator_id();
}
inline void TeamQuit::_internal_set_operator_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  operator_id_ = value;
}
inline void TeamQuit::set_operator_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_operator_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.TeamQuit.operator_id)
}

// -------------------------------------------------------------------

// TeamKickMember

// uint64 team_id = 1;
inline void TeamKickMember::clear_team_id() {
  team_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamKickMember::_internal_team_id() const {
  return team_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamKickMember::team_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamKickMember.team_id)
  return _internal_team_id();
}
inline void TeamKickMember::_internal_set_team_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  team_id_ = value;
}
inline void TeamKickMember::set_team_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_team_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.TeamKickMember.team_id)
}

// uint64 operator_id = 2;
inline void TeamKickMember::clear_operator_id() {
  operator_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamKickMember::_internal_operator_id() const {
  return operator_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamKickMember::operator_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamKickMember.operator_id)
  return _internal_operator_id();
}
inline void TeamKickMember::_internal_set_operator_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  operator_id_ = value;
}
inline void TeamKickMember::set_operator_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_operator_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.TeamKickMember.operator_id)
}

// uint64 kick_id = 3;
inline void TeamKickMember::clear_kick_id() {
  kick_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamKickMember::_internal_kick_id() const {
  return kick_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamKickMember::kick_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamKickMember.kick_id)
  return _internal_kick_id();
}
inline void TeamKickMember::_internal_set_kick_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  kick_id_ = value;
}
inline void TeamKickMember::set_kick_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_kick_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.TeamKickMember.kick_id)
}

// -------------------------------------------------------------------

// TeamInviteMember

// uint64 team_id = 1;
inline void TeamInviteMember::clear_team_id() {
  team_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamInviteMember::_internal_team_id() const {
  return team_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamInviteMember::team_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamInviteMember.team_id)
  return _internal_team_id();
}
inline void TeamInviteMember::_internal_set_team_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  team_id_ = value;
}
inline void TeamInviteMember::set_team_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_team_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.TeamInviteMember.team_id)
}

// uint64 operator_id = 2;
inline void TeamInviteMember::clear_operator_id() {
  operator_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamInviteMember::_internal_operator_id() const {
  return operator_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamInviteMember::operator_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamInviteMember.operator_id)
  return _internal_operator_id();
}
inline void TeamInviteMember::_internal_set_operator_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  operator_id_ = value;
}
inline void TeamInviteMember::set_operator_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_operator_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.TeamInviteMember.operator_id)
}

// uint64 invitee_id = 3;
inline void TeamInviteMember::clear_invitee_id() {
  invitee_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamInviteMember::_internal_invitee_id() const {
  return invitee_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamInviteMember::invitee_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamInviteMember.invitee_id)
  return _internal_invitee_id();
}
inline void TeamInviteMember::_internal_set_invitee_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  invitee_id_ = value;
}
inline void TeamInviteMember::set_invitee_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_invitee_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.TeamInviteMember.invitee_id)
}

// -------------------------------------------------------------------

// TeamAcceptInvite

// uint64 team_id = 1;
inline void TeamAcceptInvite::clear_team_id() {
  team_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamAcceptInvite::_internal_team_id() const {
  return team_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamAcceptInvite::team_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamAcceptInvite.team_id)
  return _internal_team_id();
}
inline void TeamAcceptInvite::_internal_set_team_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  team_id_ = value;
}
inline void TeamAcceptInvite::set_team_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_team_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.TeamAcceptInvite.team_id)
}

// uint64 inviter_id = 2;
inline void TeamAcceptInvite::clear_inviter_id() {
  inviter_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamAcceptInvite::_internal_inviter_id() const {
  return inviter_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamAcceptInvite::inviter_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamAcceptInvite.inviter_id)
  return _internal_inviter_id();
}
inline void TeamAcceptInvite::_internal_set_inviter_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  inviter_id_ = value;
}
inline void TeamAcceptInvite::set_inviter_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_inviter_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.TeamAcceptInvite.inviter_id)
}

// uint64 invitee_id = 3;
inline void TeamAcceptInvite::clear_invitee_id() {
  invitee_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamAcceptInvite::_internal_invitee_id() const {
  return invitee_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamAcceptInvite::invitee_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamAcceptInvite.invitee_id)
  return _internal_invitee_id();
}
inline void TeamAcceptInvite::_internal_set_invitee_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  invitee_id_ = value;
}
inline void TeamAcceptInvite::set_invitee_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_invitee_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.TeamAcceptInvite.invitee_id)
}

// bool result = 4;
inline void TeamAcceptInvite::clear_result() {
  result_ = false;
}
inline bool TeamAcceptInvite::_internal_result() const {
  return result_;
}
inline bool TeamAcceptInvite::result() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamAcceptInvite.result)
  return _internal_result();
}
inline void TeamAcceptInvite::_internal_set_result(bool value) {
  
  result_ = value;
}
inline void TeamAcceptInvite::set_result(bool value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:ServerMSG.TeamAcceptInvite.result)
}

// -------------------------------------------------------------------

// TeamApplyMember

// uint64 applicant_id = 1;
inline void TeamApplyMember::clear_applicant_id() {
  applicant_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamApplyMember::_internal_applicant_id() const {
  return applicant_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamApplyMember::applicant_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamApplyMember.applicant_id)
  return _internal_applicant_id();
}
inline void TeamApplyMember::_internal_set_applicant_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  applicant_id_ = value;
}
inline void TeamApplyMember::set_applicant_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_applicant_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.TeamApplyMember.applicant_id)
}

// uint64 respondent_id = 2;
inline void TeamApplyMember::clear_respondent_id() {
  respondent_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamApplyMember::_internal_respondent_id() const {
  return respondent_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamApplyMember::respondent_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamApplyMember.respondent_id)
  return _internal_respondent_id();
}
inline void TeamApplyMember::_internal_set_respondent_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  respondent_id_ = value;
}
inline void TeamApplyMember::set_respondent_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_respondent_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.TeamApplyMember.respondent_id)
}

// -------------------------------------------------------------------

// TeamAcceptApply

// uint64 applicant_id = 1;
inline void TeamAcceptApply::clear_applicant_id() {
  applicant_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamAcceptApply::_internal_applicant_id() const {
  return applicant_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamAcceptApply::applicant_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamAcceptApply.applicant_id)
  return _internal_applicant_id();
}
inline void TeamAcceptApply::_internal_set_applicant_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  applicant_id_ = value;
}
inline void TeamAcceptApply::set_applicant_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_applicant_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.TeamAcceptApply.applicant_id)
}

// uint64 respondent_id = 2;
inline void TeamAcceptApply::clear_respondent_id() {
  respondent_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamAcceptApply::_internal_respondent_id() const {
  return respondent_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamAcceptApply::respondent_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamAcceptApply.respondent_id)
  return _internal_respondent_id();
}
inline void TeamAcceptApply::_internal_set_respondent_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  respondent_id_ = value;
}
inline void TeamAcceptApply::set_respondent_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_respondent_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.TeamAcceptApply.respondent_id)
}

// bool result = 3;
inline void TeamAcceptApply::clear_result() {
  result_ = false;
}
inline bool TeamAcceptApply::_internal_result() const {
  return result_;
}
inline bool TeamAcceptApply::result() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamAcceptApply.result)
  return _internal_result();
}
inline void TeamAcceptApply::_internal_set_result(bool value) {
  
  result_ = value;
}
inline void TeamAcceptApply::set_result(bool value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:ServerMSG.TeamAcceptApply.result)
}

// -------------------------------------------------------------------

// TeamNewLeader

// uint64 team_id = 1;
inline void TeamNewLeader::clear_team_id() {
  team_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamNewLeader::_internal_team_id() const {
  return team_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamNewLeader::team_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamNewLeader.team_id)
  return _internal_team_id();
}
inline void TeamNewLeader::_internal_set_team_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  team_id_ = value;
}
inline void TeamNewLeader::set_team_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_team_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.TeamNewLeader.team_id)
}

// uint64 operator_id = 2;
inline void TeamNewLeader::clear_operator_id() {
  operator_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamNewLeader::_internal_operator_id() const {
  return operator_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamNewLeader::operator_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamNewLeader.operator_id)
  return _internal_operator_id();
}
inline void TeamNewLeader::_internal_set_operator_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  operator_id_ = value;
}
inline void TeamNewLeader::set_operator_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_operator_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.TeamNewLeader.operator_id)
}

// uint64 new_leader_id = 3;
inline void TeamNewLeader::clear_new_leader_id() {
  new_leader_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamNewLeader::_internal_new_leader_id() const {
  return new_leader_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamNewLeader::new_leader_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamNewLeader.new_leader_id)
  return _internal_new_leader_id();
}
inline void TeamNewLeader::_internal_set_new_leader_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  new_leader_id_ = value;
}
inline void TeamNewLeader::set_new_leader_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_new_leader_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.TeamNewLeader.new_leader_id)
}

// -------------------------------------------------------------------

// TeamAddMember

// uint64 team_id = 1;
inline void TeamAddMember::clear_team_id() {
  team_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamAddMember::_internal_team_id() const {
  return team_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamAddMember::team_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamAddMember.team_id)
  return _internal_team_id();
}
inline void TeamAddMember::_internal_set_team_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  team_id_ = value;
}
inline void TeamAddMember::set_team_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_team_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.TeamAddMember.team_id)
}

// uint64 member_id = 2;
inline void TeamAddMember::clear_member_id() {
  member_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamAddMember::_internal_member_id() const {
  return member_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamAddMember::member_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamAddMember.member_id)
  return _internal_member_id();
}
inline void TeamAddMember::_internal_set_member_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  member_id_ = value;
}
inline void TeamAddMember::set_member_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_member_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.TeamAddMember.member_id)
}

// -------------------------------------------------------------------

// TeamDelMember

// uint64 team_id = 1;
inline void TeamDelMember::clear_team_id() {
  team_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamDelMember::_internal_team_id() const {
  return team_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamDelMember::team_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamDelMember.team_id)
  return _internal_team_id();
}
inline void TeamDelMember::_internal_set_team_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  team_id_ = value;
}
inline void TeamDelMember::set_team_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_team_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.TeamDelMember.team_id)
}

// uint64 member_id = 2;
inline void TeamDelMember::clear_member_id() {
  member_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamDelMember::_internal_member_id() const {
  return member_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 TeamDelMember::member_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamDelMember.member_id)
  return _internal_member_id();
}
inline void TeamDelMember::_internal_set_member_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  member_id_ = value;
}
inline void TeamDelMember::set_member_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_member_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.TeamDelMember.member_id)
}

// -------------------------------------------------------------------

// TeamMemberInfoList

// repeated .TeamMemberInfo member_list = 1;
inline int TeamMemberInfoList::_internal_member_list_size() const {
  return member_list_.size();
}
inline int TeamMemberInfoList::member_list_size() const {
  return _internal_member_list_size();
}
inline ::TeamMemberInfo* TeamMemberInfoList::mutable_member_list(int index) {
  // @@protoc_insertion_point(field_mutable:ServerMSG.TeamMemberInfoList.member_list)
  return member_list_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TeamMemberInfo >*
TeamMemberInfoList::mutable_member_list() {
  // @@protoc_insertion_point(field_mutable_list:ServerMSG.TeamMemberInfoList.member_list)
  return &member_list_;
}
inline const ::TeamMemberInfo& TeamMemberInfoList::_internal_member_list(int index) const {
  return member_list_.Get(index);
}
inline const ::TeamMemberInfo& TeamMemberInfoList::member_list(int index) const {
  // @@protoc_insertion_point(field_get:ServerMSG.TeamMemberInfoList.member_list)
  return _internal_member_list(index);
}
inline ::TeamMemberInfo* TeamMemberInfoList::_internal_add_member_list() {
  return member_list_.Add();
}
inline ::TeamMemberInfo* TeamMemberInfoList::add_member_list() {
  // @@protoc_insertion_point(field_add:ServerMSG.TeamMemberInfoList.member_list)
  return _internal_add_member_list();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::TeamMemberInfo >&
TeamMemberInfoList::member_list() const {
  // @@protoc_insertion_point(field_list:ServerMSG.TeamMemberInfoList.member_list)
  return member_list_;
}

// -------------------------------------------------------------------

// GuildCreate

// uint64 guild_id = 1;
inline void GuildCreate::clear_guild_id() {
  guild_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildCreate::_internal_guild_id() const {
  return guild_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildCreate::guild_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.GuildCreate.guild_id)
  return _internal_guild_id();
}
inline void GuildCreate::_internal_set_guild_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  guild_id_ = value;
}
inline void GuildCreate::set_guild_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.GuildCreate.guild_id)
}

// uint64 leader_id = 2;
inline void GuildCreate::clear_leader_id() {
  leader_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildCreate::_internal_leader_id() const {
  return leader_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildCreate::leader_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.GuildCreate.leader_id)
  return _internal_leader_id();
}
inline void GuildCreate::_internal_set_leader_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  leader_id_ = value;
}
inline void GuildCreate::set_leader_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_leader_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.GuildCreate.leader_id)
}

// string guild_name = 3;
inline void GuildCreate::clear_guild_name() {
  guild_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& GuildCreate::guild_name() const {
  // @@protoc_insertion_point(field_get:ServerMSG.GuildCreate.guild_name)
  return _internal_guild_name();
}
inline void GuildCreate::set_guild_name(const std::string& value) {
  _internal_set_guild_name(value);
  // @@protoc_insertion_point(field_set:ServerMSG.GuildCreate.guild_name)
}
inline std::string* GuildCreate::mutable_guild_name() {
  // @@protoc_insertion_point(field_mutable:ServerMSG.GuildCreate.guild_name)
  return _internal_mutable_guild_name();
}
inline const std::string& GuildCreate::_internal_guild_name() const {
  return guild_name_.GetNoArena();
}
inline void GuildCreate::_internal_set_guild_name(const std::string& value) {
  
  guild_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void GuildCreate::set_guild_name(std::string&& value) {
  
  guild_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ServerMSG.GuildCreate.guild_name)
}
inline void GuildCreate::set_guild_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  guild_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ServerMSG.GuildCreate.guild_name)
}
inline void GuildCreate::set_guild_name(const char* value, size_t size) {
  
  guild_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ServerMSG.GuildCreate.guild_name)
}
inline std::string* GuildCreate::_internal_mutable_guild_name() {
  
  return guild_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* GuildCreate::release_guild_name() {
  // @@protoc_insertion_point(field_release:ServerMSG.GuildCreate.guild_name)
  
  return guild_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void GuildCreate::set_allocated_guild_name(std::string* guild_name) {
  if (guild_name != nullptr) {
    
  } else {
    
  }
  guild_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), guild_name);
  // @@protoc_insertion_point(field_set_allocated:ServerMSG.GuildCreate.guild_name)
}

// string leader_name = 4;
inline void GuildCreate::clear_leader_name() {
  leader_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& GuildCreate::leader_name() const {
  // @@protoc_insertion_point(field_get:ServerMSG.GuildCreate.leader_name)
  return _internal_leader_name();
}
inline void GuildCreate::set_leader_name(const std::string& value) {
  _internal_set_leader_name(value);
  // @@protoc_insertion_point(field_set:ServerMSG.GuildCreate.leader_name)
}
inline std::string* GuildCreate::mutable_leader_name() {
  // @@protoc_insertion_point(field_mutable:ServerMSG.GuildCreate.leader_name)
  return _internal_mutable_leader_name();
}
inline const std::string& GuildCreate::_internal_leader_name() const {
  return leader_name_.GetNoArena();
}
inline void GuildCreate::_internal_set_leader_name(const std::string& value) {
  
  leader_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void GuildCreate::set_leader_name(std::string&& value) {
  
  leader_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ServerMSG.GuildCreate.leader_name)
}
inline void GuildCreate::set_leader_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  leader_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ServerMSG.GuildCreate.leader_name)
}
inline void GuildCreate::set_leader_name(const char* value, size_t size) {
  
  leader_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ServerMSG.GuildCreate.leader_name)
}
inline std::string* GuildCreate::_internal_mutable_leader_name() {
  
  return leader_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* GuildCreate::release_leader_name() {
  // @@protoc_insertion_point(field_release:ServerMSG.GuildCreate.leader_name)
  
  return leader_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void GuildCreate::set_allocated_leader_name(std::string* leader_name) {
  if (leader_name != nullptr) {
    
  } else {
    
  }
  leader_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), leader_name);
  // @@protoc_insertion_point(field_set_allocated:ServerMSG.GuildCreate.leader_name)
}

// uint32 create_time = 5;
inline void GuildCreate::clear_create_time() {
  create_time_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GuildCreate::_internal_create_time() const {
  return create_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GuildCreate::create_time() const {
  // @@protoc_insertion_point(field_get:ServerMSG.GuildCreate.create_time)
  return _internal_create_time();
}
inline void GuildCreate::_internal_set_create_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  create_time_ = value;
}
inline void GuildCreate::set_create_time(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_create_time(value);
  // @@protoc_insertion_point(field_set:ServerMSG.GuildCreate.create_time)
}

// -------------------------------------------------------------------

// GuildDestory

// uint64 guild_id = 1;
inline void GuildDestory::clear_guild_id() {
  guild_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildDestory::_internal_guild_id() const {
  return guild_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildDestory::guild_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.GuildDestory.guild_id)
  return _internal_guild_id();
}
inline void GuildDestory::_internal_set_guild_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  guild_id_ = value;
}
inline void GuildDestory::set_guild_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.GuildDestory.guild_id)
}

// -------------------------------------------------------------------

// GuildQuit

// uint64 guild_id = 1;
inline void GuildQuit::clear_guild_id() {
  guild_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildQuit::_internal_guild_id() const {
  return guild_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildQuit::guild_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.GuildQuit.guild_id)
  return _internal_guild_id();
}
inline void GuildQuit::_internal_set_guild_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  guild_id_ = value;
}
inline void GuildQuit::set_guild_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.GuildQuit.guild_id)
}

// uint64 operator_id = 2;
inline void GuildQuit::clear_operator_id() {
  operator_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildQuit::_internal_operator_id() const {
  return operator_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildQuit::operator_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.GuildQuit.operator_id)
  return _internal_operator_id();
}
inline void GuildQuit::_internal_set_operator_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  operator_id_ = value;
}
inline void GuildQuit::set_operator_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_operator_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.GuildQuit.operator_id)
}

// -------------------------------------------------------------------

// GuildKickMember

// uint64 guild_id = 1;
inline void GuildKickMember::clear_guild_id() {
  guild_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildKickMember::_internal_guild_id() const {
  return guild_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildKickMember::guild_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.GuildKickMember.guild_id)
  return _internal_guild_id();
}
inline void GuildKickMember::_internal_set_guild_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  guild_id_ = value;
}
inline void GuildKickMember::set_guild_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.GuildKickMember.guild_id)
}

// uint64 operator_id = 2;
inline void GuildKickMember::clear_operator_id() {
  operator_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildKickMember::_internal_operator_id() const {
  return operator_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildKickMember::operator_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.GuildKickMember.operator_id)
  return _internal_operator_id();
}
inline void GuildKickMember::_internal_set_operator_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  operator_id_ = value;
}
inline void GuildKickMember::set_operator_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_operator_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.GuildKickMember.operator_id)
}

// uint64 kick_id = 3;
inline void GuildKickMember::clear_kick_id() {
  kick_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildKickMember::_internal_kick_id() const {
  return kick_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildKickMember::kick_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.GuildKickMember.kick_id)
  return _internal_kick_id();
}
inline void GuildKickMember::_internal_set_kick_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  kick_id_ = value;
}
inline void GuildKickMember::set_kick_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_kick_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.GuildKickMember.kick_id)
}

// -------------------------------------------------------------------

// GuildInviteMember

// uint64 guild_id = 1;
inline void GuildInviteMember::clear_guild_id() {
  guild_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildInviteMember::_internal_guild_id() const {
  return guild_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildInviteMember::guild_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.GuildInviteMember.guild_id)
  return _internal_guild_id();
}
inline void GuildInviteMember::_internal_set_guild_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  guild_id_ = value;
}
inline void GuildInviteMember::set_guild_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.GuildInviteMember.guild_id)
}

// uint64 operator_id = 2;
inline void GuildInviteMember::clear_operator_id() {
  operator_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildInviteMember::_internal_operator_id() const {
  return operator_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildInviteMember::operator_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.GuildInviteMember.operator_id)
  return _internal_operator_id();
}
inline void GuildInviteMember::_internal_set_operator_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  operator_id_ = value;
}
inline void GuildInviteMember::set_operator_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_operator_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.GuildInviteMember.operator_id)
}

// uint64 invitee_id = 3;
inline void GuildInviteMember::clear_invitee_id() {
  invitee_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildInviteMember::_internal_invitee_id() const {
  return invitee_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildInviteMember::invitee_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.GuildInviteMember.invitee_id)
  return _internal_invitee_id();
}
inline void GuildInviteMember::_internal_set_invitee_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  invitee_id_ = value;
}
inline void GuildInviteMember::set_invitee_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_invitee_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.GuildInviteMember.invitee_id)
}

// -------------------------------------------------------------------

// GuildAcceptInvite

// uint64 guild_id = 1;
inline void GuildAcceptInvite::clear_guild_id() {
  guild_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildAcceptInvite::_internal_guild_id() const {
  return guild_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildAcceptInvite::guild_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.GuildAcceptInvite.guild_id)
  return _internal_guild_id();
}
inline void GuildAcceptInvite::_internal_set_guild_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  guild_id_ = value;
}
inline void GuildAcceptInvite::set_guild_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.GuildAcceptInvite.guild_id)
}

// uint64 inviter_id = 2;
inline void GuildAcceptInvite::clear_inviter_id() {
  inviter_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildAcceptInvite::_internal_inviter_id() const {
  return inviter_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildAcceptInvite::inviter_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.GuildAcceptInvite.inviter_id)
  return _internal_inviter_id();
}
inline void GuildAcceptInvite::_internal_set_inviter_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  inviter_id_ = value;
}
inline void GuildAcceptInvite::set_inviter_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_inviter_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.GuildAcceptInvite.inviter_id)
}

// uint64 invitee_id = 3;
inline void GuildAcceptInvite::clear_invitee_id() {
  invitee_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildAcceptInvite::_internal_invitee_id() const {
  return invitee_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildAcceptInvite::invitee_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.GuildAcceptInvite.invitee_id)
  return _internal_invitee_id();
}
inline void GuildAcceptInvite::_internal_set_invitee_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  invitee_id_ = value;
}
inline void GuildAcceptInvite::set_invitee_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_invitee_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.GuildAcceptInvite.invitee_id)
}

// bool result = 4;
inline void GuildAcceptInvite::clear_result() {
  result_ = false;
}
inline bool GuildAcceptInvite::_internal_result() const {
  return result_;
}
inline bool GuildAcceptInvite::result() const {
  // @@protoc_insertion_point(field_get:ServerMSG.GuildAcceptInvite.result)
  return _internal_result();
}
inline void GuildAcceptInvite::_internal_set_result(bool value) {
  
  result_ = value;
}
inline void GuildAcceptInvite::set_result(bool value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:ServerMSG.GuildAcceptInvite.result)
}

// -------------------------------------------------------------------

// GuildApplyMember

// uint64 applicant_id = 1;
inline void GuildApplyMember::clear_applicant_id() {
  applicant_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildApplyMember::_internal_applicant_id() const {
  return applicant_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildApplyMember::applicant_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.GuildApplyMember.applicant_id)
  return _internal_applicant_id();
}
inline void GuildApplyMember::_internal_set_applicant_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  applicant_id_ = value;
}
inline void GuildApplyMember::set_applicant_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_applicant_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.GuildApplyMember.applicant_id)
}

// uint64 respondent_id = 2;
inline void GuildApplyMember::clear_respondent_id() {
  respondent_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildApplyMember::_internal_respondent_id() const {
  return respondent_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildApplyMember::respondent_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.GuildApplyMember.respondent_id)
  return _internal_respondent_id();
}
inline void GuildApplyMember::_internal_set_respondent_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  respondent_id_ = value;
}
inline void GuildApplyMember::set_respondent_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_respondent_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.GuildApplyMember.respondent_id)
}

// -------------------------------------------------------------------

// GuildAcceptApply

// uint64 applicant_id = 1;
inline void GuildAcceptApply::clear_applicant_id() {
  applicant_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildAcceptApply::_internal_applicant_id() const {
  return applicant_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildAcceptApply::applicant_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.GuildAcceptApply.applicant_id)
  return _internal_applicant_id();
}
inline void GuildAcceptApply::_internal_set_applicant_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  applicant_id_ = value;
}
inline void GuildAcceptApply::set_applicant_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_applicant_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.GuildAcceptApply.applicant_id)
}

// uint64 respondent_id = 2;
inline void GuildAcceptApply::clear_respondent_id() {
  respondent_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildAcceptApply::_internal_respondent_id() const {
  return respondent_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildAcceptApply::respondent_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.GuildAcceptApply.respondent_id)
  return _internal_respondent_id();
}
inline void GuildAcceptApply::_internal_set_respondent_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  respondent_id_ = value;
}
inline void GuildAcceptApply::set_respondent_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_respondent_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.GuildAcceptApply.respondent_id)
}

// bool result = 3;
inline void GuildAcceptApply::clear_result() {
  result_ = false;
}
inline bool GuildAcceptApply::_internal_result() const {
  return result_;
}
inline bool GuildAcceptApply::result() const {
  // @@protoc_insertion_point(field_get:ServerMSG.GuildAcceptApply.result)
  return _internal_result();
}
inline void GuildAcceptApply::_internal_set_result(bool value) {
  
  result_ = value;
}
inline void GuildAcceptApply::set_result(bool value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:ServerMSG.GuildAcceptApply.result)
}

// -------------------------------------------------------------------

// GuildNewLeader

// uint64 guild_id = 1;
inline void GuildNewLeader::clear_guild_id() {
  guild_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildNewLeader::_internal_guild_id() const {
  return guild_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildNewLeader::guild_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.GuildNewLeader.guild_id)
  return _internal_guild_id();
}
inline void GuildNewLeader::_internal_set_guild_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  guild_id_ = value;
}
inline void GuildNewLeader::set_guild_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.GuildNewLeader.guild_id)
}

// uint64 operator_id = 2;
inline void GuildNewLeader::clear_operator_id() {
  operator_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildNewLeader::_internal_operator_id() const {
  return operator_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildNewLeader::operator_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.GuildNewLeader.operator_id)
  return _internal_operator_id();
}
inline void GuildNewLeader::_internal_set_operator_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  operator_id_ = value;
}
inline void GuildNewLeader::set_operator_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_operator_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.GuildNewLeader.operator_id)
}

// uint64 new_leader_id = 3;
inline void GuildNewLeader::clear_new_leader_id() {
  new_leader_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildNewLeader::_internal_new_leader_id() const {
  return new_leader_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildNewLeader::new_leader_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.GuildNewLeader.new_leader_id)
  return _internal_new_leader_id();
}
inline void GuildNewLeader::_internal_set_new_leader_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  new_leader_id_ = value;
}
inline void GuildNewLeader::set_new_leader_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_new_leader_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.GuildNewLeader.new_leader_id)
}

// string new_leader_name = 4;
inline void GuildNewLeader::clear_new_leader_name() {
  new_leader_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& GuildNewLeader::new_leader_name() const {
  // @@protoc_insertion_point(field_get:ServerMSG.GuildNewLeader.new_leader_name)
  return _internal_new_leader_name();
}
inline void GuildNewLeader::set_new_leader_name(const std::string& value) {
  _internal_set_new_leader_name(value);
  // @@protoc_insertion_point(field_set:ServerMSG.GuildNewLeader.new_leader_name)
}
inline std::string* GuildNewLeader::mutable_new_leader_name() {
  // @@protoc_insertion_point(field_mutable:ServerMSG.GuildNewLeader.new_leader_name)
  return _internal_mutable_new_leader_name();
}
inline const std::string& GuildNewLeader::_internal_new_leader_name() const {
  return new_leader_name_.GetNoArena();
}
inline void GuildNewLeader::_internal_set_new_leader_name(const std::string& value) {
  
  new_leader_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void GuildNewLeader::set_new_leader_name(std::string&& value) {
  
  new_leader_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ServerMSG.GuildNewLeader.new_leader_name)
}
inline void GuildNewLeader::set_new_leader_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  new_leader_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ServerMSG.GuildNewLeader.new_leader_name)
}
inline void GuildNewLeader::set_new_leader_name(const char* value, size_t size) {
  
  new_leader_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ServerMSG.GuildNewLeader.new_leader_name)
}
inline std::string* GuildNewLeader::_internal_mutable_new_leader_name() {
  
  return new_leader_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* GuildNewLeader::release_new_leader_name() {
  // @@protoc_insertion_point(field_release:ServerMSG.GuildNewLeader.new_leader_name)
  
  return new_leader_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void GuildNewLeader::set_allocated_new_leader_name(std::string* new_leader_name) {
  if (new_leader_name != nullptr) {
    
  } else {
    
  }
  new_leader_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), new_leader_name);
  // @@protoc_insertion_point(field_set_allocated:ServerMSG.GuildNewLeader.new_leader_name)
}

// -------------------------------------------------------------------

// GuildAddMember

// uint64 guild_id = 1;
inline void GuildAddMember::clear_guild_id() {
  guild_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildAddMember::_internal_guild_id() const {
  return guild_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildAddMember::guild_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.GuildAddMember.guild_id)
  return _internal_guild_id();
}
inline void GuildAddMember::_internal_set_guild_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  guild_id_ = value;
}
inline void GuildAddMember::set_guild_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.GuildAddMember.guild_id)
}

// uint64 member_id = 2;
inline void GuildAddMember::clear_member_id() {
  member_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildAddMember::_internal_member_id() const {
  return member_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildAddMember::member_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.GuildAddMember.member_id)
  return _internal_member_id();
}
inline void GuildAddMember::_internal_set_member_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  member_id_ = value;
}
inline void GuildAddMember::set_member_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_member_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.GuildAddMember.member_id)
}

// -------------------------------------------------------------------

// GuildDelMember

// uint64 guild_id = 1;
inline void GuildDelMember::clear_guild_id() {
  guild_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildDelMember::_internal_guild_id() const {
  return guild_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildDelMember::guild_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.GuildDelMember.guild_id)
  return _internal_guild_id();
}
inline void GuildDelMember::_internal_set_guild_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  guild_id_ = value;
}
inline void GuildDelMember::set_guild_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.GuildDelMember.guild_id)
}

// uint64 member_id = 2;
inline void GuildDelMember::clear_member_id() {
  member_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildDelMember::_internal_member_id() const {
  return member_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GuildDelMember::member_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.GuildDelMember.member_id)
  return _internal_member_id();
}
inline void GuildDelMember::_internal_set_member_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  member_id_ = value;
}
inline void GuildDelMember::set_member_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_member_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.GuildDelMember.member_id)
}

// -------------------------------------------------------------------

// GuildMemberInfoList

// repeated .GuildMemberInfo member_list = 1;
inline int GuildMemberInfoList::_internal_member_list_size() const {
  return member_list_.size();
}
inline int GuildMemberInfoList::member_list_size() const {
  return _internal_member_list_size();
}
inline ::GuildMemberInfo* GuildMemberInfoList::mutable_member_list(int index) {
  // @@protoc_insertion_point(field_mutable:ServerMSG.GuildMemberInfoList.member_list)
  return member_list_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::GuildMemberInfo >*
GuildMemberInfoList::mutable_member_list() {
  // @@protoc_insertion_point(field_mutable_list:ServerMSG.GuildMemberInfoList.member_list)
  return &member_list_;
}
inline const ::GuildMemberInfo& GuildMemberInfoList::_internal_member_list(int index) const {
  return member_list_.Get(index);
}
inline const ::GuildMemberInfo& GuildMemberInfoList::member_list(int index) const {
  // @@protoc_insertion_point(field_get:ServerMSG.GuildMemberInfoList.member_list)
  return _internal_member_list(index);
}
inline ::GuildMemberInfo* GuildMemberInfoList::_internal_add_member_list() {
  return member_list_.Add();
}
inline ::GuildMemberInfo* GuildMemberInfoList::add_member_list() {
  // @@protoc_insertion_point(field_add:ServerMSG.GuildMemberInfoList.member_list)
  return _internal_add_member_list();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::GuildMemberInfo >&
GuildMemberInfoList::member_list() const {
  // @@protoc_insertion_point(field_list:ServerMSG.GuildMemberInfoList.member_list)
  return member_list_;
}

// -------------------------------------------------------------------

// SyncTaskPhase

// uint64 player_id = 1;
inline void SyncTaskPhase::clear_player_id() {
  player_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SyncTaskPhase::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SyncTaskPhase::player_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.SyncTaskPhase.player_id)
  return _internal_player_id();
}
inline void SyncTaskPhase::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  player_id_ = value;
}
inline void SyncTaskPhase::set_player_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.SyncTaskPhase.player_id)
}

// repeated uint64 task_phase_id = 2;
inline int SyncTaskPhase::_internal_task_phase_id_size() const {
  return task_phase_id_.size();
}
inline int SyncTaskPhase::task_phase_id_size() const {
  return _internal_task_phase_id_size();
}
inline void SyncTaskPhase::clear_task_phase_id() {
  task_phase_id_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SyncTaskPhase::_internal_task_phase_id(int index) const {
  return task_phase_id_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 SyncTaskPhase::task_phase_id(int index) const {
  // @@protoc_insertion_point(field_get:ServerMSG.SyncTaskPhase.task_phase_id)
  return _internal_task_phase_id(index);
}
inline void SyncTaskPhase::set_task_phase_id(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  task_phase_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:ServerMSG.SyncTaskPhase.task_phase_id)
}
inline void SyncTaskPhase::_internal_add_task_phase_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  task_phase_id_.Add(value);
}
inline void SyncTaskPhase::add_task_phase_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_task_phase_id(value);
  // @@protoc_insertion_point(field_add:ServerMSG.SyncTaskPhase.task_phase_id)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
SyncTaskPhase::_internal_task_phase_id() const {
  return task_phase_id_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
SyncTaskPhase::task_phase_id() const {
  // @@protoc_insertion_point(field_list:ServerMSG.SyncTaskPhase.task_phase_id)
  return _internal_task_phase_id();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
SyncTaskPhase::_internal_mutable_task_phase_id() {
  return &task_phase_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
SyncTaskPhase::mutable_task_phase_id() {
  // @@protoc_insertion_point(field_mutable_list:ServerMSG.SyncTaskPhase.task_phase_id)
  return _internal_mutable_task_phase_id();
}

// -------------------------------------------------------------------

// AddTaskPhase

// uint64 player_id = 1;
inline void AddTaskPhase::clear_player_id() {
  player_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AddTaskPhase::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AddTaskPhase::player_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.AddTaskPhase.player_id)
  return _internal_player_id();
}
inline void AddTaskPhase::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  player_id_ = value;
}
inline void AddTaskPhase::set_player_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.AddTaskPhase.player_id)
}

// uint64 task_phase_id = 2;
inline void AddTaskPhase::clear_task_phase_id() {
  task_phase_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AddTaskPhase::_internal_task_phase_id() const {
  return task_phase_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AddTaskPhase::task_phase_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.AddTaskPhase.task_phase_id)
  return _internal_task_phase_id();
}
inline void AddTaskPhase::_internal_set_task_phase_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  task_phase_id_ = value;
}
inline void AddTaskPhase::set_task_phase_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_task_phase_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.AddTaskPhase.task_phase_id)
}

// -------------------------------------------------------------------

// RemoveTaskPhase

// uint64 player_id = 1;
inline void RemoveTaskPhase::clear_player_id() {
  player_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 RemoveTaskPhase::_internal_player_id() const {
  return player_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 RemoveTaskPhase::player_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.RemoveTaskPhase.player_id)
  return _internal_player_id();
}
inline void RemoveTaskPhase::_internal_set_player_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  player_id_ = value;
}
inline void RemoveTaskPhase::set_player_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_player_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.RemoveTaskPhase.player_id)
}

// uint64 task_phase_id = 2;
inline void RemoveTaskPhase::clear_task_phase_id() {
  task_phase_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 RemoveTaskPhase::_internal_task_phase_id() const {
  return task_phase_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 RemoveTaskPhase::task_phase_id() const {
  // @@protoc_insertion_point(field_get:ServerMSG.RemoveTaskPhase.task_phase_id)
  return _internal_task_phase_id();
}
inline void RemoveTaskPhase::_internal_set_task_phase_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  task_phase_id_ = value;
}
inline void RemoveTaskPhase::set_task_phase_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_task_phase_id(value);
  // @@protoc_insertion_point(field_set:ServerMSG.RemoveTaskPhase.task_phase_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ServerMSG

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::ServerMSG::SystemVarChange_SystemVarChangeType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ServerMSG::SystemVarChange_SystemVarChangeType>() {
  return ::ServerMSG::SystemVarChange_SystemVarChangeType_descriptor();
}
template <> struct is_proto_enum< ::ServerMSG::OMsgID> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ServerMSG::OMsgID>() {
  return ::ServerMSG::OMsgID_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_server_5fmsg_2fserver_5fside_2eproto
