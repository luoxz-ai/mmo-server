name: C/C++ CI

on:
  push:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2

    - name: apt-all
      run: sudo bash server-depends/src/aptget_install.sh
      
    - name: get-depends-key
      id: get-depends-key
      run: echo "::set-output name=ver::$(/usr/bin/git log -1 --format='%H' /home/runner/work/mmo-server/mmo-server/server-depends)"

    - name: cache-depends
      id: cache-depends
      uses: actions/cache@v2
      with:
        path: server-depends
        key: server-depends--${{ steps.get-depends-key.outputs.ver }}
        restore-keys: server-depends--

    - name: build depends
      if: steps.cache-depends.outputs.cache-hit != 'true'
      run: bash server-depends/src/build_all.sh

    - name: Prepare ccache timestamp
      id: ccache_cache_timestamp
      shell: cmake -P {0}
      run: |
        string(TIMESTAMP current_date "%Y-%m-%d-%H;%M;%S" UTC)
        message("::set-output name=timestamp::${current_date}")
    - name: ccache cache files
      uses: actions/cache@v2
      with:
        path: ~/.ccache
        key: ccache-${{steps.ccache_cache_timestamp.outputs.timestamp}}
        restore-keys: ccache-
    - name: setup ccache
      run: |
          mkdir -p ~/.ccache
          echo "base_dir = ${GITHUB_WORKSPACE}" > ~/.ccache/ccache.conf
          echo "compression = true" >> ~/.ccache/ccache.conf
          echo "compression_level = 6" >> ~/.ccache/ccache.conf
          echo "max_size = 800M" >> ~/.ccache/ccache.conf
          ccache -s
          ccache -z

      

    - name: configure
      run: bash server-code/releasebuild.sh